name: Ansible

# The workflow triggered by any change in deployments/ansible/.
# 1. Run lint checks and Ansible Molecule tests.
# 2. Push a new "ansible-v<VERSION>" tag, if the version was updated
#    in deployments/ansible/galaxy.yml.

on:
  push:
    paths:
      - '.github/workflows/ansible.yml'
      - 'deployments/ansible/galaxy.yml'
    branches:
      - main
  pull_request:
    paths:
      - '.github/workflows/ansible.yml'
      - 'deployments/ansible/**'

permissions:
  contents: write

defaults:
  run:
    working-directory: 'deployments/ansible'

jobs:

  lint:
    name: Lint
    # Use 20.04.5 until https://github.com/open-telemetry/opentelemetry-collector-contrib/issues/16450 is resolved
    runs-on: ubuntu-20.04
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v3

      - name: Set up Python 3.
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install yamllint.
        run: pip3 install yamllint

      - name: Lint code.
        run: yamllint .

  test:
    name: Test
    needs: lint
    # Use 20.04.5 until https://github.com/open-telemetry/opentelemetry-collector-contrib/issues/16450 is resolved
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        ansible:
          - ansible~=2.10.0
          - ansible~=3.0
          - ansible~=4.0
        distro:
          - amazonlinux2
          - centos7
          - centos8
          - debian9
          - debian10
          - debian11
          - opensuse12
          - opensuse15
          - ubuntu1604
          - ubuntu1804
          - ubuntu2004
          - ubuntu2204

    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v3

      - name: Set up Python 3.
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install test dependencies.
        run: >
          pip3 install 
          ${{ matrix.ansible }}
          molecule==3.3.0 
          molecule-docker==0.2.4 
          docker==5.0.0
          ansible-lint==5.4.0

      - name: Run Molecule tests.
        run: molecule --base-config ./molecule/config/docker.yml test --all
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          MOLECULE_DISTRO: ${{ matrix.distro }}

  push-release-tag:
    name: Push Release Tag
    needs: test
    # Use 20.04.5 until https://github.com/open-telemetry/opentelemetry-collector-contrib/issues/16450 is resolved
    runs-on: ubuntu-20.04
    if: github.ref == 'refs/heads/main' 
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Read current version of the Ansible Collection
        id: read-galaxy-yaml
        uses: cumulusds/get-yaml-paths-action@v1
        with:
          file: deployments/ansible/galaxy.yml
          version: version
      
      - name: Ensure version is fetched from galaxy.yml
        if: steps.read-galaxy-yaml.outputs.version == ''
        run: echo "Fail to read version from galaxy.yml" && exit 1

      - name: Push new release tag if it doesn't exist
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
              const tagRef = "tags/ansible-v${{ steps.read-galaxy-yaml.outputs.version }}"
              const existingRefs = await github.rest.git.listMatchingRefs({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: tagRef
              })
              if (existingRefs.data.length === 0) {
                await github.rest.git.createRef({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  ref: "refs/" + tagRef,
                  sha: context.sha
                })
              } else {
                console.log(tagRef + " already exists")
              }
