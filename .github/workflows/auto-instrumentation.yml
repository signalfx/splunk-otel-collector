name: auto-instrumentation

on:
  push:
    branches:
      - main
  pull_request:
    paths:
      - '.github/workflows/auto-instrumentation.yml'
      - 'instrumentation/**'

concurrency:
  group: auto-instrumentation-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  libsplunk:
    # Use 20.04.5 until https://github.com/open-telemetry/opentelemetry-collector-contrib/issues/16450 is resolved
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        ARCH: [ "amd64", "arm64" ]
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v4

      - name: Set up QEMU
        if: ${{ matrix.ARCH == 'arm64' }}
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64
          image: tonistiigi/binfmt:qemu-v7.0.0

      - name: Build libsplunk.so
        run: make -C instrumentation dist ARCH=${{ matrix.ARCH }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: libsplunk-${{ matrix.ARCH }}
          path: ./instrumentation/dist/libsplunk_${{ matrix.ARCH }}.so

  build-package:
    name: build-package
    # Use 20.04.5 until https://github.com/open-telemetry/opentelemetry-collector-contrib/issues/16450 is resolved
    runs-on: ubuntu-20.04
    needs: [libsplunk]
    strategy:
      matrix:
        SYS_PACKAGE: [ "deb", "rpm" ]
        ARCH: [ "amd64", "arm64"]
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Downloading libsplunk-${{ matrix.ARCH }}
        uses: actions/download-artifact@v3
        with:
          name: libsplunk-${{ matrix.ARCH }}
          path: ./instrumentation/dist

      - name: Build ${{ matrix.SYS_PACKAGE }} ${{ matrix.ARCH }} package
        run: |
          gitRef=(${GITHUB_REF//// })
          if [[ "${gitRef[1]}" = "tags" ]] ;
          then
            echo "TAG_NAME=${gitRef[2]}" >> $GITHUB_ENV
          else
            echo "TAG_NAME=" >> $GITHUB_ENV
          fi
          make -C instrumentation ${{ matrix.SYS_PACKAGE }}-package SKIP_COMPILE=true VERSION="${TAG_NAME:-}" ARCH="${{ matrix.ARCH }}"

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: splunk-otel-auto-instrumentation-${{ matrix.ARCH }}-${{ matrix.SYS_PACKAGE }}
          path: ./instrumentation/dist/splunk-otel-auto-instrumentation*.${{ matrix.SYS_PACKAGE }}

  test-deb-package:
    name: test-deb-package
    # Use 20.04.5 until https://github.com/open-telemetry/opentelemetry-collector-contrib/issues/16450 is resolved
    runs-on: ubuntu-20.04
    needs: [build-package]
    strategy:
      matrix:
        DISTRO: [ "debian:8", "debian:9", "debian:10", "ubuntu:16.04", "ubuntu:18.04", "ubuntu:20.04" ]
        ARCH: [ "amd64", "arm64" ]
        exclude:
          - DISTRO: debian:8
            ARCH: arm64
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v4

      - name: Downloading splunk-otel-auto-instrumentation-${{ matrix.ARCH }}-deb
        uses: actions/download-artifact@v3
        with:
          name: splunk-otel-auto-instrumentation-${{ matrix.ARCH }}-deb
          path: ./instrumentation/dist

      - name: Set up QEMU
        if: ${{ matrix.ARCH == 'arm64' }}
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64
          image: tonistiigi/binfmt:qemu-v7.0.0

      - name: Test
        run: docker run --platform linux/${{ matrix.ARCH }} --rm -v $(pwd):/repo -w /repo ${{ matrix.DISTRO }} /repo/instrumentation/packaging/fpm/test.sh deb ${{ matrix.ARCH }}

  test-rpm-package:
    name: test-rpm-package
    # Use 20.04.5 until https://github.com/open-telemetry/opentelemetry-collector-contrib/issues/16450 is resolved
    runs-on: ubuntu-20.04
    needs: [build-package]
    strategy:
      matrix:
        DISTRO: [ "centos:7", "centos:8", "amazonlinux:2", "opensuse/leap:42", "opensuse/leap:15", "oraclelinux:7", "oraclelinux:8" ]
        ARCH: [ "amd64", "arm64" ]
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v4

      - name: Downloading splunk-otel-auto-instrumentation-${{ matrix.ARCH }}-rpm
        uses: actions/download-artifact@v3
        with:
          name: splunk-otel-auto-instrumentation-${{ matrix.ARCH }}-rpm
          path: ./instrumentation/dist

      - name: Set up QEMU
        if: ${{ matrix.ARCH == 'arm64'}}
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64
          image: tonistiigi/binfmt:qemu-v7.0.0

      - name: Test
        run: docker run --platform linux/${{ matrix.ARCH }} --rm -v $(pwd):/repo -w /repo ${{ matrix.DISTRO }} /repo/instrumentation/packaging/fpm/test.sh rpm ${{ matrix.ARCH }}
