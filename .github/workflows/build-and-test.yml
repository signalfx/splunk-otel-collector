name: build-and-test

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: build-and-test-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  PYTHON_VERSION: 3.8.5
  PIP_VERSION: 20.2.4
  REQUIREMENTS_PATH: "internal/buildscripts/packaging/tests/requirements.txt"
  RESULT_PATH: "~/testresults"
  GO_VERSION: 1.17.2

jobs:
  setup-environment:
    name: setup-environment
    runs-on: ubuntu-latest
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Caching dependency
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
            ~/go/bin
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

      - name: Installing dependency
        run: |
          make install-tools
  
  lint:
    name: lint
    runs-on: ubuntu-latest
    needs: [setup-environment]
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Caching dependency
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
            ~/go/bin
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

      - name: Lint
        run: |
          make -j4 checklicense impi lint misspell
  
  test:
    name: test
    runs-on: ubuntu-latest
    needs: [setup-environment]
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Caching dependency
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
            ~/go/bin
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

      - name: Unit tests
        run: |
          mkdir -p unit-test-results/junit
          trap "go-junit-report  -set-exit-code < unit-test-results/go-unit-tests.out > unit-test-results/junit/results.xml" EXIT
          make test | tee unit-test-results/go-unit-tests.out
      
      - name: Uploading artifacts
        uses: actions/upload-artifact@v2
        with:
          name: unit-test-results
          path: ./unit-test-results

  coverage:
    name: coverage
    runs-on: ubuntu-latest
    needs: [setup-environment]
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Caching dependency
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
            ~/go/bin
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
      
      - name: Coverage tests
        run: |
          make test-with-cover
      
      - name: Uploading artifacts
        uses: actions/upload-artifact@v2
        with:
          name: coverage-results
          path: ./coverage.html

      # DISABLE CODECOV UNTIL THE SCRIPT IS AUDITED AND WE ARE CERTAIN IT IS OK TO TO EXECUTE IT.
      # - name: Code coverage
      #   run: |
      #     bash <(curl -s https://codecov.io/bash)
