name: .NET Instrumentation Deployer Add-On

on:
  push:
    paths:
      - 'packaging/dotnet-instr-deployer-add-on/**'
  pull_request:
    paths:
      - 'packaging/dotnet-instr-deployer-add-on/**'
  workflow_dispatch:

env:
  GO_VERSION: 1.23.6

jobs:
  build:
    runs-on: windows-latest

    steps:

      - name: Check out the codebase.
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Unit tests
        working-directory: ./packaging/dotnet-instr-deployer-add-on
        shell: bash
        run: make test

      - name: Build and Package the .NET Instrumentation Deployer Add-On
        working-directory: ./packaging/dotnet-instr-deployer-add-on
        shell: bash
        run: make build-pack

      - name: Upload the .NET Instrumentation Deployer Add-On
        uses: actions/upload-artifact@v4
        with:
          name: splunk_otel_dotnet_deployer
          path: ./packaging/dotnet-instr-deployer-add-on/out/distribution/splunk_otel_dotnet_deployer.tgz

      # Run the .NET Instrumentation Deployer Add-On integration tests

      - name: Download the Splunk UF MSI
        shell: bash
        run: curl https://download.splunk.com/products/universalforwarder/releases/9.4.0/windows/splunkforwarder-9.4.0-6b4ebe426ca6-windows-x64.msi -o splunkforwarder.msi

      - name: Install then Splunk UF
        run: msiexec.exe /i "$PWD\splunkforwarder.msi" /qn /l*v install-log.txt AGREETOLICENSE=Yes

      - name: Run the integration test script
        run: |
          ./.github/workflows/scripts/win-test-dotnet-deployer-ta.ps1 `
            -tgzFilePath ./packaging/dotnet-instr-deployer-add-on/out/distribution/splunk_otel_dotnet_deployer.tgz `
            -splunkInstallPath $(Join-Path "${Env:ProgramFiles}" "SplunkUniversalForwarder")

