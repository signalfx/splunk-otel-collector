name: puppet-test

# Only run tests for main branch or if the PR has relevant changes
on: 
  push:
    branches:
      - main
  pull_request:
    paths:
      - '.github/workflows/puppet-test.yml'
      - 'deployments/puppet/**'
      - 'internal/buildscripts/packaging/tests/deployments/puppet/**'
      - 'internal/buildscripts/packaging/tests/helpers/**'
      - 'internal/buildscripts/packaging/tests/requirements.txt'
      - '!**.md'

concurrency:
  group: puppet-test-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  PYTHON_VERSION: "3.10"
  REQUIREMENTS_PATH: "internal/buildscripts/packaging/tests/requirements.txt"
  RESULT_PATH: "testresults"

jobs:
  puppet-lint:
    name: puppet-lint
    # Use 20.04.5 until https://github.com/open-telemetry/opentelemetry-collector-contrib/issues/16450 is resolved
    runs-on: ubuntu-20.04
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v3

      - name: Lint
        run: |
          make -C deployments/puppet lint

  puppet-rake-spec:
    name: puppet-rake-spec
    # Use 20.04.5 until https://github.com/open-telemetry/opentelemetry-collector-contrib/issues/16450 is resolved
    runs-on: ubuntu-20.04
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v3

      - name: Lint
        run: |
          make -C deployments/puppet rake-spec

  puppet-test:
    name: puppet-test
    # Use 20.04.5 until https://github.com/open-telemetry/opentelemetry-collector-contrib/issues/16450 is resolved
    runs-on: ubuntu-20.04
    needs:
      - puppet-lint
      - puppet-rake-spec
    strategy:
      matrix:
        PACKAGE_TYPE: [ "deb", "rpm" ]
        PUPPET_RELEASE: [ "6", "7" ]
        TEST_CASE: [ "with_fluentd", "without_fluentd", "with_instrumentation", "custom_vars" ]
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v3

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: pip
          cache-dependency-path: ${{ env.REQUIREMENTS_PATH }}

      - name: Install pytest
        run: pip install -r "${{ env.REQUIREMENTS_PATH }}"

      - name: Test puppet deployment
        timeout-minutes: 45
        run: |
          export PUPPET_RELEASE=${{ matrix.PUPPET_RELEASE }}
          mkdir -p ${{ env.RESULT_PATH }}
          echo ${{ matrix.PACKAGE_TYPE }}
          pytest -n2 --verbose -m ${{ matrix.PACKAGE_TYPE }} \
            -k ${{ matrix.TEST_CASE }} \
            --junitxml=${{ env.RESULT_PATH }}/results.xml \
            --html=${{ env.RESULT_PATH }}/results.html \
            --self-contained-html \
            internal/buildscripts/packaging/tests/deployments/puppet/puppet_test.py
      
      - name: Uploading artifacts
        uses: actions/upload-artifact@v3
        with:
          name: puppet-${{ matrix.PUPPET_RELEASE }}-${{ matrix.PACKAGE_TYPE }}-${{ matrix.TEST_CASE }}-result
          path: ${{ env.RESULT_PATH }}

  puppet-test-windows:
    name: puppet-test-windows
    runs-on: ${{ matrix.OS }}
    needs:
      - puppet-lint
      - puppet-rake-spec
    strategy:
      matrix:
        OS: [ "windows-2019", "windows-2022" ]
        PUPPET_RELEASE: [ "6.0.2", "7.21.0" ]
        TEST_CASE: [ "default", "custom_vars" ]
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v3

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: pip
          cache-dependency-path: ${{ env.REQUIREMENTS_PATH }}

      - name: Install pytest
        run: pip install -r "${{ env.REQUIREMENTS_PATH }}"

      - name: Test puppet deployment
        timeout-minutes: 45
        run: |
          $env:PUPPET_RELEASE = "${{ matrix.PUPPET_RELEASE }}"
          mkdir ${{ env.RESULT_PATH }}
          pytest --verbose -m windows `
            -k ${{ matrix.TEST_CASE }} `
            --junitxml=${{ env.RESULT_PATH }}/results.xml `
            --html=${{ env.RESULT_PATH }}/results.html `
            --self-contained-html `
            internal/buildscripts/packaging/tests/deployments/puppet/puppet_test.py

      - name: Uploading artifacts
        uses: actions/upload-artifact@v3
        with:
          name: puppet-${{ matrix.PUPPET_RELEASE }}-${{ matrix.OS }}-${{ matrix.TEST_CASE }}-result
          path: ${{ env.RESULT_PATH }}
