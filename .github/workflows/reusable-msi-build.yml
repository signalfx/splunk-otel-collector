name: msi-build

on:
  workflow_call:
    inputs:
      OS:
        required: true
        type: string

env:
  GO_VERSION: 1.24.6

jobs:
  msi-build:
    runs-on: ${{ inputs.OS }}
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v5

      - name: Downloading binaries-windows_amd64
        uses: actions/download-artifact@v5
        with:
          name: binaries-windows_amd64
          path: ./bin

      - name: Downloading agent-bundle-windows
        uses: actions/download-artifact@v5
        with:
          name: agent-bundle-windows-${{ inputs.OS }}
          path: ./dist

      - name: Downloading msi-custom-actions
        uses: actions/download-artifact@v5
        with:
          name: msi-custom-actions
          path: ./packaging/msi/SplunkCustomActions/bin/Release

      - name: Build MSI
        shell: bash
        run: |
          mkdir -p dist
          if find ./packaging/msi -name "*.wxs" | xargs grep -q "RemoveFolderEx"; then
            echo "Custom action 'RemoveFolderEx' can't be used without corresponding WiX upgrade due to CVE-2024-29188."
            exit 1
          fi
          if ! test -f ./dist/agent-bundle_windows_amd64.zip; then
            echo "./dist/agent-bundle_windows_amd64.zip not found! Either download a pre-built bundle to ./dist/, or run './packaging/bundle/scripts/windows/make.ps1 bundle' on a windows host and copy it to ./dist/."
            exit 1
          fi
          PROJECT_DIR="$PWD"
          WORK_DIR="$PWD/work"
          SUPPORT_BUNDLE_SCRIPT="$PWD/packaging/msi/splunk-support-bundle.ps1"
          FLUENTD_CONFIG="$PWD/packaging/fpm/etc/otel/collector/fluentd/fluent.conf"
          MSI_SRC_DIR="$PWD/packaging/msi"
          VERSION=""
          DOCKER_REPO=docker.io
          JMX_METRIC_GATHERER_RELEASE=$(cat packaging/jmx-metric-gatherer-release.txt)
          ./packaging/msi/build.sh "$VERSION" "$DOCKER_REPO" "$JMX_METRIC_GATHERER_RELEASE"

      - name: Uploading msi build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: msi-build-${{ inputs.OS }}
          path: ./dist/*.msi
