#!/bin/bash

set -euo pipefail

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
REPO_DIR=$( cd "$SCRIPT_DIR/../../.." && pwd )
DEPENDABOT_PATH="$SCRIPT_DIR/../../dependabot.yml"
ALL_GO_MODULES=$( cd "$REPO_DIR" && find . -type f -name "go.mod" -exec dirname {} \; | sort | egrep  '^./' )
ALL_PYTHON_DEPS=$( cd "$REPO_DIR" && find . -type f \( -name "setup.py" -o -name "requirements.txt" \) -exec dirname {} \; | sort | egrep  '^./' )
ALL_DOCKERFILES=$( cd "$REPO_DIR" && find . -type f -name Dockerfile -exec dirname {} \; | grep -v '^./tests' | grep -v './deployments' | sort | egrep  '^./' )
ALL_MAVEN_DEPS=$( cd "$REPO_DIR" && find . -type f -name pom.xml -exec dirname {} \; | grep -v '^./tests' | sort | egrep  '^./' )

if [[ ! -f "$DEPENDABOT_PATH" ]]; then
    echo "$DEPENDABOT_PATH not found!"
    exit 1
fi

get_gomod_ignores() {
    dir=${1#.}

    # ignore otel deps since we'll handle them separately
    cat <<EOH >&1
    ignore:
      - dependency-name: "go.opentelemetry.io/*"
      - dependency-name: "github.com/open-telemetry/*"
EOH

    # https://github.com/signalfx/splunk-otel-collector/pull/3040
    case "$dir" in /|*smartagentreceiver|*signalfx-agent)
        cat <<EOH >&1
      - dependency-name: "github.com/openshift/*"
        versions: ["v3.9.0+incompatible"]
EOH
    esac
}

echo "Recreate dependabot.yml file"
cat <<EOH > "$DEPENDABOT_PATH"
# File generated by "make gendependabot"; DO NOT EDIT.

version: 2
updates:
EOH

echo "Add github-actions entry for \"/\""
cat <<EOH >> "$DEPENDABOT_PATH"
  - package-ecosystem: "github-actions"
    directory: "/"
    schedule:
      interval: "weekly"
EOH

for dir in "/" $ALL_GO_MODULES; do
    echo "Add gomod entry for \"${dir#.}\""
    cat <<EOH >> "$DEPENDABOT_PATH"
  - package-ecosystem: "gomod"
    directory: "${dir#.}"
$(get_gomod_ignores "$dir")
    schedule:
      interval: "weekly"
EOH
done

for dir in $ALL_PYTHON_DEPS; do
    echo "Add pip entry for \"${dir#.}\""
    cat <<EOH >> "$DEPENDABOT_PATH"
  - package-ecosystem: "pip"
    directory: "${dir#.}"
    schedule:
      interval: "weekly"
EOH
done

for dir in $ALL_DOCKERFILES; do
    echo "Add docker entry for \"${dir#.}\""
    cat <<EOH >> "$DEPENDABOT_PATH"
  - package-ecosystem: "docker"
    directory: "${dir#.}"
    schedule:
      interval: "weekly"
EOH
done

for dir in $ALL_MAVEN_DEPS; do
    echo "Add maven entry for \"${dir#.}\""
    cat <<EOH >> "$DEPENDABOT_PATH"
  - package-ecosystem: "maven"
    directory: "${dir#.}"
    schedule:
      interval: "weekly"
EOH
done
