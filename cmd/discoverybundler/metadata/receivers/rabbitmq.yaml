receiver_id: rabbitmq
service_type: rabbitmq
properties_tmpl: |
  enabled: true
  rule:
    docker_observer: type == "container" and any([name, image, command], {# matches "(?i)rabbitmq.*"}) and not (command matches "splunk.discovery")
    host_observer: type == "hostport" and command matches "(?i)rabbitmq.*" and not (command matches "splunk.discovery")
    k8s_observer: type == "port" and pod.name matches "(?i)rabbitmq.*"
  config:
    default:
      endpoint: '`endpoint`'
      username: {{ defaultValue }}
      password: {{ defaultValue }}
      collection_interval: 10s
      metrics:
        # Enable all OOTB dashboard default metrics
        rabbitmq.node.disk_free:
            enabled: true
        rabbitmq.node.mem_used:
            enabled: true
        rabbitmq.node.mem_limit:
            enabled: true
        rabbitmq.node.fd_used:
            enabled: true
        rabbitmq.node.uptime:
            enabled: true
        rabbitmq.node.fd_total:
            enabled: true
        rabbitmq.node.disk_free_limit:
            enabled: true
        rabbitmq.node.io_write_avg_time:
            enabled: true
        rabbitmq.node.io_read_avg_time:
            enabled: true
        rabbitmq.node.io_sync_avg_time:
            enabled: true
status:
  metrics:
    - status: successful
      strict: rabbitmq.consumer.count
      message: RabbitMQ receiver is working!
  statements:
    - status: failed
      regexp: 'connect: network is unreachable'
      message: The endpoint is refusing RabbitMQ server connections.
    - status: failed
      regexp: 'connect: connection refused'
      message: The endpoint is refusing RabbitMQ server connections.
