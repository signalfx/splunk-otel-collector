#####################################################################################
# This file is generated by the Splunk Distribution of the OpenTelemetry Collector. #
#                                                                                   #
# It reflects the default configuration bundled in the Collector executable for use #
# in discovery mode (--discovery) and is provided for reference or customization.   #
# Please note that any changes made to this file will need to be reconciled during  #
# upgrades of the Collector.                                                        #
#####################################################################################
# smartagent/collectd/mysql:
#   enabled: true
#   rule:
#     docker_observer: type == "container" and any([name, image, command], {# matches "(?i)mysql"}) and not (command matches "splunk.discovery")
#     host_observer: type == "hostport" and command matches "(?i)mysqld"
#     k8s_observer: type == "port" and pod.name matches "(?i)mysql"
#   config:
#     default:
#       type: collectd/mysql
#       username: splunk.discovery.default
#       password: splunk.discovery.default
#       databases:
#         - name: splunk.discovery.default
#       isolatedCollectd: true
#   status:
#     metrics:
#       successful:
#         - strict: mysql_octets.rx
#           first_only: true
#           log_record:
#             severity_text: info
#             body: smartagent/collectd/mysql receiver is working!
#     statements:
#       failed:
#         - regexp: "mysql plugin: Failed to connect to database .* at server .* Can't connect to MySQL server on .* [(]111[)]"
#           first_only: true
#           log_record:
#             severity_text: info
#             append_pattern: true
#             body: The container is refusing MySQL connections.
#       partial:
#         - regexp: 'mysql plugin: Failed to connect to database .* at server .* Access denied for user .* [(]using password: .*[)]'
#           first_only: true
#           log_record:
#             severity_text: info
#             append_pattern: true
#             body: >-
#               Make sure your user credentials are correctly specified using the
#               `--set splunk.discovery.receivers.smartagent/collectd/mysql.config.username="<username>"` and
#               `--set splunk.discovery.receivers.smartagent/collectd/mysql.config.password="<password>"` command or the
#               `SPLUNK_DISCOVERY_RECEIVERS_smartagent_x2f_collectd_x2f_mysql_CONFIG_username="<username>"` and
#               `SPLUNK_DISCOVERY_RECEIVERS_smartagent_x2f_collectd_x2f_mysql_CONFIG_password="<password>"` environment variables.
#         - regexp: 'mysql plugin: Failed to connect to database .* at server .* Unknown database'
#           first_only: true
#           log_record:
#             severity_text: info
#             append_pattern: true
#             body: >-
#               Make sure your MySQL databases are correctly specified using the
#               `--set splunk.discovery.receivers.smartagent/collectd/mysql.config.databases="[{name: '<db-name-0>'}, {name: '<db-name-1>', username: '<username>', password: '<password>'}]"` command or the
#               `SPLUNK_DISCOVERY_RECEIVERS_smartagent_x2f_collectd_x2f_mysql_CONFIG_databases="[{name: '<db-name-0>'}, {name: '<db-name-1>', username: '<username>', password: '<password>'}]"` environment variable.
#         - regexp: 'mysql plugin: Failed to connect to database .* at server .* Access denied for user .* to database'
#           first_only: true
#           log_record:
#             severity_text: info
#             append_pattern: true
#             body: >-
#               Make sure your MySQL databases and auth information are correctly specified using the
#               `--set splunk.discovery.receivers.smartagent/collectd/mysql.config.databases="[{name: '<db-name-0>'}, {name: '<db-name-1>', username: '<username>', password: '<password>'}]"` command or the
#               `SPLUNK_DISCOVERY_RECEIVERS_smartagent_x2f_collectd_x2f_mysql_CONFIG_databases="[{name: '<db-name-0>'}, {name: '<db-name-1>', username: '<username>', password: '<password>'}]"` environment variable.
