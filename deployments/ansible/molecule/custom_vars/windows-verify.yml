---
- name: Verify scenario with custom variables
  hosts: all
  gather_facts: true
  become: no
  vars:
    collector_reg_values:
      SPLUNK_CONFIG: '{{ ansible_env.ProgramData }}\Splunk\OpenTelemetry Collector\custom_config.yml'
      SPLUNK_INGEST_URL: https://fake-splunk-ingest.com
      SPLUNK_API_URL: https://fake-splunk-api.com
      SPLUNK_HEC_URL: https://fake-splunk-hec.com
      SPLUNK_HEC_TOKEN: fake-hec-token
      SPLUNK_MEMORY_TOTAL_MIB: "256"
      GOMEMLIMIT: 230
      MY_CUSTOM_VAR1: value1
      MY_CUSTOM_VAR2: value2
    iis_reg_values:
      COR_ENABLE_PROFILING: "1"
      COR_PROFILER: "{918728DD-259F-4A6A-AC2B-B85E1B658318}"
      CORECLR_ENABLE_PROFILING: "1"
      CORECLR_PROFILER: "{918728DD-259F-4A6A-AC2B-B85E1B658318}"
      OTEL_RESOURCE_ATTRIBUTES: >-
        deployment.environment=test-environment,dotnet-tag=dotnet-tag-value,splunk.zc.method=splunk-otel-dotnet-1.9.0
      OTEL_SERVICE_NAME: "test-service-name"
      SPLUNK_PROFILER_ENABLED: "true"
      SPLUNK_PROFILER_MEMORY_ENABLED: "true"
      SPLUNK_DOTNET_VAR1: dotnet-value1
      SPLUNK_DOTNET_VAR2: dotnet-value2
  tasks:
    - name: Check splunk-otel-collector service
      ansible.windows.win_service:
        name: splunk-otel-collector
        state: started
      check_mode: yes
      register: service_status

    - name: Check fluentdwinsvc service
      ansible.windows.win_service:
        name: fluentdwinsvc
        state: started
      check_mode: yes
      register: service_status

    - name: Assert fluentdwinsvc service status
      assert:
        that: not service_status.changed

    - name: Check custom_config.yml
      ansible.windows.win_stat:
        path: '{{ansible_env.ProgramData}}\Splunk\OpenTelemetry Collector\custom_config.yml'
      register: custom_collector_config

    - name: Assert custom_config.yml exists
      assert:
        that: custom_collector_config.stat.exists

    - name: Check fluentd custom_config.conf
      ansible.windows.win_stat:
        path: '{{ansible_env.ProgramFiles}}\Splunk\OpenTelemetry Collector\fluentd\custom_config.conf'
        get_checksum: yes
      register: custom_fluentd_config

    - name: Assert fluentd custom_config.conf exists
      assert:
        that: custom_fluentd_config.stat.exists

    - name: Check td-agent.conf exists
      ansible.windows.win_stat:
        path: '{{ansible_env.SystemDrive}}\opt\td-agent\etc\td-agent\td-agent.conf'
        get_checksum: yes
      register: td_agent_config

    - name: Assert fluentd custom_config.conf is used
      assert:
        that: custom_fluentd_config.stat.checksum == td_agent_config.stat.checksum

    - name: Get IIS env vars
      ansible.windows.win_reg_stat:
        path: HKLM:\SYSTEM\CurrentControlSet\Services\W3SVC
        name: Environment
      register: iis_env

    - name: Verify IIS env vars
      assert:
        that: (item.key + '=' + (item.value | string)) in iis_env.value
      loop: "{{ iis_reg_values | dict2items }}"

    - name: Get splunk-otel-collector service env vars
      ansible.windows.win_reg_stat:
        path: HKLM:\SYSTEM\CurrentControlSet\Services\splunk-otel-collector
        name: Environment
      register: collector_env

    - name: Verify splunk-otel-collector service env vars
      assert:
        that: (item.key + '=' + (item.value | string)) in collector_env.value
      loop: "{{ collector_reg_values | dict2items }}"
