---

- name: Get splunk-otel-collector latest version
  ansible.windows.win_get_url:
    url: "{{win_base_url}}/splunk-otel-collector/msi/{{package_stage}}/latest.txt"
    dest: "%TEMP%"
    proxy_password: "{{ win_proxy_password | default(omit) }}"
    proxy_url: "{{ win_proxy_url | default(omit) }}"
    proxy_username: "{{ win_proxy_username | default(omit) }}"
    use_proxy: "{{ win_use_proxy }}"
  register: latest
  when: splunk_otel_collector_version == "latest"

- name: get content of remote file
  slurp:
    src: "{{latest.dest}}"
  register: version
  when: splunk_otel_collector_version == "latest"

- name: decode remote file content for latest version
  set_fact:
    splunk_otel_collector_version: "{{version.content | b64decode }}"
  when: splunk_otel_collector_version == "latest"

- name: Use MSI capabilities to install the collector if possible
  set_fact:
    splunk_collector_msi_is_configurable: true
  when: splunk_otel_collector_version is version('0.98.0', '>=')

- name: Get splunk-otel-collector for windows
  ansible.windows.win_get_url:
    url: "{{win_base_url}}/splunk-otel-collector/msi/{{package_stage}}/splunk-otel-collector-\
          {{splunk_otel_collector_version}}-amd64.msi"
    dest: "%TEMP%"
    proxy_password: "{{ win_proxy_password | default(omit) }}"
    proxy_url: "{{ win_proxy_url | default(omit) }}"
    proxy_username: "{{ win_proxy_username | default(omit) }}"
    use_proxy: "{{ win_use_proxy }}"
  register: otel_msi_package

# TDDO: DELETE THIS
- name: Get Splunk OpenTelemetry Collector options list - legacy variables used to set registry
  set_fact:
    splunk_otel_collector_options_list: |-
      {%- set value = item.value -%}
      {{ (splunk_otel_collector_options_list | default([])) + [item.key + '=' + (value | string)] }}
  loop: >
    {{ splunk_otel_collector_options | default({}) | combine(splunk_otel_collector_additional_env_vars) | dict2items }}

- debug:
    var: splunk_otel_collector_options_list

- name: Build the arguments for the MSI installer
  when: splunk_collector_msi_is_configurable is defined
  set_fact:
    msi_unfiltered_arguments:
      - SPLUNK_ACCESS_TOKEN={{ splunk_access_token }}
      - "{{ 'SPLUNK_API_URL=' + splunk_api_url if splunk_api_url != '' else '' }}"
      - "{{ 'GOMEMLIMIT=' + (gomemlimit | string) if (gomemlimit | string) != '' else '' }}"
      - "{{ 'SPLUNK_BUNDLE_DIR='+ splunk_bundle_dir if splunk_bundle_dir != '' else '' }}"
      - "{{ 'SPLUNK_COLLECTD_DIR=' + splunk_collectd_dir if splunk_collectd_dir != '' else '' }}"
      - "{{ 'SPLUNK_CONFIG=' + splunk_otel_collector_config if splunk_otel_collector_config != '' else '' }}"
      - "{{ 'SPLUNK_INGEST_URL=' + splunk_ingest_url if splunk_ingest_url != '' else '' }}"
      - "{{ 'SPLUNK_HEC_TOKEN=' + splunk_hec_token if splunk_hec_token != '' else '' }}"
      - "{{ 'SPLUNK_HEC_URL=' + splunk_hec_url if splunk_hec_url != '' else '' }}"
      - "{{ 'SPLUNK_LISTEN_INTERFACE=' + splunk_listen_interface if splunk_listen_interface != '' else '' }}"
      - "{{ 'SPLUNK_MEMORY_TOTAL_MIB=' + (splunk_memory_total_mib | string)
               if (splunk_memory_total_mib | string) != '' else '' }}"
      - "{{ 'SPLUNK_REALM=' + splunk_realm if splunk_realm != '' else '' }}"

- name: Filter out undefined arguments
  when: splunk_collector_msi_is_configurable is defined
  set_fact:
    msi_arguments: "{{ msi_unfiltered_arguments | reject('eq', '') | list }}"

- debug:
    var: msi_arguments

- name: Surround msi argument values wtih quotes to properly handle spaces in values
  when: splunk_collector_msi_is_configurable is defined
  set_fact:
    msi_arguments: "{{ msi_arguments | map('regex_replace', '^(.*)=(.*)$', '\\1=\\"\\2\\"') | list }}"

- debug:
    var: msi_arguments

- name: Check my username
  ansible.windows.win_whoami:
  become: true

- name: Set the MSI install log path
  ansible.builtin.set_fact:
    msi_install_log_path: "C:\\Users\\vagrant\\AppData\\Local\\Temp\\{{ lookup('pipe', 'date +%Y%m%dT%H%M%S') }}.log"
  when: splunk_collector_msi_is_configurable is defined

- name: Install splunk-otel-collector-msi
  when: splunk_collector_msi_is_configurable is defined
  ansible.windows.win_package:
    path: "{{ otel_msi_package.dest }}"
    state: present
    log_path: "{{ msi_install_log_path }}"
    arguments: "{{ msi_arguments }}"
  ignore_errors: true
  register: msi_installed
  async: 900 # 15 minutes
  poll: 10

- debug:
    var: msi_installed

- name: Stat log path for splunk-otel-collector MSI install
  ansible.windows.win_stat:
    path: "{{ msi_install_log_path }}"
  register: msi_install_log_stat
  ignore_errors: true
  when: splunk_collector_msi_is_configurable is defined

- debug:
    var: msi_install_log_stat

- name: Stat async results path for splunk-otel-collector MSI install
  ansible.windows.win_stat:
    path: "{{ msi_installed.results_file }}"
  register: async_results_stat
  ignore_errors: true
  when: splunk_collector_msi_is_configurable is defined and msi_installed.results_file is defined

- debug:
    var: async_results_stat

- name: Fetch log file from splunk-otel-collector MSI install to host
  ansible.builtin.fetch:
    src: "{{ msi_install_log_path }}"
    dest: /tmp/log/
    flat: true
  ignore_errors: true
  when: splunk_collector_msi_is_configurable is defined

- name: Fetch async log file from splunk-otel-collector MSI install
  ansible.builtin.fetch:
    src: "{{ msi_installed.results_file }}"
    dest: /tmp/log/
    flat: true
  ignore_errors: true
  when: splunk_collector_msi_is_configurable and msi_installed.results_file is defined

- name: Fail if MSI install failed
  ansible.builtin.fail:
    msg: "Splunk OpenTelemetry Collector MSI installation failed. Check the log file for details."
  # TODO: This condition needs fixed to account for any failure other than async
  when: msi_installed.rc is not defined and splunk_collector_msi_is_configurable is defined

- name: Install splunk-otel-collector-msi-legacy
  when: splunk_collector_msi_is_configurable is undefined
  ansible.windows.win_package:
    path: "{{otel_msi_package.dest}}"
    state: present

- name: Merge custom config into the default config
  ansible.builtin.import_tasks: config_override.yml
  when:
    - splunk_collector_msi_is_configurable is undefined
    - splunk_config_override != ''

- name: Copy the custom config
  ansible.windows.win_copy:
    content: '{{ updated_config | to_nice_yaml (indent=2) }}'
    dest: "{{ splunk_otel_collector_config }}"
  when:
    - splunk_collector_msi_is_configurable is undefined
    - splunk_config_override != ''

- name: Push Custom Config file for splunk-otel-collector, If provided
  ansible.windows.win_template:
    src: "{{splunk_otel_collector_config_source}}"
    dest: "{{splunk_otel_collector_config}}"
  when:
    - splunk_collector_msi_is_configurable is undefined
    - splunk_otel_collector_config_source != ""
