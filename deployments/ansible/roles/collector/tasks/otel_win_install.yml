---

- name: Get local MSI installer
  ansible.builtin.import_tasks: win_local_msi.yml
  when: local_artifact_testing_enabled

- name: Get remote MSI installer
  ansible.builtin.import_tasks: win_download_remote_msi.yml
  when: not local_artifact_testing_enabled

- name: Use MSI capabilities to install the collector if possible
  set_fact:
    splunk_collector_msi_is_configurable: true
  when:
    - local_artifact_testing_enabled or splunk_otel_collector_version is version('0.98.0', '>=')

- name: Build the arguments for the MSI installer
  when: splunk_collector_msi_is_configurable is defined
  set_fact:
    msi_unfiltered_arguments:
      - SPLUNK_ACCESS_TOKEN={{ splunk_access_token }}
      - "{{ 'SPLUNK_API_URL=' + splunk_api_url if splunk_api_url != '' else '' }}"
      - "{{ 'GOMEMLIMIT=' + (gomemlimit | string) if (gomemlimit | string) != '' else '' }}"
      - "{{ 'SPLUNK_BUNDLE_DIR='+ splunk_bundle_dir if splunk_bundle_dir != '' else '' }}"
      - "{{ 'SPLUNK_COLLECTD_DIR=' + splunk_collectd_dir if splunk_collectd_dir != '' else '' }}"
      - "{{ 'SPLUNK_CONFIG=' + splunk_otel_collector_config if splunk_otel_collector_config != '' else '' }}"
      - "{{ 'SPLUNK_INGEST_URL=' + splunk_ingest_url if splunk_ingest_url != '' else '' }}"
      - "{{ 'SPLUNK_HEC_TOKEN=' + splunk_hec_token if splunk_hec_token != '' else '' }}"
      - "{{ 'SPLUNK_HEC_URL=' + splunk_hec_url if splunk_hec_url != '' else '' }}"
      - "{{ 'SPLUNK_LISTEN_INTERFACE=' + splunk_listen_interface if splunk_listen_interface != '' else '' }}"
      - "{{ 'SPLUNK_MEMORY_TOTAL_MIB=' + (splunk_memory_total_mib | string)
               if (splunk_memory_total_mib | string) != '' else '' }}"
      - "{{ 'SPLUNK_REALM=' + splunk_realm if splunk_realm != '' else '' }}"

- name: Filter out undefined arguments
  when: splunk_collector_msi_is_configurable is defined
  set_fact:
    msi_arguments: "{{ msi_unfiltered_arguments | reject('eq', '') | list }}"

- set_fact:
    args_without_spaces: []
    args_with_spaces: []

- name: Surround msi argument values with quotes to properly handle spaces in values
  when:
    - splunk_collector_msi_is_configurable is defined
    - item is search(' ')
  set_fact:
    args_with_spaces: "{{ args_with_spaces + [item | ansible.builtin.regex_replace(_regex, _replacement)] }}"
  vars:
    _regex: '^(.*)=(.*)$'
    _replacement: '\1="\2"'
  loop: "{{ msi_arguments }}"

- name: compile args without spaces
  set_fact:
    args_without_spaces: "{{ args_without_spaces + [item] }}"
  loop: "{{ msi_arguments }}"
  when:
    - splunk_collector_msi_is_configurable is defined
    - item is not search(' ')

- set_fact:
    msi_arguments: "{{ args_with_spaces + args_without_spaces }}"

- name: Join msi argument list into space separated string
  when: splunk_collector_msi_is_configurable is defined
  set_fact:
    msi_arguments: "{{ msi_arguments | join(' ') }}"

- name: Install splunk-otel-collector-msi
  when: splunk_collector_msi_is_configurable is defined
  ansible.windows.win_package:
    path: "{{ msi_path }}"
    state: present
    arguments: "{{ msi_arguments }}"

- name: Install splunk-otel-collector-msi-legacy
  when: splunk_collector_msi_is_configurable is undefined
  ansible.windows.win_package:
    path: "{{ msi_path }}"
    state: present

- name: Merge custom config into the default config
  ansible.builtin.import_tasks: config_override.yml
  when: splunk_config_override != ''

- name: Copy the custom config
  ansible.windows.win_copy:
    content: '{{ updated_config | to_nice_yaml (indent=2) }}'
    dest: "{{ splunk_otel_collector_config }}"
  when: splunk_config_override != ''

- name: Push Custom Config file for splunk-otel-collector, If provided
  ansible.windows.win_template:
    src: "{{splunk_otel_collector_config_source}}"
    dest: "{{splunk_otel_collector_config}}"
  when: splunk_otel_collector_config_source != ""
