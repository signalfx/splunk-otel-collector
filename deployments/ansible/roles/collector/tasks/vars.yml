---
- name: set default vars for Linux
  set_fact:
    splunk_otel_collector_config: |-
      {%- if splunk_otel_collector_config -%}
        {{ splunk_otel_collector_config }}
      {%- else -%}
        /etc/otel/collector/agent_config.yaml
      {%- endif -%}
    splunk_fluentd_config: |-
      {%- if splunk_fluentd_config -%}
        {{ splunk_fluentd_config }}
      {%- else -%}
        /etc/otel/collector/fluentd/fluent.conf
      {%- endif -%}
    splunk_bundle_dir: |-
      {%- if splunk_bundle_dir -%}
        {{ splunk_bundle_dir }}
      {%- else -%}
        /usr/lib/splunk-otel-collector/agent-bundle
      {%- endif -%}
    splunk_collectd_dir: |-
      {%- if splunk_collectd_dir -%}
        {{ splunk_collectd_dir }}
      {%- else -%}
        /usr/lib/splunk-otel-collector/agent-bundle/run/collectd
      {%- endif -%}
    fluentd_supported: |-
      {%- if ansible_os_family == "Suse" -%}
        false
      {%- elif ansible_distribution == "Amazon" and ansible_distribution_version == "2023" -%}
        false
      {%- elif ansible_os_family == "Debian" and ansible_distribution_major_version == "12" -%}
        false
      {%- else -%}
        true
      {%- endif -%}
  when: ansible_os_family != "Windows"

- name: set configurable defaults for Windows
  ansible.builtin.import_tasks: win_configurable_vars.yml
  when: ansible_os_family == "Windows"

- name: set default vars for Windows
  set_fact:
    splunk_fluentd_config: |-
      {%- if splunk_fluentd_config -%}
        {{ splunk_fluentd_config }}
      {%- else -%}
        {{ansible_env.ProgramFiles}}\Splunk\OpenTelemetry Collector\fluentd\td-agent.conf
      {%- endif -%}
    td_agent_version: |-
      {%- if td_agent_version -%}
        {{ td_agent_version }}
      {%- else -%}
        4.3.2
      {%- endif -%}
    registry_key: HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Environment
    package_stage: release
    win_base_url: https://dl.signalfx.com
    win_use_proxy: "no"
    dotnet_options:
      COR_ENABLE_PROFILING: "1"
      COR_PROFILER: "{B4C89B0F-9908-4F73-9F59-0D77C5A06874}"
      CORECLR_ENABLE_PROFILING: "1"
      CORECLR_PROFILER: "{B4C89B0F-9908-4F73-9F59-0D77C5A06874}"
      SIGNALFX_ENV: "{{ signalfx_dotnet_auto_instrumentation_environment }}"
      SIGNALFX_SERVICE_NAME: "{{ signalfx_dotnet_auto_instrumentation_service_name }}"
      SIGNALFX_GLOBAL_TAGS: "{{ signalfx_dotnet_auto_instrumentation_global_tags }}"
      SIGNALFX_PROFILER_ENABLED: "{{ signalfx_dotnet_auto_instrumentation_enable_profiler }}"
      SIGNALFX_PROFILER_MEMORY_ENABLED: "{{ signalfx_dotnet_auto_instrumentation_enable_profiler_memory }}"
    iis_registry_key: HKLM:\SYSTEM\CurrentControlSet\Services\W3SVC
    splunk_otel_collector_options:
      SPLUNK_ACCESS_TOKEN: "{{ splunk_access_token }}"
      SPLUNK_API_URL: "{{ splunk_api_url }}"
      GOMEMLIMIT: "{{ gomemlimit if gomemlimit != '' else omit }}"
      SPLUNK_BUNDLE_DIR: >-
        {{ splunk_bundle_dir if splunk_bundle_dir != '' else
        '{{ansible_env.ProgramFiles}}\Splunk\OpenTelemetry Collector\agent-bundle' }}
      SPLUNK_COLLECTD_DIR: "{{ splunk_collectd_dir if splunk_collectd_dir != '' else omit }}"
      SPLUNK_CONFIG: >-
        {{ splunk_otel_collector_config if splunk_otel_collector_config != '' else
        '{{ ansible_env.ProgramData }}\Splunk\OpenTelemetry Collector\agent_config.yaml' }}
      SPLUNK_INGEST_URL: "{{ splunk_ingest_url }}"
      SPLUNK_HEC_TOKEN: "{{ splunk_hec_token }}"
      SPLUNK_HEC_URL: "{{ splunk_hec_url }}"
      SPLUNK_LISTEN_INTERFACE: "{{ splunk_listen_interface if splunk_listen_interface != '' else omit }}"
      SPLUNK_MEMORY_TOTAL_MIB: "{{ splunk_memory_total_mib }}"
      SPLUNK_REALM: "{{ splunk_realm }}"
    splunk_otel_collector_service_registry_key: HKLM:\SYSTEM\CurrentControlSet\Services\splunk-otel-collector
  when: ansible_os_family == "Windows"
