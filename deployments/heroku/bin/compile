#!/bin/sh

# Copyright Splunk Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
BUILDPACK_DIR=$(cd "$(dirname "$0")"; cd ..; pwd)

indent() {
  sed -u 's/^/       /'
}

# Use the latest version of Splunk OpenTelemetry Connector if none is specified
SPLUNK_OTEL_VERSION=$(curl -s https://api.github.com/repos/signalfx/splunk-otel-collector/releases/latest | grep tarball_url | cut -d'"' -f4 | cut -d'/' -f8 | cut -d'v' -f2)
# Get Splunk OpenTelemetry Connector version from the environment if available
if [ -f "$ENV_DIR/SPLUNK_OTEL_VERSION" ]; then
  SPLUNK_OTEL_VERSION=$(cat "$ENV_DIR/SPLUNK_OTEL_VERSION")
fi
splunk_otel_connector="otelcol_linux_amd64"

# Use the latest version of the SignalFx Agent if none is specified
SFX_AGENT_VERSION=$(curl -s https://api.github.com/repos/signalfx/signalfx-agent/releases/latest | grep tarball_url | cut -d'"' -f4 | cut -d'/' -f8 | cut -d'v' -f2)
# Get SignalFx Agent version from the environment if available
if [ -f "$ENV_DIR/SFX_AGENT_VERSION" ]; then
  SFX_AGENT_VERSION=$(cat "$ENV_DIR/SFX_AGENT_VERSION")
fi
signalfx_agent_tar="signalfx-agent-$SFX_AGENT_VERSION.tar.gz"

SPLUNK_CONFIG_DIR="$BUILD_DIR/.splunk"
cp "$BUILDPACK_DIR/setup/config.yaml" "$SPLUNK_CONFIG_DIR"

echo "-----> Downloading Splunk OpenTelemetry Connector $SPLUNK_OTEL_VERSION ($splunk_otel_connector)"
wget -P "$SPLUNK_CONFIG_DIR/" "https://github.com/signalfx/splunk-otel-collector/releases/download/v$SPLUNK_OTEL_VERSION/$splunk_otel_connector" -o $splunk_otel_connector > /dev/null 2>&1
#curl -L "https://github.com/signalfx/splunk-otel-collector/releases/download/v$SPLUNK_OTEL_VERSION/$splunk_otel_connector" -o $SPLUNK_CONFIG_DIR/$splunk_otel_connector > /dev/null 2>&1
if [ $? -ne 0 ]; then
    echo "Downloading Splunk OpenTelemetry Connector tarball failed" | indent
    echo "$SPLUNK_OTEL_VERSION may not be a valid version of the Splunk OpenTelemetry Connector." | indent
    echo "Find valid versions here: https://github.com/signalfx/splunk-otel-collector/tags" | indent
    exit 1;
fi

echo "-----> Downloading SignalFx Agent Bundle $SFX_AGENT_VERSION ($signalfx_agent_tar)"
wget -P "$SPLUNK_CONFIG_DIR/" "https://github.com/signalfx/signalfx-agent/releases/download/v$SFX_AGENT_VERSION/$signalfx_agent_tar" -o $signalfx_agent_tar > /dev/null 2>&1
#curl -L "https://github.com/signalfx/signalfx-agent/releases/download/v$SFX_AGENT_VERSION/$signalfx_agent_tar" -o $SPLUNK_CONFIG_DIR/$signalfx_agent_tar > /dev/null 2>&1
if [ $? -ne 0 ]; then
    echo "Downloading agent tarball failed" | indent
    echo "$SFX_AGENT_VERSION may not be a valid version of the SignalFx Agent." | indent
    echo "Find valid versions here: https://github.com/signalfx/signalfx-agent/tags" | indent
    exit 1;
fi

echo "-----> Extracting SignalFx Agent Bundle"
tar -xf "$SPLUNK_CONFIG_DIR/$signalfx_agent_tar" -C "$SPLUNK_CONFIG_DIR"
rm -f "$SPLUNK_CONFIG_DIR/$signalfx_agent_tar"

mkdir -p "$BUILD_DIR/.profile.d"
cp "$BUILDPACK_DIR/setup/agent.sh" "$BUILD_DIR/.profile.d/"
chmod +x "$BUILD_DIR/.profile.d/agent.sh"
