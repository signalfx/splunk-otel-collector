receivers:
  # For more information on configuring JMX receivers, see
  # https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/receiver/jmxreceiver/README.md
  jmx/cassandra:
    # Jar path must be set.  It is bundled in most of our installations (including the docker image).
    # see https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/receiver/jmxreceiver/README.md#jar_path-default-optopentelemetry-java-contrib-jmx-metricsjar
    # and https://github.com/open-telemetry/opentelemetry-java-contrib/blob/main/jmx-metrics/README.md#usage
    jar_path: /opt/opentelemetry-java-contrib-jmx-metrics.jar
    endpoint: cassandra-splunk-integtest:${JMX_PORT}
    # If you need to support additional target systems,
    # see https://docs.splunk.com/observability/en/gdi/opentelemetry/components/jmx-receiver.html
    # and https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/receiver/jmxreceiver/README.md#target_system
    #target_system: jvm,activemq,kafka,kafka-consumer,kafka-producer
    target_system: cassandra
    collection_interval: 10s
    #initial_delay: 1s
    #optional: the same as specifying OTLP receiver endpoint.
    # james TODO what is this
    #otlp:
    #  endpoint: mycollectorotlpreceiver:4317
    # determined by the environment variable value
    username: hello
    password: world
    resource_attributes:
      stage: demo
    log_level: info
extensions:
    health_check:
      endpoint: 0.0.0.0:13133
exporters:
  file/no_rotation:
    path: /cassandra/cassandra.log
  signalfx:
    # to configure, see https://github:com/open-telemetry/opentelemetry-collector-contrib/tree/main/exporter/signalfxexporter
    access_token: ${SPLUNK_ACCESS_TOKEN}
    realm: "${SPLUNK_REALM}"
  otlp:
    # TODO fix docs
    # https://docs.splunk.com/observability/en/gdi/other-ingestion-methods/grpc-data-ingest.html
    #endpoint: "ingest.${SPLUNK_REALM}.signalfx.com:443/v2/datapoint/otlp"
    endpoint: "ingest.${SPLUNK_REALM}.signalfx.com:443"
    headers:
        "X-SF-Token": "${SPLUNK_ACCESS_TOKEN}"
  otlphttp:
    metrics_endpoint: "https://ingest.${SPLUNK_REALM}.signalfx.com/v2/datapoint/otlp"
    compression: gzip
    headers:
        "X-SF-Token": "${SPLUNK_ACCESS_TOKEN}"
  debug:
    verbosity: detailed
service:
  telemetry:
    metrics:
      address: ":8888"
  pipelines:
    #metrics/sfx:
    #  receivers: [jmx/kafka]
    #  exporters: [otlphttp, signalfx]
    metrics/logging:
      receivers: [jmx/cassandra]
      exporters: [file/no_rotation]
