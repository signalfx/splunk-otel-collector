---
apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-collector-conf
  labels:
    app: opentelemetry
    component: otel-collector-conf
data:
  otel-collector-config: |
    extensions:
      health_check:
        endpoint: 0.0.0.0:13133
      http_forwarder:
        ingress:
          endpoint: 0.0.0.0:6060
        egress:
          # TODO: Ensure this is set properly
          endpoint: "https://api.${SPLUNK_REALM}.signalfx.com"
      zpages:
    receivers:
      hostmetrics:
        collection_interval: 10s
        scrapers:
          cpu:
          disk:
          filesystem:
          memory:
          network:
          # System load average metrics https://en.wikipedia.org/wiki/Load_(computing)
          load:
          # Paging/Swap space utilization and I/O metrics
          paging:
          # Aggregated system process count metrics
          processes:
          # System processes metrics, disabled by default
          # process:
      jaeger:
        protocols:
          grpc:
            endpoint: 0.0.0.0:14250
          thrift_binary:
            endpoint: 0.0.0.0:6832
          thrift_compact:
            endpoint: 0.0.0.0:6831
          thrift_http:
            endpoint: 0.0.0.0:14268
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:55681
      sapm:
        endpoint: 0.0.0.0:7276
      signalfx:
        endpoint: 0.0.0.0:9943
      # This section is used to collect OpenTelemetry metrics
      # Even if just a SignalFx ÂµAPM customer, these metrics are included
      prometheus:
        config:
          scrape_configs:
            - job_name: 'otel-collector'
              scrape_interval: 10s
              static_configs:
                - targets: ['localhost:8888']
                  # If you want to use the environment filter
                  # In the SignalFx dashboard
                  #labels:
                    #environment: demo
              metric_relabel_configs:
                - source_labels: [ __name__ ]
                  regex: '.*grpc_io.*'
                  action: drop
      # Enable Zipkin to support Istio Mixer Adapter
      # https://github.com/signalfx/signalfx-istio-adapter
      zipkin:
        endpoint: 0.0.0.0:9411
    processors:
      batch:
      # Optional: If you have a different environment tag name
      # If this option is enabled it must be added to the pipeline section below
      #attributes/copyfromexistingkey:
        #actions:
        #- key: environment
          #from_attribute: YOUR_EXISTING_TAG_NAME
          #action: upsert
      # Optional: If you want to add an environment tag
      # If this option is enabled it must be added to the pipeline section below
      #attributes/newenvironment:
        #actions:
        #- key: environment
          #value: "YOUR_ENVIRONMENT_NAME"
          #action: insert
      # Enabling the memory_limiter is strongly recommended for every pipeline.
      # Configuration is based on the amount of memory allocated to the collector.
      # The configuration below assumes 2GB of memory. In general, the ballast
      # should be set to 1/3 of the collector's memory, the limit should be 90% of
      # the collector's memory up to 2GB, and the spike should be 25% of the
      # collector's memory up to 2GB. In addition, the "--mem-ballast-size-mib" CLI
      # flag must be set to the same value as the "ballast_size_mib". For more
      # information, see
      # https://github.com/open-telemetry/opentelemetry-collector/blob/main/processor/memorylimiter/README.md
      memory_limiter:
        # TODO: Ensure this is set properly
        ballast_size_mib: 168
        check_interval: 2s
        # TODO: Ensure this is set properly
        limit_mib: 460
    exporters:
      # Traces
      sapm:
        # TODO: Ensure this is set properly
        access_token: "${SPLUNK_ACCESS_TOKEN}"
        # TODO: Ensure this is set properly
        endpoint: "https://ingest.${SPLUNK_REALM}.signalfx.com/v2/trace"
      # Metrics
      signalfx:
        # TODO: Ensure this is set properly
        access_token: "${SPLUNK_ACCESS_TOKEN}"
        # TODO: Ensure this is set properly
        realm: "${SPLUNK_REALM}"
    service:
      extensions: [health_check, http_forwarder, zpages]
      pipelines:
        traces:
          receivers: [jaeger, otlp, sapm, zipkin]
          processors: [memory_limiter, batch]
          exporters: [sapm, signalfx]
        metrics:
          receivers: [otlp, signalfx, prometheus, hostmetrics]
          processors: [memory_limiter, batch]
          exporters: [signalfx]
        logs:
          receivers: [signalfx]
          processors: [memory_limiter, batch]
          exporters: [signalfx]
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: otel-agent
  labels:
    app: opentelemetry
    component: otel-agent
spec:
  selector:
    matchLabels:
      app: opentelemetry
      component: otel-agent
  minReadySeconds: 5
  progressDeadlineSeconds: 120
  template:
    metadata:
      labels:
        app: opentelemetry
        component: otel-agent
    spec:
      containers:
      - command:
          - "/otelcol"
          - "--config=/conf/otel-collector-config.yaml"
          # TODO: Ensure this is set properly
#           Memory Ballast size should be max 1/3 to 1/2 of memory.
          - "--mem-ballast-size-mib=168"
    # TODO: Ensure this is set properly
    # WARN: It is not recommended to use the latest tag in production deployments!
    image: quay.io/signalfx/splunk-otel-collector:latest
        name: otel-agent
        resources:
          limits:
            # TODO: Ensure this is set properly
            cpu: 500m
            # TODO: Ensure this is set properly
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 13133 # Default endpoint for Health Check.
        - containerPort: 14250 # Default endpoint for Jaeger gRPC receiver.
        - containerPort: 14268 # Default endpoint for Jaeger Thrift receiver.
        - containerPort: 4317  # Default endpoint for OpenTelemetry gRPC receiver.
        - containerPort: 6060  # Default endpoint for HTTP Forwarder extension.
        - containerPort: 6831  # Default endpoint for Jaeger Thrift compact receiver.
          protocol: UDP
        - containerPort: 6832  # Default endpoint for Jaeger Thrift binary receiver.
          protocol: UDP
        - containerPort: 7276  # Default endpoint for SignalFx APM receiver.
        - containerPort: 8888  # Default endpoint for querying metrics.
        - containerPort: 9411  # Default endpoint for Zipkin trace receiver.
        - containerPort: 9943  # Default endpoint for SignalFx metrics receiver.
        volumeMounts:
        - name: otel-collector-config-vol
          mountPath: /conf
#        - name: otel-collector-secrets
#          mountPath: /secrets
        livenessProbe:
          httpGet:
            path: /
            port: 13133 # Health Check extension default port.
        readinessProbe:
          httpGet:
            path: /
            port: 13133 # Health Check extension default port.
      volumes:
        - configMap:
            name: otel-collector-conf
            items:
              - key: otel-collector-config
                path: otel-collector-config.yaml
          name: otel-collector-config-vol
#        - secret:
#            name: otel-collector-secrets
#            items:
#              - key: cert.pem
#                path: cert.pem
#              - key: key.pem
#                path: key.pem
