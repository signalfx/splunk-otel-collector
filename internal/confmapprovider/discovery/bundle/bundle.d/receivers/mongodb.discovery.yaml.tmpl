{{ receiver "mongodb" }}:
  enabled: true
  rule:
    docker_observer: type == "container" and any([name, image, command], {# matches "(?i)mongo"}) and not (command matches "splunk.discovery")
    host_observer: type == "hostport" and command matches "(?i)mongo" and not (command matches "splunk.discovery")
    k8s_observer: type == "port" and pod.name matches "(?i)mongo"
  config:
    default:
      username: {{ defaultValue }}
      password: {{ defaultValue }}
      tls:
        insecure_skip_verify: true
        insecure: false
      hosts:
        - endpoint: '`endpoint`'
          transport: tcp
      timeout: 5s
  status:
    metrics:
      - status: successful
        strict: mongodb.database.count
        message: mongodb receiver is working!
    statements:
      - status: failed
        regexp: 'connect: network is unreachable'
        message: The container cannot be reached by the Collector. Make sure they're in the same network.
      - status: failed
        regexp: 'connect: connection refused'
        message: The container is refusing mongodb connections.
      - status: partial
        regexp: '.* unable to authenticate using mechanism .*'
        message: >-
          Please ensure your user credentials are correctly specified with
          `{{ configPropertyEnvVar "username" "<username>" }}` and
          `{{ configPropertyEnvVar "password" "<password>" }}` environment variables.
      - status: partial
        regexp: '.* failed to fetch index stats metrics: (Unauthorized) not authorized on admin to execute command .*'
        message: >-
          Make sure the account used to access Mongodb has been given a clusterMonitor role in order to collect metrics.
          `db.grantRolesToUser('someUser', [{ role: 'clusterMonitor', db: 'admin' }])`
