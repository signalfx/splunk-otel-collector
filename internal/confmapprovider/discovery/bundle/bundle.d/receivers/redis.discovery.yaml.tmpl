{{ receiver "redis" }}:
  enabled: true
  rule:
    docker_observer: type == "container" and any([name, image, command], {# matches "(?i)redis"}) and not (command matches "splunk.discovery")
    host_observer: type == "hostport" and command matches "(?i)redis" and not (command matches "splunk.discovery")
    k8s_observer: type == "port" and pod.name matches "(?i)redis"
  config:
    default: {}
  status:
    metrics:
      - status: successful
        strict: redis.uptime
        log_record:
          body: redis receiver is working!
    statements:
      - status: failed
        regexp: "connection refused"
        log_record:
          append_pattern: true
          body: The container is not serving http connections.
      - status: failed
        regexp: "received goaway and there are no active streams"
        log_record:
          append_pattern: true
          body: Unable to connect and scrape metrics.
      - status: failed
        regexp: "dial tcp: lookup"
        log_record:
          append_pattern: true
          body: Unable to resolve redis tcp endpoint
      - status: partial
        regexp: 'NOAUTH Authentication required.'
        log_record:
          append_pattern: true
          body: >-
            Make sure your user credentials are correctly specified using the
            `--set {{ configProperty "password" "<password>" }}` and
            `--set {{ configProperty "username" "<username>" }}` commands or the
            `{{ configPropertyEnvVar "password" "<password>" }}` and
            `{{ configPropertyEnvVar "password" "<password>" }}` environment variables.
      - status: partial
        regexp: 'called without any password configured for the default user'
        log_record:
          append_pattern: true
          body: >-
            Make sure your user credentials are correctly specified using the
            `--set {{ configProperty "password" "<password>" }}` command or the
            `{{ configPropertyEnvVar "password" "<password>" }}` environment variables.
      - status: partial
        regexp: 'WRONGPASS invalid username-password pair or user is disabled'
        log_record:
          append_pattern: true
          body: >-
            Make sure your user credentials are correctly specified using the
            `--set {{ configProperty "password" "<password>" }}` and
            `--set {{ configProperty "username" "<username>" }}` commands or the
            `{{ configPropertyEnvVar "password" "<password>" }}` and
            `{{ configPropertyEnvVar "password" "<password>" }}` environment variables.
