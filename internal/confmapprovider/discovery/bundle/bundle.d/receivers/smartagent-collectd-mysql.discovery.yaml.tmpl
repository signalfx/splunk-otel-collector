{{ receiver "smartagent/collectd/mysql" }}:
  rule:
    docker_observer: type == "container" and port == 3306
    host_observer: type == "hostport" and command contains "mysqld" and port == 3306
    k8s_observer: type == "port" and pod.name contains "mysql" and port == 3306
  config:
    default:
      type: collectd/mysql
      username: {{ defaultValue }}
      password: {{ defaultValue }}
      databases:
        - name: {{ defaultValue }}
      isolatedCollectd: true
  status:
    metrics:
      successful:
        - strict: mysql_octets.rx
          first_only: true
          log_record:
            severity_text: info
            body: collectd/mysql receiver is working!
    statements:
      failed:
        - regexp: "mysql plugin: Failed to connect to database .* at server .* Can't connect to MySQL server on .*\\(111\\)"
          first_only: true
          log_record:
            severity_text: info
            body: The container is refusing MySQL connections.
      partial:
        - regexp: 'mysql plugin: Failed to connect to database .* at server .* Access denied for user .* \\(using password: YES\\)'
          first_only: true
          log_record:
            severity_text: info
            body: >-
              Please ensure your user credentials are correctly specified with
              `--set {{ configProperty "username" "<username>" }}` and
              `--set {{ configProperty "password" "<password>" }}` or
              `{{ configPropertyEnvVar "username" "<username>" }}` and
              `{{ configPropertyEnvVar "password" "<password>" }}` environment variables.
        - regexp: 'mysql plugin: Failed to connect to database .* at server .* Unknown database'
          first_only: true
          log_record:
            severity_text: info
            body: >-
              Please ensure your desired databases are correctly specified using the
              `--set {{ configProperty "databases" "[{name: '<db-name-0>'}, {name: '<db-name-1>', username: '<username>', password: '<password>'}]" }}` command or the
              `{{ configPropertyEnvVar "databases" "[{name: '<db-name-0>'}, {name: '<db-name-1>', username: '<username>', password: '<password>'}]" }}` environment variable.
        - regexp: 'mysql plugin: Failed to connect to database .* at server .* Access denied for user .* to database'
          first_only: true
          log_record:
            severity_text: info
            body: >-
              Please ensure your desired databases and auth information are correctly specified using the
              `--set {{ configProperty "databases" "[{name: '<db-name-0>'}, {name: '<db-name-1>', username: '<username>', password: '<password>'}]" }}` command or the
              `{{ configPropertyEnvVar "databases" "[{name: '<db-name-0>'}, {name: '<db-name-1>', username: '<username>', password: '<password>'}]" }}` environment variable.
