{{ receiver "smartagent/collectd/mysql" }}:
  enabled: false
  rule:
    docker_observer: type == "container" and any([name, image, command], {# matches "(?i)mysql"}) and not (command matches "splunk.discovery")
    host_observer: type == "hostport" and command matches "(?i)mysqld"
    k8s_observer: type == "port" and pod.name matches "(?i)mysql"
  config:
    default:
      type: collectd/mysql
      username: {{ defaultValue }}
      password: {{ defaultValue }}
      databases:
        - name: {{ defaultValue }}
      isolatedCollectd: true
  status:
    metrics:
      - status: successful
        strict: mysql_octets.rx
        message: smartagent/collectd/mysql receiver is working!
    statements:
      - status: failed
        regexp: "mysql plugin: Failed to connect to database .* at server .* Can't connect to MySQL server on .* [(]111[)]"
        message: The container is refusing MySQL connections.
      - status: partial
        regexp: 'mysql plugin: Failed to connect to database .* at server .* Access denied for user .* [(]using password: .*[)]'
        message: |-
          Make sure your user credentials are correctly specified as environment variables.
          ```
          {{ configPropertyEnvVar "username" "<username>" }}
          {{ configPropertyEnvVar "password" "<password>" }}
          ```
      - status: partial
        regexp: 'mysql plugin: Failed to connect to database .* at server .* Unknown database'
        message: |-
          Make sure your MySQL databases are correctly specified using as an environment variable.
          ```
          {{ configPropertyEnvVar "databases" "[{name: '<db-name-0>'}, {name: '<db-name-1>', username: '<username>', password: '<password>'}]" }}
          ```
      - status: partial
        regexp: 'mysql plugin: Failed to connect to database .* at server .* Access denied for user .* to database'
        message: |-
          Make sure your MySQL databases and auth information are correctly specified as environment variables.
          ```
          {{ configPropertyEnvVar "databases" "[{name: '<db-name-0>'}, {name: '<db-name-1>', username: '<username>', password: '<password>'}]" }}
          ```
