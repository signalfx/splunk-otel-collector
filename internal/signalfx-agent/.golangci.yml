issues:
  max-same-issues: 0
  max-per-linter: 0
  exclude-rules:
    # We use certain values repeatedly in different test cases. Using consts would only
    # reduce clarity. Code is also sometimes repeated and factoring it would also
    # reduce clarity.
    - linters:
       - goconst
       - dupl
      path: _test\.go

    # Test code can do weird things with context in BeforeEach
    - text: cancel
      path: _test\.go
      linters:
        - govet

    # There are many places where we let users set TLS InsecureSkipVerify from
    # config
    - text: G402
      linters:
        - gosec

    # command arguments aren't so bad
    - text: G204
      linters:
        - gosec

    # pprof endpoint is only exposed when profiling: true
    - text: G108
      linters:
        - gosec

    # There is duplication in structure here but it would be far more complex
    # and unreadable to abstract it out.
    - path: pkg/monitors/cgroups
      linters:
        - dupl

    - path: pkg/monitors/kubernetes/cluster/metrics
      linters:
        - goconst
        - dupl

linters:
  enable-all: true
  disable:
    # Line length is only a problem if it impedes readability, which should be
    # determined at code review time.
    - lll
    # We use init funcs pretty heavily to register montiors at startup
    - gochecknoinits
    # A lot of config structs have a certain order due to grouping of options
    # and they are only allocated once so space optimization isn't important.
    - maligned
    # This flags things a lot when it is impossible to know how big the backing
    # array should be.
    - prealloc
    # There are many legitimate uses of globals
    - gochecknoglobals
    - godox
    # An analyzer to detect magic numbers.
    - gomnd
    # Checks whether Err of rows is checked successfully
    # Re-enable when this false positive is fixed https://github.com/golangci/golangci-lint/issues/943
    - rowserrcheck
    # Too many of these errors to fix in a reasonable amount of time.
    - wsl
    # TODO: reenable this one after a fix up of the existing code base
    - whitespace
    # funlen and gocognit are useful in revealing bloated functions, but this
    # should be determined at code review as there are many legitimate
    # violations.
    - funlen
    - gocognit
    # The following started erroring w/ 1.18 upgrade. Disabling
    # for now and their value could be evaluated in the future.
    - asasalint
    - containedctx
    - cyclop
    - errchkjson
    - errcheck
    - errname
    - errorlint
    - exhaustive
    - exhaustivestruct
    - exhaustruct
    - forbidigo
    - forcetypeassert
    - gci
    - gocritic
    - godot
    - goerr113
    - gofumpt
    - gomoddirectives
    - gosec
    - gosimple
    - ifshort
    - ireturn
    - maintidx
    - nestif
    - nilnil
    - nlreturn
    - noctx
    - nolintlint
    - nonamedreturns
    - nosprintfhostport
    - nosnakecase
    - paralleltest
    - predeclared
    - promlinter
    - revive
    - staticcheck
    - stylecheck
    - tagliatelle
    - testpackage
    - thelper
    - tparallel
    - usestdlibvars
    - varnamelen
    - wrapcheck
    # We disable those new linters as we are looking to minimize code changes.
    - interfacebloat
    - contextcheck
    - musttag
    - ginkgolinter
    - deadcode
    - sqlclosecheck
    - unused
    - tagalign
    - depguard
    - nakedret


linters-settings:
  settings:
    printf:
      funcs:
      - (github.com/signalfx/signalfx-agent/pkg/utils.ThrottledLogger).ThrottledWarning

run:
  modules-download-mode: readonly
  timeout: 5m
