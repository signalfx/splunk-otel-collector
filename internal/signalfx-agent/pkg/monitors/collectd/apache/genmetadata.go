// Code generated by monitor-code-gen. DO NOT EDIT.

package apache

import (
	"github.com/signalfx/golib/v3/datapoint"
	"github.com/signalfx/signalfx-agent/pkg/monitors"
)

const monitorType = "collectd/apache"

var groupSet = map[string]bool{}

const (
	apacheBytes                 = "apache_bytes"
	apacheConnections           = "apache_connections"
	apacheIdleWorkers           = "apache_idle_workers"
	apacheRequests              = "apache_requests"
	apacheScoreboardClosing     = "apache_scoreboard.closing"
	apacheScoreboardDnslookup   = "apache_scoreboard.dnslookup"
	apacheScoreboardFinishing   = "apache_scoreboard.finishing"
	apacheScoreboardIdleCleanup = "apache_scoreboard.idle_cleanup"
	apacheScoreboardKeepalive   = "apache_scoreboard.keepalive"
	apacheScoreboardLogging     = "apache_scoreboard.logging"
	apacheScoreboardOpen        = "apache_scoreboard.open"
	apacheScoreboardReading     = "apache_scoreboard.reading"
	apacheScoreboardSending     = "apache_scoreboard.sending"
	apacheScoreboardStarting    = "apache_scoreboard.starting"
	apacheScoreboardWaiting     = "apache_scoreboard.waiting"
)

var metricSet = map[string]monitors.MetricInfo{
	apacheBytes:                 {Type: datapoint.Counter},
	apacheConnections:           {Type: datapoint.Gauge},
	apacheIdleWorkers:           {Type: datapoint.Gauge},
	apacheRequests:              {Type: datapoint.Counter},
	apacheScoreboardClosing:     {Type: datapoint.Gauge},
	apacheScoreboardDnslookup:   {Type: datapoint.Gauge},
	apacheScoreboardFinishing:   {Type: datapoint.Gauge},
	apacheScoreboardIdleCleanup: {Type: datapoint.Gauge},
	apacheScoreboardKeepalive:   {Type: datapoint.Gauge},
	apacheScoreboardLogging:     {Type: datapoint.Gauge},
	apacheScoreboardOpen:        {Type: datapoint.Gauge},
	apacheScoreboardReading:     {Type: datapoint.Gauge},
	apacheScoreboardSending:     {Type: datapoint.Gauge},
	apacheScoreboardStarting:    {Type: datapoint.Gauge},
	apacheScoreboardWaiting:     {Type: datapoint.Gauge},
}

var defaultMetrics = map[string]bool{
	apacheBytes:          true,
	apacheConnections:    true,
	apacheIdleWorkers:    true,
	apacheRequests:       true,
	apacheScoreboardOpen: true,
}

var groupMetricsMap = map[string][]string{}

var monitorMetadata = monitors.Metadata{
	MonitorType:     "collectd/apache",
	DefaultMetrics:  defaultMetrics,
	Metrics:         metricSet,
	SendUnknown:     false,
	Groups:          groupSet,
	GroupMetricsMap: groupMetricsMap,
	SendAll:         false,
}
