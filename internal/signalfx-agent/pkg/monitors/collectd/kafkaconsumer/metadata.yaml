monitors:
- dimensions:
  doc: |
    Monitors a Java based Kafka consumer using [collectd's GenericJMX plugin](./collectd-genericjmx.md)[](sfx_link:java).

    This monitor has a set of [built in MBeans
    configured](https://github.com/signalfx/signalfx-agent/tree/main/pkg/monitors/collectd/kafkaconsumer/mbeans.go)
    for which it pulls metrics from the Kafka consumer's JMX endpoint.

    Sample YAML configuration:
    ```yaml
    monitors:
      - type: collectd/kafka_consumer
        host: localhost
        port: 9099
        mBeansToOmit:
          - fetch-size-avg-per-topic
    ```

    Note that this monitor requires Kafka v0.9.0.0 or above and collects metrics from the new consumer API.
    Also, per-topic metrics that are collected by default are not available through the new consumer API in
    v0.9.0.0 which can cause the logs to flood with warnings related to the MBean not being found.
    Use the `mBeansToOmit` config option in such cases. The above example configuration will not attempt to
    collect the MBean referenced by `fetch-size-avg-per-topic`. Here is a
    [list](https://github.com/signalfx/signalfx-agent/tree/main/pkg/monitors/collectd/kafkaconsumer/mbeans.go)
    of metrics collected by default.
  metrics:
    # Taken from genericjmx monitor. If you want to change them update genericjmx and update
    # all other monitors that use genericjmx with this same notice.
    ### BEGIN JVM METRICS ###
    gauge.jvm.threads.count:
      description: Number of JVM threads
      group: jvm
      default: true
      type: gauge
    gauge.loaded_classes:
      description: Number of classes loaded in the JVM
      group: jvm
      default: true
      type: gauge
    invocations:
      description: Total number of garbage collection events
      group: jvm
      default: true
      type: cumulative
    jmx_memory.committed:
      description: Amount of memory guaranteed to be available in bytes
      group: jvm
      default: true
      type: gauge
    jmx_memory.max:
      description: Maximum amount of memory that can be used in bytes
      group: jvm
      default: true
      type: gauge
    jmx_memory.used:
      description: Current memory usage in bytes
      group: jvm
      default: true
      type: gauge
    total_time_in_ms.collection_time:
      description: Amount of time spent garbage collecting in milliseconds
      group: jvm
      default: true
      type: cumulative
    jmx_memory.init:
      description: Amount of initial memory at startup in bytes
      group: jvm
      default: true
      type: gauge
    ### END JVM METRICS ###

    gauge.kafka.consumer.bytes-consumed-rate:
      description: Average number of bytes consumed per second. This metric has either
        client-id dimension or, both client-id and topic dimensions. The former is
        an aggregate across all topics of the latter.
      default: true
      type: gauge
    gauge.kafka.consumer.fetch-rate:
      description: Number of records consumed per second.
      default: true
      type: gauge
    gauge.kafka.consumer.fetch-size-avg:
      description: Average number of bytes fetched per request. This metric has either
        client-id dimension or, both client-id and topic dimensions. The former is
        an aggregate across all topics of the latter.
      default: true
      type: gauge
    gauge.kafka.consumer.records-consumed-rate:
      description: Average number of records consumed per second. This metric has
        either client-id dimension or, both client-id and topic dimensions. The former
        is an aggregate across all topics of the latter.
      default: true
      type: gauge
    gauge.kafka.consumer.records-lag-max:
      description: Maximum lag in of records for any partition in this window. An
        increasing value over time is your best indication that the consumer group
        is not keeping up with the producers.
      default: true
      type: gauge
  monitorType: collectd/kafka_consumer
  sendUnknown: true
  properties:
