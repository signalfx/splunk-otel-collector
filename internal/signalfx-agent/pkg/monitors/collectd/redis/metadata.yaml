monitors:
- dimensions:
    plugin_instance:
      description: Identifies the Redis instance -- will be of the form `<host>_<port>`.
  doc: |
    Monitors a redis instance using the [collectd Python Redis
    plugin](https://github.com/signalfx/redis-collectd-plugin).  Supports Redis
    2.8 and later.

    You can capture any kind of Redis metrics like:

     * Memory used
     * Commands processed per second
     * Number of connected clients and followers
     * Number of blocked clients
     * Number of keys stored (per database)
     * Uptime
     * Changes since last save
     * Replication delay (per follower)


    <!--- OVERVIEW --->
    ### Monitoring length of Redis lists

    To monitor the length of list keys, the key and database index must be
    specified in the config. Specify keys in the config file in the form
    `sendListLengths: [{databaseIndex: $db_index, keyPattern: "$key_name"}]`.
    `$key_name` can be a globbed pattern (only `*` is supported), in which case
    all keys matching that glob will be processed.  Don't forget to surround
    the pattern with double quotes or else the asterisks might be
    misinterpreted.  If any keys match the glob that are not lists, an error
    will be sent to the collectd logs.

    Lengths will be reported to SignalFx under the metric `gauge.key_llen`, a
    separate time series for each list.

    **Warning**: The `KEYS` command is used to match the globs so don't try and
    match something that is very big, as this command is not highly optimized and
    can block other commands from executing.

    Note: To avoid duplication reporting, this should only be reported in one node.
    Keys can be defined in either the leader or follower config.

    Sample YAML configuration with list lengths:

    ```yaml
    monitors:
    - type: collectd/redis
      host: 127.0.0.1
      port: 9100
      sendListLengths:
      - databaseIndex: 0
        keyPattern: 'mylist*'
    ```

    <!--- SETUP --->
    ### Example Config

    ```yaml
    monitors:
    - type: collectd/redis
      host: 127.0.0.1
      port: 9100
    ```

  metrics:
    bytes.used_memory:
      description: Number of bytes allocated by Redis
      default: true
      type: gauge
    bytes.used_memory_lua:
      description: Number of bytes used by the Lua engine
      default: false
      type: gauge
    bytes.used_memory_peak:
      description: Peak Number of bytes allocated by Redis
      default: false
      type: gauge
    bytes.used_memory_rss:
      description: Number of bytes allocated by Redis as seen by the OS
      default: true
      type: gauge
    bytes.total_system_memory:
      description: Total memory available on the OS
      default: false
      type: gauge
    bytes.maxmemory:
      description: Maximum memory configured on Redis server
      default: false
      type: gauge
    counter.commands_processed:
      description: Total number of commands processed by the server
      default: true
      type: cumulative
    counter.connections_received:
      description: Total number of connections accepted by the server
      default: false
      type: cumulative
    counter.evicted_keys:
      description: Number of evicted keys due to maxmemory limit
      default: true
      type: cumulative
    counter.expired_keys:
      description: Total number of key expiration events
      default: true
      type: cumulative
    counter.lru_clock:
      description: Clock incrementing every minute, for LRU management
      default: false
      type: cumulative
    counter.rejected_connections:
      description: Number of connections rejected because of maxclients limit
      default: true
      type: cumulative
    counter.total_net_input_bytes:
      description: Total number of bytes inputted
      default: true
      type: cumulative
    counter.total_net_output_bytes:
      description: Total number of bytes outputted
      default: true
      type: cumulative
    counter.used_cpu_sys:
      description: System CPU consumed by the Redis server
      default: true
      type: cumulative
    counter.used_cpu_sys_children:
      description: System CPU consumed by the background processes
      default: false
      type: cumulative
    counter.used_cpu_user:
      description: User CPU consumed by the Redis server
      default: true
      type: cumulative
    counter.used_cpu_user_children:
      description: User CPU consumed by the background processes
      default: false
      type: cumulative
    derive.keyspace_hits:
      description: Number of successful lookup of keys in the main dictionary
      default: true
      type: cumulative
    derive.keyspace_misses:
      description: Number of failed lookup of keys in the main dictionary
      default: true
      type: cumulative
    gauge.blocked_clients:
      description: Number of clients pending on a blocking call
      default: true
      type: gauge
    gauge.changes_since_last_save:
      description: Number of changes since the last dump
      default: false
      type: gauge
    gauge.client_biggest_input_buf:
      description: Biggest input buffer among current client connections
      default: false
      type: gauge
    gauge.client_longest_output_list:
      description: Longest output list among current client connections
      default: false
      type: gauge
    gauge.connected_clients:
      description: Number of client connections (excluding connections from followers)
      default: true
      type: gauge
    gauge.connected_slaves:
      description: Number of connected followers
      default: false
      type: gauge
    gauge.db0_avg_ttl:
      description: The average time to live for all keys in redis
      default: false
      type: gauge
    gauge.db0_expires:
      description: The total number of keys in redis that will expire
      default: false
      type: gauge
    gauge.db0_keys:
      description: The total number of keys stored in redis
      default: false
      type: gauge
    gauge.instantaneous_ops_per_sec:
      description: Number of commands processed per second
      default: false
      type: gauge
    gauge.key_llen:
      description: Length of an list key
      default: false
      type: gauge
    gauge.latest_fork_usec:
      description: Duration of the latest fork operation in microseconds
      default: false
      type: gauge
    gauge.master_last_io_seconds_ago:
      description: Number of seconds since the last interaction with leader
      default: false
      type: gauge
    gauge.master_repl_offset:
      description: Master replication offset
      default: true
      type: gauge
    gauge.mem_fragmentation_ratio:
      description: Ratio between used_memory_rss and used_memory
      default: false
      type: gauge
    gauge.rdb_bgsave_in_progress:
      description: Flag indicating a RDB save is on-going
      default: false
      type: gauge
    gauge.repl_backlog_first_byte_offset:
      description: Slave replication backlog offset
      default: false
      type: gauge
    gauge.slave_repl_offset:
      description: Slave replication offset
      default: true
      type: gauge
    gauge.uptime_in_days:
      description: Number of days up
      default: false
      type: gauge
    gauge.uptime_in_seconds:
      description: Number of seconds up
      default: false
      type: gauge
    gauge.rdb_last_save_time:
      description: Unix timestamp for last save to disk, when using persistence
      default: false
      type: gauge
    gauge.master_link_down_since_seconds:
      description: Number of seconds since the link is down
      default: false
      type: gauge
    gauge.master_link_status:
      description: Status of the link (up/down)
      default: false
      type: gauge
  monitorType: collectd/redis
  properties:
