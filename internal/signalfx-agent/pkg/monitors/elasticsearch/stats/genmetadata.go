// Code generated by monitor-code-gen. DO NOT EDIT.

package stats

import (
	"github.com/signalfx/golib/v3/datapoint"
	"github.com/signalfx/signalfx-agent/pkg/monitors"
)

const monitorType = "elasticsearch"

const (
	groupCluster             = "cluster"
	groupIndicesCompletion   = "indices/completion"
	groupIndicesDocs         = "indices/docs"
	groupIndicesFielddata    = "indices/fielddata"
	groupIndicesFilterCache  = "indices/filter-cache"
	groupIndicesFlush        = "indices/flush"
	groupIndicesGet          = "indices/get"
	groupIndicesIDCache      = "indices/id-cache"
	groupIndicesIndexing     = "indices/indexing"
	groupIndicesMerges       = "indices/merges"
	groupIndicesPercolate    = "indices/percolate"
	groupIndicesQueryCache   = "indices/query-cache"
	groupIndicesRecovery     = "indices/recovery"
	groupIndicesRefresh      = "indices/refresh"
	groupIndicesRequestCache = "indices/request-cache"
	groupIndicesSearch       = "indices/search"
	groupIndicesSegments     = "indices/segments"
	groupIndicesStore        = "indices/store"
	groupIndicesSuggest      = "indices/suggest"
	groupIndicesTranslog     = "indices/translog"
	groupIndicesWarmer       = "indices/warmer"
	groupNodeHTTP            = "node/http"
	groupNodeJvm             = "node/jvm"
	groupNodeProcess         = "node/process"
	groupNodeThreadPool      = "node/thread-pool"
	groupNodeTransport       = "node/transport"
)

var groupSet = map[string]bool{
	groupCluster:             true,
	groupIndicesCompletion:   true,
	groupIndicesDocs:         true,
	groupIndicesFielddata:    true,
	groupIndicesFilterCache:  true,
	groupIndicesFlush:        true,
	groupIndicesGet:          true,
	groupIndicesIDCache:      true,
	groupIndicesIndexing:     true,
	groupIndicesMerges:       true,
	groupIndicesPercolate:    true,
	groupIndicesQueryCache:   true,
	groupIndicesRecovery:     true,
	groupIndicesRefresh:      true,
	groupIndicesRequestCache: true,
	groupIndicesSearch:       true,
	groupIndicesSegments:     true,
	groupIndicesStore:        true,
	groupIndicesSuggest:      true,
	groupIndicesTranslog:     true,
	groupIndicesWarmer:       true,
	groupNodeHTTP:            true,
	groupNodeJvm:             true,
	groupNodeProcess:         true,
	groupNodeThreadPool:      true,
	groupNodeTransport:       true,
}

const (
	elasticsearchClusterActivePrimaryShards                  = "elasticsearch.cluster.active-primary-shards"
	elasticsearchClusterActiveShards                         = "elasticsearch.cluster.active-shards"
	elasticsearchClusterActiveShardsPercent                  = "elasticsearch.cluster.active-shards-percent"
	elasticsearchClusterDelayedUnassignedShards              = "elasticsearch.cluster.delayed-unassigned-shards"
	elasticsearchClusterInFlightFetches                      = "elasticsearch.cluster.in-flight-fetches"
	elasticsearchClusterInitializingShards                   = "elasticsearch.cluster.initializing-shards"
	elasticsearchClusterNumberOfDataNodes                    = "elasticsearch.cluster.number-of-data_nodes"
	elasticsearchClusterNumberOfNodes                        = "elasticsearch.cluster.number-of-nodes"
	elasticsearchClusterPendingTasks                         = "elasticsearch.cluster.pending-tasks"
	elasticsearchClusterRelocatingShards                     = "elasticsearch.cluster.relocating-shards"
	elasticsearchClusterStatus                               = "elasticsearch.cluster.status"
	elasticsearchClusterTaskMaxWaitTime                      = "elasticsearch.cluster.task-max-wait-time"
	elasticsearchClusterUnassignedShards                     = "elasticsearch.cluster.unassigned-shards"
	elasticsearchHTTPCurrentOpen                             = "elasticsearch.http.current_open"
	elasticsearchHTTPTotalOpen                               = "elasticsearch.http.total_open"
	elasticsearchIndicesCompletionSize                       = "elasticsearch.indices.completion.size"
	elasticsearchIndicesDocsCount                            = "elasticsearch.indices.docs.count"
	elasticsearchIndicesDocsDeleted                          = "elasticsearch.indices.docs.deleted"
	elasticsearchIndicesFielddataEvictions                   = "elasticsearch.indices.fielddata.evictions"
	elasticsearchIndicesFielddataMemorySize                  = "elasticsearch.indices.fielddata.memory-size"
	elasticsearchIndicesFilterCacheEvictions                 = "elasticsearch.indices.filter-cache.evictions"
	elasticsearchIndicesFilterCacheMemorySize                = "elasticsearch.indices.filter-cache.memory-size"
	elasticsearchIndicesFlushPeriodic                        = "elasticsearch.indices.flush.periodic"
	elasticsearchIndicesFlushTotal                           = "elasticsearch.indices.flush.total"
	elasticsearchIndicesFlushTotalTime                       = "elasticsearch.indices.flush.total-time"
	elasticsearchIndicesGetCurrent                           = "elasticsearch.indices.get.current"
	elasticsearchIndicesGetExistsTime                        = "elasticsearch.indices.get.exists-time"
	elasticsearchIndicesGetExistsTotal                       = "elasticsearch.indices.get.exists-total"
	elasticsearchIndicesGetMissingTime                       = "elasticsearch.indices.get.missing-time"
	elasticsearchIndicesGetMissingTotal                      = "elasticsearch.indices.get.missing-total"
	elasticsearchIndicesGetTime                              = "elasticsearch.indices.get.time"
	elasticsearchIndicesGetTotal                             = "elasticsearch.indices.get.total"
	elasticsearchIndicesIDCacheMemorySize                    = "elasticsearch.indices.id-cache.memory-size"
	elasticsearchIndicesIndexingDeleteCurrent                = "elasticsearch.indices.indexing.delete-current"
	elasticsearchIndicesIndexingDeleteTime                   = "elasticsearch.indices.indexing.delete-time"
	elasticsearchIndicesIndexingDeleteTotal                  = "elasticsearch.indices.indexing.delete-total"
	elasticsearchIndicesIndexingIndexCurrent                 = "elasticsearch.indices.indexing.index-current"
	elasticsearchIndicesIndexingIndexFailed                  = "elasticsearch.indices.indexing.index-failed"
	elasticsearchIndicesIndexingIndexTime                    = "elasticsearch.indices.indexing.index-time"
	elasticsearchIndicesIndexingIndexTotal                   = "elasticsearch.indices.indexing.index-total"
	elasticsearchIndicesIndexingNoopUpdateTotal              = "elasticsearch.indices.indexing.noop-update-total"
	elasticsearchIndicesIndexingThrottleTime                 = "elasticsearch.indices.indexing.throttle-time"
	elasticsearchIndicesMergesAutoThrottleSize               = "elasticsearch.indices.merges.auto-throttle-size"
	elasticsearchIndicesMergesCurrent                        = "elasticsearch.indices.merges.current"
	elasticsearchIndicesMergesCurrentDocs                    = "elasticsearch.indices.merges.current-docs"
	elasticsearchIndicesMergesCurrentSize                    = "elasticsearch.indices.merges.current-size"
	elasticsearchIndicesMergesStoppedTime                    = "elasticsearch.indices.merges.stopped-time"
	elasticsearchIndicesMergesThrottleTime                   = "elasticsearch.indices.merges.throttle-time"
	elasticsearchIndicesMergesTotal                          = "elasticsearch.indices.merges.total"
	elasticsearchIndicesMergesTotalDocs                      = "elasticsearch.indices.merges.total-docs"
	elasticsearchIndicesMergesTotalSize                      = "elasticsearch.indices.merges.total-size"
	elasticsearchIndicesMergesTotalTime                      = "elasticsearch.indices.merges.total-time"
	elasticsearchIndicesPercolateCurrent                     = "elasticsearch.indices.percolate.current"
	elasticsearchIndicesPercolateQueries                     = "elasticsearch.indices.percolate.queries"
	elasticsearchIndicesPercolateTime                        = "elasticsearch.indices.percolate.time"
	elasticsearchIndicesPercolateTotal                       = "elasticsearch.indices.percolate.total"
	elasticsearchIndicesQueryCacheCacheCount                 = "elasticsearch.indices.query-cache.cache-count"
	elasticsearchIndicesQueryCacheCacheSize                  = "elasticsearch.indices.query-cache.cache-size"
	elasticsearchIndicesQueryCacheEvictions                  = "elasticsearch.indices.query-cache.evictions"
	elasticsearchIndicesQueryCacheHitCount                   = "elasticsearch.indices.query-cache.hit-count"
	elasticsearchIndicesQueryCacheMemorySize                 = "elasticsearch.indices.query-cache.memory-size"
	elasticsearchIndicesQueryCacheMissCount                  = "elasticsearch.indices.query-cache.miss-count"
	elasticsearchIndicesQueryCacheTotalCount                 = "elasticsearch.indices.query-cache.total-count"
	elasticsearchIndicesRecoveryCurrentAsSource              = "elasticsearch.indices.recovery.current-as-source"
	elasticsearchIndicesRecoveryCurrentAsTarget              = "elasticsearch.indices.recovery.current-as-target"
	elasticsearchIndicesRecoveryThrottleTime                 = "elasticsearch.indices.recovery.throttle-time"
	elasticsearchIndicesRefreshListeners                     = "elasticsearch.indices.refresh.listeners"
	elasticsearchIndicesRefreshTotal                         = "elasticsearch.indices.refresh.total"
	elasticsearchIndicesRefreshTotalTime                     = "elasticsearch.indices.refresh.total-time"
	elasticsearchIndicesRequestCacheEvictions                = "elasticsearch.indices.request-cache.evictions"
	elasticsearchIndicesRequestCacheHitCount                 = "elasticsearch.indices.request-cache.hit-count"
	elasticsearchIndicesRequestCacheMemorySize               = "elasticsearch.indices.request-cache.memory-size"
	elasticsearchIndicesRequestCacheMissCount                = "elasticsearch.indices.request-cache.miss-count"
	elasticsearchIndicesSearchFetchCurrent                   = "elasticsearch.indices.search.fetch-current"
	elasticsearchIndicesSearchFetchTime                      = "elasticsearch.indices.search.fetch-time"
	elasticsearchIndicesSearchFetchTotal                     = "elasticsearch.indices.search.fetch-total"
	elasticsearchIndicesSearchOpenContexts                   = "elasticsearch.indices.search.open-contexts"
	elasticsearchIndicesSearchQueryCurrent                   = "elasticsearch.indices.search.query-current"
	elasticsearchIndicesSearchQueryTime                      = "elasticsearch.indices.search.query-time"
	elasticsearchIndicesSearchQueryTotal                     = "elasticsearch.indices.search.query-total"
	elasticsearchIndicesSearchScrollCurrent                  = "elasticsearch.indices.search.scroll-current"
	elasticsearchIndicesSearchScrollTime                     = "elasticsearch.indices.search.scroll-time"
	elasticsearchIndicesSearchScrollTotal                    = "elasticsearch.indices.search.scroll-total"
	elasticsearchIndicesSearchSuggestCurrent                 = "elasticsearch.indices.search.suggest-current"
	elasticsearchIndicesSearchSuggestTime                    = "elasticsearch.indices.search.suggest-time"
	elasticsearchIndicesSearchSuggestTotal                   = "elasticsearch.indices.search.suggest-total"
	elasticsearchIndicesSegmentsCount                        = "elasticsearch.indices.segments.count"
	elasticsearchIndicesSegmentsDocValuesMemorySize          = "elasticsearch.indices.segments.doc-values-memory-size"
	elasticsearchIndicesSegmentsFixedBitSetMemorySize        = "elasticsearch.indices.segments.fixed-bit-set-memory-size"
	elasticsearchIndicesSegmentsIndexWriterMaxMemorySize     = "elasticsearch.indices.segments.index-writer-max-memory-size"
	elasticsearchIndicesSegmentsIndexWriterMemorySize        = "elasticsearch.indices.segments.index-writer-memory-size"
	elasticsearchIndicesSegmentsMemorySize                   = "elasticsearch.indices.segments.memory-size"
	elasticsearchIndicesSegmentsNormsMemorySize              = "elasticsearch.indices.segments.norms-memory-size"
	elasticsearchIndicesSegmentsPointsMemorySize             = "elasticsearch.indices.segments.points-memory-size"
	elasticsearchIndicesSegmentsStoredFieldMemorySize        = "elasticsearch.indices.segments.stored-field-memory-size"
	elasticsearchIndicesSegmentsTermVectorsMemorySize        = "elasticsearch.indices.segments.term-vectors-memory-size"
	elasticsearchIndicesSegmentsTermsMemorySize              = "elasticsearch.indices.segments.terms-memory-size"
	elasticsearchIndicesSegmentsVersionMapMemorySize         = "elasticsearch.indices.segments.version-map-memory-size"
	elasticsearchIndicesStoreSize                            = "elasticsearch.indices.store.size"
	elasticsearchIndicesStoreThrottleTime                    = "elasticsearch.indices.store.throttle-time"
	elasticsearchIndicesSuggestCurrent                       = "elasticsearch.indices.suggest.current"
	elasticsearchIndicesSuggestTime                          = "elasticsearch.indices.suggest.time"
	elasticsearchIndicesSuggestTotal                         = "elasticsearch.indices.suggest.total"
	elasticsearchIndicesTranslogEarliestLastModifiedAge      = "elasticsearch.indices.translog.earliest_last_modified_age"
	elasticsearchIndicesTranslogOperations                   = "elasticsearch.indices.translog.operations"
	elasticsearchIndicesTranslogSize                         = "elasticsearch.indices.translog.size"
	elasticsearchIndicesTranslogUncommittedOperations        = "elasticsearch.indices.translog.uncommitted_operations"
	elasticsearchIndicesTranslogUncommittedSizeInBytes       = "elasticsearch.indices.translog.uncommitted_size_in_bytes"
	elasticsearchIndicesWarmerCurrent                        = "elasticsearch.indices.warmer.current"
	elasticsearchIndicesWarmerTotal                          = "elasticsearch.indices.warmer.total"
	elasticsearchIndicesWarmerTotalTime                      = "elasticsearch.indices.warmer.total-time"
	elasticsearchJvmClassesCurrentLoadedCount                = "elasticsearch.jvm.classes.current-loaded-count"
	elasticsearchJvmClassesTotalLoadedCount                  = "elasticsearch.jvm.classes.total-loaded-count"
	elasticsearchJvmClassesTotalUnloadedCount                = "elasticsearch.jvm.classes.total-unloaded-count"
	elasticsearchJvmGcCount                                  = "elasticsearch.jvm.gc.count"
	elasticsearchJvmGcOldCount                               = "elasticsearch.jvm.gc.old-count"
	elasticsearchJvmGcOldTime                                = "elasticsearch.jvm.gc.old-time"
	elasticsearchJvmGcTime                                   = "elasticsearch.jvm.gc.time"
	elasticsearchJvmMemBufferPoolsDirectCount                = "elasticsearch.jvm.mem.buffer_pools.direct.count"
	elasticsearchJvmMemBufferPoolsDirectTotalCapacityInBytes = "elasticsearch.jvm.mem.buffer_pools.direct.total_capacity_in_bytes"
	elasticsearchJvmMemBufferPoolsDirectUsedInBytes          = "elasticsearch.jvm.mem.buffer_pools.direct.used_in_bytes"
	elasticsearchJvmMemBufferPoolsMappedCount                = "elasticsearch.jvm.mem.buffer_pools.mapped.count"
	elasticsearchJvmMemBufferPoolsMappedTotalCapacityInBytes = "elasticsearch.jvm.mem.buffer_pools.mapped.total_capacity_in_bytes"
	elasticsearchJvmMemBufferPoolsMappedUsedInBytes          = "elasticsearch.jvm.mem.buffer_pools.mapped.used_in_bytes"
	elasticsearchJvmMemHeapCommitted                         = "elasticsearch.jvm.mem.heap-committed"
	elasticsearchJvmMemHeapMax                               = "elasticsearch.jvm.mem.heap-max"
	elasticsearchJvmMemHeapUsed                              = "elasticsearch.jvm.mem.heap-used"
	elasticsearchJvmMemHeapUsedPercent                       = "elasticsearch.jvm.mem.heap-used-percent"
	elasticsearchJvmMemNonHeapCommitted                      = "elasticsearch.jvm.mem.non-heap-committed"
	elasticsearchJvmMemNonHeapUsed                           = "elasticsearch.jvm.mem.non-heap-used"
	elasticsearchJvmMemPoolsOldMaxInBytes                    = "elasticsearch.jvm.mem.pools.old.max_in_bytes"
	elasticsearchJvmMemPoolsOldPeakMaxInBytes                = "elasticsearch.jvm.mem.pools.old.peak_max_in_bytes"
	elasticsearchJvmMemPoolsOldPeakUsedInBytes               = "elasticsearch.jvm.mem.pools.old.peak_used_in_bytes"
	elasticsearchJvmMemPoolsOldUsedInBytes                   = "elasticsearch.jvm.mem.pools.old.used_in_bytes"
	elasticsearchJvmMemPoolsSurvivorMaxInBytes               = "elasticsearch.jvm.mem.pools.survivor.max_in_bytes"
	elasticsearchJvmMemPoolsSurvivorPeakMaxInBytes           = "elasticsearch.jvm.mem.pools.survivor.peak_max_in_bytes"
	elasticsearchJvmMemPoolsSurvivorPeakUsedInBytes          = "elasticsearch.jvm.mem.pools.survivor.peak_used_in_bytes"
	elasticsearchJvmMemPoolsSurvivorUsedInBytes              = "elasticsearch.jvm.mem.pools.survivor.used_in_bytes"
	elasticsearchJvmMemPoolsYoungMaxInBytes                  = "elasticsearch.jvm.mem.pools.young.max_in_bytes"
	elasticsearchJvmMemPoolsYoungPeakMaxInBytes              = "elasticsearch.jvm.mem.pools.young.peak_max_in_bytes"
	elasticsearchJvmMemPoolsYoungPeakUsedInBytes             = "elasticsearch.jvm.mem.pools.young.peak_used_in_bytes"
	elasticsearchJvmMemPoolsYoungUsedInBytes                 = "elasticsearch.jvm.mem.pools.young.used_in_bytes"
	elasticsearchJvmThreadsCount                             = "elasticsearch.jvm.threads.count"
	elasticsearchJvmThreadsPeak                              = "elasticsearch.jvm.threads.peak"
	elasticsearchJvmUptime                                   = "elasticsearch.jvm.uptime"
	elasticsearchProcessCPUPercent                           = "elasticsearch.process.cpu.percent"
	elasticsearchProcessCPUTime                              = "elasticsearch.process.cpu.time"
	elasticsearchProcessMaxFileDescriptors                   = "elasticsearch.process.max_file_descriptors"
	elasticsearchProcessMemTotalVirtualSize                  = "elasticsearch.process.mem.total-virtual-size"
	elasticsearchProcessOpenFileDescriptors                  = "elasticsearch.process.open_file_descriptors"
	elasticsearchThreadPoolActive                            = "elasticsearch.thread_pool.active"
	elasticsearchThreadPoolCompleted                         = "elasticsearch.thread_pool.completed"
	elasticsearchThreadPoolLargest                           = "elasticsearch.thread_pool.largest"
	elasticsearchThreadPoolQueue                             = "elasticsearch.thread_pool.queue"
	elasticsearchThreadPoolRejected                          = "elasticsearch.thread_pool.rejected"
	elasticsearchThreadPoolThreads                           = "elasticsearch.thread_pool.threads"
	elasticsearchTransportRxCount                            = "elasticsearch.transport.rx.count"
	elasticsearchTransportRxSize                             = "elasticsearch.transport.rx.size"
	elasticsearchTransportServerOpen                         = "elasticsearch.transport.server_open"
	elasticsearchTransportTxCount                            = "elasticsearch.transport.tx.count"
	elasticsearchTransportTxSize                             = "elasticsearch.transport.tx.size"
)

var metricSet = map[string]monitors.MetricInfo{
	elasticsearchClusterActivePrimaryShards:                  {Type: datapoint.Gauge, Group: groupCluster},
	elasticsearchClusterActiveShards:                         {Type: datapoint.Gauge, Group: groupCluster},
	elasticsearchClusterActiveShardsPercent:                  {Type: datapoint.Gauge, Group: groupCluster},
	elasticsearchClusterDelayedUnassignedShards:              {Type: datapoint.Gauge, Group: groupCluster},
	elasticsearchClusterInFlightFetches:                      {Type: datapoint.Gauge, Group: groupCluster},
	elasticsearchClusterInitializingShards:                   {Type: datapoint.Gauge, Group: groupCluster},
	elasticsearchClusterNumberOfDataNodes:                    {Type: datapoint.Gauge, Group: groupCluster},
	elasticsearchClusterNumberOfNodes:                        {Type: datapoint.Gauge, Group: groupCluster},
	elasticsearchClusterPendingTasks:                         {Type: datapoint.Gauge, Group: groupCluster},
	elasticsearchClusterRelocatingShards:                     {Type: datapoint.Gauge, Group: groupCluster},
	elasticsearchClusterStatus:                               {Type: datapoint.Gauge, Group: groupCluster},
	elasticsearchClusterTaskMaxWaitTime:                      {Type: datapoint.Gauge, Group: groupCluster},
	elasticsearchClusterUnassignedShards:                     {Type: datapoint.Gauge, Group: groupCluster},
	elasticsearchHTTPCurrentOpen:                             {Type: datapoint.Gauge, Group: groupNodeHTTP},
	elasticsearchHTTPTotalOpen:                               {Type: datapoint.Counter, Group: groupNodeHTTP},
	elasticsearchIndicesCompletionSize:                       {Type: datapoint.Gauge, Group: groupIndicesCompletion},
	elasticsearchIndicesDocsCount:                            {Type: datapoint.Gauge, Group: groupIndicesDocs},
	elasticsearchIndicesDocsDeleted:                          {Type: datapoint.Gauge, Group: groupIndicesDocs},
	elasticsearchIndicesFielddataEvictions:                   {Type: datapoint.Counter, Group: groupIndicesFielddata},
	elasticsearchIndicesFielddataMemorySize:                  {Type: datapoint.Gauge, Group: groupIndicesFielddata},
	elasticsearchIndicesFilterCacheEvictions:                 {Type: datapoint.Counter, Group: groupIndicesFilterCache},
	elasticsearchIndicesFilterCacheMemorySize:                {Type: datapoint.Gauge, Group: groupIndicesFilterCache},
	elasticsearchIndicesFlushPeriodic:                        {Type: datapoint.Gauge, Group: groupIndicesFlush},
	elasticsearchIndicesFlushTotal:                           {Type: datapoint.Counter, Group: groupIndicesFlush},
	elasticsearchIndicesFlushTotalTime:                       {Type: datapoint.Counter, Group: groupIndicesFlush},
	elasticsearchIndicesGetCurrent:                           {Type: datapoint.Gauge, Group: groupIndicesGet},
	elasticsearchIndicesGetExistsTime:                        {Type: datapoint.Counter, Group: groupIndicesGet},
	elasticsearchIndicesGetExistsTotal:                       {Type: datapoint.Counter, Group: groupIndicesGet},
	elasticsearchIndicesGetMissingTime:                       {Type: datapoint.Counter, Group: groupIndicesGet},
	elasticsearchIndicesGetMissingTotal:                      {Type: datapoint.Counter, Group: groupIndicesGet},
	elasticsearchIndicesGetTime:                              {Type: datapoint.Counter, Group: groupIndicesGet},
	elasticsearchIndicesGetTotal:                             {Type: datapoint.Counter, Group: groupIndicesGet},
	elasticsearchIndicesIDCacheMemorySize:                    {Type: datapoint.Gauge, Group: groupIndicesIDCache},
	elasticsearchIndicesIndexingDeleteCurrent:                {Type: datapoint.Gauge, Group: groupIndicesIndexing},
	elasticsearchIndicesIndexingDeleteTime:                   {Type: datapoint.Counter, Group: groupIndicesIndexing},
	elasticsearchIndicesIndexingDeleteTotal:                  {Type: datapoint.Counter, Group: groupIndicesIndexing},
	elasticsearchIndicesIndexingIndexCurrent:                 {Type: datapoint.Gauge, Group: groupIndicesIndexing},
	elasticsearchIndicesIndexingIndexFailed:                  {Type: datapoint.Gauge, Group: groupIndicesIndexing},
	elasticsearchIndicesIndexingIndexTime:                    {Type: datapoint.Counter, Group: groupIndicesIndexing},
	elasticsearchIndicesIndexingIndexTotal:                   {Type: datapoint.Counter, Group: groupIndicesIndexing},
	elasticsearchIndicesIndexingNoopUpdateTotal:              {Type: datapoint.Counter, Group: groupIndicesIndexing},
	elasticsearchIndicesIndexingThrottleTime:                 {Type: datapoint.Counter, Group: groupIndicesIndexing},
	elasticsearchIndicesMergesAutoThrottleSize:               {Type: datapoint.Counter, Group: groupIndicesMerges},
	elasticsearchIndicesMergesCurrent:                        {Type: datapoint.Gauge, Group: groupIndicesMerges},
	elasticsearchIndicesMergesCurrentDocs:                    {Type: datapoint.Gauge, Group: groupIndicesMerges},
	elasticsearchIndicesMergesCurrentSize:                    {Type: datapoint.Gauge, Group: groupIndicesMerges},
	elasticsearchIndicesMergesStoppedTime:                    {Type: datapoint.Counter, Group: groupIndicesMerges},
	elasticsearchIndicesMergesThrottleTime:                   {Type: datapoint.Counter, Group: groupIndicesMerges},
	elasticsearchIndicesMergesTotal:                          {Type: datapoint.Counter, Group: groupIndicesMerges},
	elasticsearchIndicesMergesTotalDocs:                      {Type: datapoint.Counter, Group: groupIndicesMerges},
	elasticsearchIndicesMergesTotalSize:                      {Type: datapoint.Counter, Group: groupIndicesMerges},
	elasticsearchIndicesMergesTotalTime:                      {Type: datapoint.Counter, Group: groupIndicesMerges},
	elasticsearchIndicesPercolateCurrent:                     {Type: datapoint.Gauge, Group: groupIndicesPercolate},
	elasticsearchIndicesPercolateQueries:                     {Type: datapoint.Counter, Group: groupIndicesPercolate},
	elasticsearchIndicesPercolateTime:                        {Type: datapoint.Counter, Group: groupIndicesPercolate},
	elasticsearchIndicesPercolateTotal:                       {Type: datapoint.Counter, Group: groupIndicesPercolate},
	elasticsearchIndicesQueryCacheCacheCount:                 {Type: datapoint.Gauge, Group: groupIndicesQueryCache},
	elasticsearchIndicesQueryCacheCacheSize:                  {Type: datapoint.Gauge, Group: groupIndicesQueryCache},
	elasticsearchIndicesQueryCacheEvictions:                  {Type: datapoint.Counter, Group: groupIndicesQueryCache},
	elasticsearchIndicesQueryCacheHitCount:                   {Type: datapoint.Counter, Group: groupIndicesQueryCache},
	elasticsearchIndicesQueryCacheMemorySize:                 {Type: datapoint.Gauge, Group: groupIndicesQueryCache},
	elasticsearchIndicesQueryCacheMissCount:                  {Type: datapoint.Counter, Group: groupIndicesRequestCache},
	elasticsearchIndicesQueryCacheTotalCount:                 {Type: datapoint.Counter, Group: groupIndicesQueryCache},
	elasticsearchIndicesRecoveryCurrentAsSource:              {Type: datapoint.Gauge, Group: groupIndicesRecovery},
	elasticsearchIndicesRecoveryCurrentAsTarget:              {Type: datapoint.Gauge, Group: groupIndicesRecovery},
	elasticsearchIndicesRecoveryThrottleTime:                 {Type: datapoint.Counter, Group: groupIndicesRecovery},
	elasticsearchIndicesRefreshListeners:                     {Type: datapoint.Gauge, Group: groupIndicesRefresh},
	elasticsearchIndicesRefreshTotal:                         {Type: datapoint.Counter, Group: groupIndicesRefresh},
	elasticsearchIndicesRefreshTotalTime:                     {Type: datapoint.Counter, Group: groupIndicesRefresh},
	elasticsearchIndicesRequestCacheEvictions:                {Type: datapoint.Counter, Group: groupIndicesRequestCache},
	elasticsearchIndicesRequestCacheHitCount:                 {Type: datapoint.Counter, Group: groupIndicesRequestCache},
	elasticsearchIndicesRequestCacheMemorySize:               {Type: datapoint.Gauge, Group: groupIndicesRequestCache},
	elasticsearchIndicesRequestCacheMissCount:                {Type: datapoint.Counter, Group: groupIndicesRequestCache},
	elasticsearchIndicesSearchFetchCurrent:                   {Type: datapoint.Gauge, Group: groupIndicesSearch},
	elasticsearchIndicesSearchFetchTime:                      {Type: datapoint.Counter, Group: groupIndicesSearch},
	elasticsearchIndicesSearchFetchTotal:                     {Type: datapoint.Counter, Group: groupIndicesSearch},
	elasticsearchIndicesSearchOpenContexts:                   {Type: datapoint.Gauge, Group: groupIndicesSearch},
	elasticsearchIndicesSearchQueryCurrent:                   {Type: datapoint.Gauge, Group: groupIndicesSearch},
	elasticsearchIndicesSearchQueryTime:                      {Type: datapoint.Counter, Group: groupIndicesSearch},
	elasticsearchIndicesSearchQueryTotal:                     {Type: datapoint.Counter, Group: groupIndicesSearch},
	elasticsearchIndicesSearchScrollCurrent:                  {Type: datapoint.Gauge, Group: groupIndicesSearch},
	elasticsearchIndicesSearchScrollTime:                     {Type: datapoint.Counter, Group: groupIndicesSearch},
	elasticsearchIndicesSearchScrollTotal:                    {Type: datapoint.Counter, Group: groupIndicesSearch},
	elasticsearchIndicesSearchSuggestCurrent:                 {Type: datapoint.Gauge, Group: groupIndicesSearch},
	elasticsearchIndicesSearchSuggestTime:                    {Type: datapoint.Counter, Group: groupIndicesSearch},
	elasticsearchIndicesSearchSuggestTotal:                   {Type: datapoint.Counter, Group: groupIndicesSearch},
	elasticsearchIndicesSegmentsCount:                        {Type: datapoint.Gauge, Group: groupIndicesSegments},
	elasticsearchIndicesSegmentsDocValuesMemorySize:          {Type: datapoint.Gauge, Group: groupIndicesSegments},
	elasticsearchIndicesSegmentsFixedBitSetMemorySize:        {Type: datapoint.Gauge, Group: groupIndicesSegments},
	elasticsearchIndicesSegmentsIndexWriterMaxMemorySize:     {Type: datapoint.Gauge, Group: groupIndicesSegments},
	elasticsearchIndicesSegmentsIndexWriterMemorySize:        {Type: datapoint.Gauge, Group: groupIndicesSegments},
	elasticsearchIndicesSegmentsMemorySize:                   {Type: datapoint.Gauge, Group: groupIndicesSegments},
	elasticsearchIndicesSegmentsNormsMemorySize:              {Type: datapoint.Gauge, Group: groupIndicesSegments},
	elasticsearchIndicesSegmentsPointsMemorySize:             {Type: datapoint.Gauge, Group: groupIndicesSegments},
	elasticsearchIndicesSegmentsStoredFieldMemorySize:        {Type: datapoint.Gauge, Group: groupIndicesSegments},
	elasticsearchIndicesSegmentsTermVectorsMemorySize:        {Type: datapoint.Gauge, Group: groupIndicesSegments},
	elasticsearchIndicesSegmentsTermsMemorySize:              {Type: datapoint.Gauge, Group: groupIndicesSegments},
	elasticsearchIndicesSegmentsVersionMapMemorySize:         {Type: datapoint.Gauge, Group: groupIndicesSegments},
	elasticsearchIndicesStoreSize:                            {Type: datapoint.Gauge, Group: groupIndicesStore},
	elasticsearchIndicesStoreThrottleTime:                    {Type: datapoint.Counter, Group: groupIndicesStore},
	elasticsearchIndicesSuggestCurrent:                       {Type: datapoint.Gauge, Group: groupIndicesSuggest},
	elasticsearchIndicesSuggestTime:                          {Type: datapoint.Counter, Group: groupIndicesSuggest},
	elasticsearchIndicesSuggestTotal:                         {Type: datapoint.Counter, Group: groupIndicesSuggest},
	elasticsearchIndicesTranslogEarliestLastModifiedAge:      {Type: datapoint.Gauge, Group: groupIndicesTranslog},
	elasticsearchIndicesTranslogOperations:                   {Type: datapoint.Gauge, Group: groupIndicesTranslog},
	elasticsearchIndicesTranslogSize:                         {Type: datapoint.Gauge, Group: groupIndicesTranslog},
	elasticsearchIndicesTranslogUncommittedOperations:        {Type: datapoint.Gauge, Group: groupIndicesTranslog},
	elasticsearchIndicesTranslogUncommittedSizeInBytes:       {Type: datapoint.Gauge, Group: groupIndicesTranslog},
	elasticsearchIndicesWarmerCurrent:                        {Type: datapoint.Gauge, Group: groupIndicesWarmer},
	elasticsearchIndicesWarmerTotal:                          {Type: datapoint.Counter, Group: groupIndicesWarmer},
	elasticsearchIndicesWarmerTotalTime:                      {Type: datapoint.Counter, Group: groupIndicesWarmer},
	elasticsearchJvmClassesCurrentLoadedCount:                {Type: datapoint.Gauge, Group: groupNodeJvm},
	elasticsearchJvmClassesTotalLoadedCount:                  {Type: datapoint.Counter, Group: groupNodeJvm},
	elasticsearchJvmClassesTotalUnloadedCount:                {Type: datapoint.Counter, Group: groupNodeJvm},
	elasticsearchJvmGcCount:                                  {Type: datapoint.Counter, Group: groupNodeJvm},
	elasticsearchJvmGcOldCount:                               {Type: datapoint.Counter, Group: groupNodeJvm},
	elasticsearchJvmGcOldTime:                                {Type: datapoint.Counter, Group: groupNodeJvm},
	elasticsearchJvmGcTime:                                   {Type: datapoint.Counter, Group: groupNodeJvm},
	elasticsearchJvmMemBufferPoolsDirectCount:                {Type: datapoint.Gauge, Group: groupNodeJvm},
	elasticsearchJvmMemBufferPoolsDirectTotalCapacityInBytes: {Type: datapoint.Gauge, Group: groupNodeJvm},
	elasticsearchJvmMemBufferPoolsDirectUsedInBytes:          {Type: datapoint.Gauge, Group: groupNodeJvm},
	elasticsearchJvmMemBufferPoolsMappedCount:                {Type: datapoint.Gauge, Group: groupNodeJvm},
	elasticsearchJvmMemBufferPoolsMappedTotalCapacityInBytes: {Type: datapoint.Gauge, Group: groupNodeJvm},
	elasticsearchJvmMemBufferPoolsMappedUsedInBytes:          {Type: datapoint.Gauge, Group: groupNodeJvm},
	elasticsearchJvmMemHeapCommitted:                         {Type: datapoint.Gauge, Group: groupNodeJvm},
	elasticsearchJvmMemHeapMax:                               {Type: datapoint.Gauge, Group: groupNodeJvm},
	elasticsearchJvmMemHeapUsed:                              {Type: datapoint.Gauge, Group: groupNodeJvm},
	elasticsearchJvmMemHeapUsedPercent:                       {Type: datapoint.Gauge, Group: groupNodeJvm},
	elasticsearchJvmMemNonHeapCommitted:                      {Type: datapoint.Gauge, Group: groupNodeJvm},
	elasticsearchJvmMemNonHeapUsed:                           {Type: datapoint.Gauge, Group: groupNodeJvm},
	elasticsearchJvmMemPoolsOldMaxInBytes:                    {Type: datapoint.Gauge, Group: groupNodeJvm},
	elasticsearchJvmMemPoolsOldPeakMaxInBytes:                {Type: datapoint.Gauge, Group: groupNodeJvm},
	elasticsearchJvmMemPoolsOldPeakUsedInBytes:               {Type: datapoint.Gauge, Group: groupNodeJvm},
	elasticsearchJvmMemPoolsOldUsedInBytes:                   {Type: datapoint.Gauge, Group: groupNodeJvm},
	elasticsearchJvmMemPoolsSurvivorMaxInBytes:               {Type: datapoint.Gauge, Group: groupNodeJvm},
	elasticsearchJvmMemPoolsSurvivorPeakMaxInBytes:           {Type: datapoint.Gauge, Group: groupNodeJvm},
	elasticsearchJvmMemPoolsSurvivorPeakUsedInBytes:          {Type: datapoint.Gauge, Group: groupNodeJvm},
	elasticsearchJvmMemPoolsSurvivorUsedInBytes:              {Type: datapoint.Gauge, Group: groupNodeJvm},
	elasticsearchJvmMemPoolsYoungMaxInBytes:                  {Type: datapoint.Gauge, Group: groupNodeJvm},
	elasticsearchJvmMemPoolsYoungPeakMaxInBytes:              {Type: datapoint.Gauge, Group: groupNodeJvm},
	elasticsearchJvmMemPoolsYoungPeakUsedInBytes:             {Type: datapoint.Gauge, Group: groupNodeJvm},
	elasticsearchJvmMemPoolsYoungUsedInBytes:                 {Type: datapoint.Gauge, Group: groupNodeJvm},
	elasticsearchJvmThreadsCount:                             {Type: datapoint.Gauge, Group: groupNodeJvm},
	elasticsearchJvmThreadsPeak:                              {Type: datapoint.Gauge, Group: groupNodeJvm},
	elasticsearchJvmUptime:                                   {Type: datapoint.Counter, Group: groupNodeJvm},
	elasticsearchProcessCPUPercent:                           {Type: datapoint.Gauge, Group: groupNodeProcess},
	elasticsearchProcessCPUTime:                              {Type: datapoint.Counter, Group: groupNodeProcess},
	elasticsearchProcessMaxFileDescriptors:                   {Type: datapoint.Gauge, Group: groupNodeProcess},
	elasticsearchProcessMemTotalVirtualSize:                  {Type: datapoint.Counter, Group: groupNodeProcess},
	elasticsearchProcessOpenFileDescriptors:                  {Type: datapoint.Gauge, Group: groupNodeProcess},
	elasticsearchThreadPoolActive:                            {Type: datapoint.Gauge, Group: groupNodeThreadPool},
	elasticsearchThreadPoolCompleted:                         {Type: datapoint.Counter, Group: groupNodeThreadPool},
	elasticsearchThreadPoolLargest:                           {Type: datapoint.Gauge, Group: groupNodeThreadPool},
	elasticsearchThreadPoolQueue:                             {Type: datapoint.Gauge, Group: groupNodeThreadPool},
	elasticsearchThreadPoolRejected:                          {Type: datapoint.Counter, Group: groupNodeThreadPool},
	elasticsearchThreadPoolThreads:                           {Type: datapoint.Counter, Group: groupNodeThreadPool},
	elasticsearchTransportRxCount:                            {Type: datapoint.Counter, Group: groupNodeTransport},
	elasticsearchTransportRxSize:                             {Type: datapoint.Counter, Group: groupNodeTransport},
	elasticsearchTransportServerOpen:                         {Type: datapoint.Gauge, Group: groupNodeTransport},
	elasticsearchTransportTxCount:                            {Type: datapoint.Counter, Group: groupNodeTransport},
	elasticsearchTransportTxSize:                             {Type: datapoint.Counter, Group: groupNodeTransport},
}

var defaultMetrics = map[string]bool{
	elasticsearchClusterActivePrimaryShards: true,
	elasticsearchClusterActiveShards:        true,
	elasticsearchClusterNumberOfDataNodes:   true,
	elasticsearchClusterNumberOfNodes:       true,
	elasticsearchClusterRelocatingShards:    true,
	elasticsearchClusterUnassignedShards:    true,
	elasticsearchIndicesDocsCount:           true,
	elasticsearchIndicesDocsDeleted:         true,
	elasticsearchIndicesGetTotal:            true,
	elasticsearchIndicesIndexingIndexTotal:  true,
	elasticsearchIndicesMergesCurrent:       true,
	elasticsearchIndicesMergesTotal:         true,
	elasticsearchIndicesSearchQueryTime:     true,
	elasticsearchIndicesSearchQueryTotal:    true,
	elasticsearchIndicesSegmentsCount:       true,
	elasticsearchJvmGcTime:                  true,
	elasticsearchJvmMemHeapCommitted:        true,
	elasticsearchJvmMemHeapUsed:             true,
	elasticsearchProcessOpenFileDescriptors: true,
	elasticsearchThreadPoolRejected:         true,
}

var groupMetricsMap = map[string][]string{
	groupCluster: {
		elasticsearchClusterActivePrimaryShards,
		elasticsearchClusterActiveShards,
		elasticsearchClusterActiveShardsPercent,
		elasticsearchClusterDelayedUnassignedShards,
		elasticsearchClusterInFlightFetches,
		elasticsearchClusterInitializingShards,
		elasticsearchClusterNumberOfDataNodes,
		elasticsearchClusterNumberOfNodes,
		elasticsearchClusterPendingTasks,
		elasticsearchClusterRelocatingShards,
		elasticsearchClusterStatus,
		elasticsearchClusterTaskMaxWaitTime,
		elasticsearchClusterUnassignedShards,
	},
	groupIndicesCompletion: {
		elasticsearchIndicesCompletionSize,
	},
	groupIndicesDocs: {
		elasticsearchIndicesDocsCount,
		elasticsearchIndicesDocsDeleted,
	},
	groupIndicesFielddata: {
		elasticsearchIndicesFielddataEvictions,
		elasticsearchIndicesFielddataMemorySize,
	},
	groupIndicesFilterCache: {
		elasticsearchIndicesFilterCacheEvictions,
		elasticsearchIndicesFilterCacheMemorySize,
	},
	groupIndicesFlush: {
		elasticsearchIndicesFlushPeriodic,
		elasticsearchIndicesFlushTotal,
		elasticsearchIndicesFlushTotalTime,
	},
	groupIndicesGet: {
		elasticsearchIndicesGetCurrent,
		elasticsearchIndicesGetExistsTime,
		elasticsearchIndicesGetExistsTotal,
		elasticsearchIndicesGetMissingTime,
		elasticsearchIndicesGetMissingTotal,
		elasticsearchIndicesGetTime,
		elasticsearchIndicesGetTotal,
	},
	groupIndicesIDCache: {
		elasticsearchIndicesIDCacheMemorySize,
	},
	groupIndicesIndexing: {
		elasticsearchIndicesIndexingDeleteCurrent,
		elasticsearchIndicesIndexingDeleteTime,
		elasticsearchIndicesIndexingDeleteTotal,
		elasticsearchIndicesIndexingIndexCurrent,
		elasticsearchIndicesIndexingIndexFailed,
		elasticsearchIndicesIndexingIndexTime,
		elasticsearchIndicesIndexingIndexTotal,
		elasticsearchIndicesIndexingNoopUpdateTotal,
		elasticsearchIndicesIndexingThrottleTime,
	},
	groupIndicesMerges: {
		elasticsearchIndicesMergesAutoThrottleSize,
		elasticsearchIndicesMergesCurrent,
		elasticsearchIndicesMergesCurrentDocs,
		elasticsearchIndicesMergesCurrentSize,
		elasticsearchIndicesMergesStoppedTime,
		elasticsearchIndicesMergesThrottleTime,
		elasticsearchIndicesMergesTotal,
		elasticsearchIndicesMergesTotalDocs,
		elasticsearchIndicesMergesTotalSize,
		elasticsearchIndicesMergesTotalTime,
	},
	groupIndicesPercolate: {
		elasticsearchIndicesPercolateCurrent,
		elasticsearchIndicesPercolateQueries,
		elasticsearchIndicesPercolateTime,
		elasticsearchIndicesPercolateTotal,
	},
	groupIndicesQueryCache: {
		elasticsearchIndicesQueryCacheCacheCount,
		elasticsearchIndicesQueryCacheCacheSize,
		elasticsearchIndicesQueryCacheEvictions,
		elasticsearchIndicesQueryCacheHitCount,
		elasticsearchIndicesQueryCacheMemorySize,
		elasticsearchIndicesQueryCacheTotalCount,
	},
	groupIndicesRecovery: {
		elasticsearchIndicesRecoveryCurrentAsSource,
		elasticsearchIndicesRecoveryCurrentAsTarget,
		elasticsearchIndicesRecoveryThrottleTime,
	},
	groupIndicesRefresh: {
		elasticsearchIndicesRefreshListeners,
		elasticsearchIndicesRefreshTotal,
		elasticsearchIndicesRefreshTotalTime,
	},
	groupIndicesRequestCache: {
		elasticsearchIndicesQueryCacheMissCount,
		elasticsearchIndicesRequestCacheEvictions,
		elasticsearchIndicesRequestCacheHitCount,
		elasticsearchIndicesRequestCacheMemorySize,
		elasticsearchIndicesRequestCacheMissCount,
	},
	groupIndicesSearch: {
		elasticsearchIndicesSearchFetchCurrent,
		elasticsearchIndicesSearchFetchTime,
		elasticsearchIndicesSearchFetchTotal,
		elasticsearchIndicesSearchOpenContexts,
		elasticsearchIndicesSearchQueryCurrent,
		elasticsearchIndicesSearchQueryTime,
		elasticsearchIndicesSearchQueryTotal,
		elasticsearchIndicesSearchScrollCurrent,
		elasticsearchIndicesSearchScrollTime,
		elasticsearchIndicesSearchScrollTotal,
		elasticsearchIndicesSearchSuggestCurrent,
		elasticsearchIndicesSearchSuggestTime,
		elasticsearchIndicesSearchSuggestTotal,
	},
	groupIndicesSegments: {
		elasticsearchIndicesSegmentsCount,
		elasticsearchIndicesSegmentsDocValuesMemorySize,
		elasticsearchIndicesSegmentsFixedBitSetMemorySize,
		elasticsearchIndicesSegmentsIndexWriterMaxMemorySize,
		elasticsearchIndicesSegmentsIndexWriterMemorySize,
		elasticsearchIndicesSegmentsMemorySize,
		elasticsearchIndicesSegmentsNormsMemorySize,
		elasticsearchIndicesSegmentsPointsMemorySize,
		elasticsearchIndicesSegmentsStoredFieldMemorySize,
		elasticsearchIndicesSegmentsTermVectorsMemorySize,
		elasticsearchIndicesSegmentsTermsMemorySize,
		elasticsearchIndicesSegmentsVersionMapMemorySize,
	},
	groupIndicesStore: {
		elasticsearchIndicesStoreSize,
		elasticsearchIndicesStoreThrottleTime,
	},
	groupIndicesSuggest: {
		elasticsearchIndicesSuggestCurrent,
		elasticsearchIndicesSuggestTime,
		elasticsearchIndicesSuggestTotal,
	},
	groupIndicesTranslog: {
		elasticsearchIndicesTranslogEarliestLastModifiedAge,
		elasticsearchIndicesTranslogOperations,
		elasticsearchIndicesTranslogSize,
		elasticsearchIndicesTranslogUncommittedOperations,
		elasticsearchIndicesTranslogUncommittedSizeInBytes,
	},
	groupIndicesWarmer: {
		elasticsearchIndicesWarmerCurrent,
		elasticsearchIndicesWarmerTotal,
		elasticsearchIndicesWarmerTotalTime,
	},
	groupNodeHTTP: {
		elasticsearchHTTPCurrentOpen,
		elasticsearchHTTPTotalOpen,
	},
	groupNodeJvm: {
		elasticsearchJvmClassesCurrentLoadedCount,
		elasticsearchJvmClassesTotalLoadedCount,
		elasticsearchJvmClassesTotalUnloadedCount,
		elasticsearchJvmGcCount,
		elasticsearchJvmGcOldCount,
		elasticsearchJvmGcOldTime,
		elasticsearchJvmGcTime,
		elasticsearchJvmMemBufferPoolsDirectCount,
		elasticsearchJvmMemBufferPoolsDirectTotalCapacityInBytes,
		elasticsearchJvmMemBufferPoolsDirectUsedInBytes,
		elasticsearchJvmMemBufferPoolsMappedCount,
		elasticsearchJvmMemBufferPoolsMappedTotalCapacityInBytes,
		elasticsearchJvmMemBufferPoolsMappedUsedInBytes,
		elasticsearchJvmMemHeapCommitted,
		elasticsearchJvmMemHeapMax,
		elasticsearchJvmMemHeapUsed,
		elasticsearchJvmMemHeapUsedPercent,
		elasticsearchJvmMemNonHeapCommitted,
		elasticsearchJvmMemNonHeapUsed,
		elasticsearchJvmMemPoolsOldMaxInBytes,
		elasticsearchJvmMemPoolsOldPeakMaxInBytes,
		elasticsearchJvmMemPoolsOldPeakUsedInBytes,
		elasticsearchJvmMemPoolsOldUsedInBytes,
		elasticsearchJvmMemPoolsSurvivorMaxInBytes,
		elasticsearchJvmMemPoolsSurvivorPeakMaxInBytes,
		elasticsearchJvmMemPoolsSurvivorPeakUsedInBytes,
		elasticsearchJvmMemPoolsSurvivorUsedInBytes,
		elasticsearchJvmMemPoolsYoungMaxInBytes,
		elasticsearchJvmMemPoolsYoungPeakMaxInBytes,
		elasticsearchJvmMemPoolsYoungPeakUsedInBytes,
		elasticsearchJvmMemPoolsYoungUsedInBytes,
		elasticsearchJvmThreadsCount,
		elasticsearchJvmThreadsPeak,
		elasticsearchJvmUptime,
	},
	groupNodeProcess: {
		elasticsearchProcessCPUPercent,
		elasticsearchProcessCPUTime,
		elasticsearchProcessMaxFileDescriptors,
		elasticsearchProcessMemTotalVirtualSize,
		elasticsearchProcessOpenFileDescriptors,
	},
	groupNodeThreadPool: {
		elasticsearchThreadPoolActive,
		elasticsearchThreadPoolCompleted,
		elasticsearchThreadPoolLargest,
		elasticsearchThreadPoolQueue,
		elasticsearchThreadPoolRejected,
		elasticsearchThreadPoolThreads,
	},
	groupNodeTransport: {
		elasticsearchTransportRxCount,
		elasticsearchTransportRxSize,
		elasticsearchTransportServerOpen,
		elasticsearchTransportTxCount,
		elasticsearchTransportTxSize,
	},
}

var monitorMetadata = monitors.Metadata{
	MonitorType:     "elasticsearch",
	DefaultMetrics:  defaultMetrics,
	Metrics:         metricSet,
	SendUnknown:     false,
	Groups:          groupSet,
	GroupMetricsMap: groupMetricsMap,
	SendAll:         false,
}
