// Code generated by monitor-code-gen. DO NOT EDIT.

package filesystems

import (
	"github.com/signalfx/golib/v3/datapoint"
	"github.com/signalfx/signalfx-agent/pkg/monitors"
)

const monitorType = "filesystems"

const (
	groupInodes     = "inodes"
	groupPercentage = "percentage"
)

var groupSet = map[string]bool{
	groupInodes:     true,
	groupPercentage: true,
}

const (
	dfComplexFree          = "df_complex.free"
	dfComplexReserved      = "df_complex.reserved"
	dfComplexUsed          = "df_complex.used"
	dfInodesFree           = "df_inodes.free"
	dfInodesUsed           = "df_inodes.used"
	diskSummaryUtilization = "disk.summary_utilization"
	diskUtilization        = "disk.utilization"
	percentBytesFree       = "percent_bytes.free"
	percentBytesReserved   = "percent_bytes.reserved"
	percentBytesUsed       = "percent_bytes.used"
	percentInodesFree      = "percent_inodes.free"
	percentInodesUsed      = "percent_inodes.used"
)

var metricSet = map[string]monitors.MetricInfo{
	dfComplexFree:          {Type: datapoint.Gauge},
	dfComplexReserved:      {Type: datapoint.Gauge},
	dfComplexUsed:          {Type: datapoint.Gauge},
	dfInodesFree:           {Type: datapoint.Gauge, Group: groupInodes},
	dfInodesUsed:           {Type: datapoint.Gauge, Group: groupInodes},
	diskSummaryUtilization: {Type: datapoint.Gauge},
	diskUtilization:        {Type: datapoint.Gauge},
	percentBytesFree:       {Type: datapoint.Gauge, Group: groupPercentage},
	percentBytesReserved:   {Type: datapoint.Gauge, Group: groupPercentage},
	percentBytesUsed:       {Type: datapoint.Gauge, Group: groupPercentage},
	percentInodesFree:      {Type: datapoint.Gauge, Group: groupInodes},
	percentInodesUsed:      {Type: datapoint.Gauge, Group: groupInodes},
}

var defaultMetrics = map[string]bool{
	dfComplexFree:          true,
	dfComplexUsed:          true,
	diskSummaryUtilization: true,
	diskUtilization:        true,
}

var groupMetricsMap = map[string][]string{
	groupInodes: {
		dfInodesFree,
		dfInodesUsed,
		percentInodesFree,
		percentInodesUsed,
	},
	groupPercentage: {
		percentBytesFree,
		percentBytesReserved,
		percentBytesUsed,
	},
}

var monitorMetadata = monitors.Metadata{
	MonitorType:     "filesystems",
	DefaultMetrics:  defaultMetrics,
	Metrics:         metricSet,
	SendUnknown:     false,
	Groups:          groupSet,
	GroupMetricsMap: groupMetricsMap,
	SendAll:         false,
}
