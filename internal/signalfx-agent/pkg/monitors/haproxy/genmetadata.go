// Code generated by monitor-code-gen. DO NOT EDIT.

package haproxy

import (
	"github.com/signalfx/golib/v3/datapoint"
	"github.com/signalfx/signalfx-agent/pkg/monitors"
)

const monitorType = "haproxy"

var groupSet = map[string]bool{}

const (
	haproxyActiveServers            = "haproxy_active_servers"
	haproxyBackupServers            = "haproxy_backup_servers"
	haproxyBytesIn                  = "haproxy_bytes_in"
	haproxyBytesOut                 = "haproxy_bytes_out"
	haproxyCheckDuration            = "haproxy_check_duration"
	haproxyClientAborts             = "haproxy_client_aborts"
	haproxyCompressBitsPerSecondIn  = "haproxy_compress_bits_per_second_in"
	haproxyCompressBitsPerSecondOut = "haproxy_compress_bits_per_second_out"
	haproxyCompressBypass           = "haproxy_compress_bypass"
	haproxyCompressIn               = "haproxy_compress_in"
	haproxyCompressOut              = "haproxy_compress_out"
	haproxyCompressResponses        = "haproxy_compress_responses"
	haproxyConnectionRate           = "haproxy_connection_rate"
	haproxyConnectionRateAll        = "haproxy_connection_rate_all"
	haproxyConnectionRateMax        = "haproxy_connection_rate_max"
	haproxyConnectionTotal          = "haproxy_connection_total"
	haproxyConnections              = "haproxy_connections"
	haproxyCurrentConnections       = "haproxy_current_connections"
	haproxyCurrentSslConnections    = "haproxy_current_ssl_connections"
	haproxyDeniedRequest            = "haproxy_denied_request"
	haproxyDeniedResponse           = "haproxy_denied_response"
	haproxyDeniedTCPConnections     = "haproxy_denied_tcp_connections"
	haproxyDeniedTCPSessions        = "haproxy_denied_tcp_sessions"
	haproxyDowntime                 = "haproxy_downtime"
	haproxyErrorConnections         = "haproxy_error_connections"
	haproxyErrorRequest             = "haproxy_error_request"
	haproxyErrorResponse            = "haproxy_error_response"
	haproxyFailedChecks             = "haproxy_failed_checks"
	haproxyIdlePercent              = "haproxy_idle_percent"
	haproxyInterceptedRequests      = "haproxy_intercepted_requests"
	haproxyLastSession              = "haproxy_last_session"
	haproxyMaxConnectionRate        = "haproxy_max_connection_rate"
	haproxyMaxConnections           = "haproxy_max_connections"
	haproxyMaxPipes                 = "haproxy_max_pipes"
	haproxyMaxSessionRate           = "haproxy_max_session_rate"
	haproxyMaxSslConnections        = "haproxy_max_ssl_connections"
	haproxyPipesFree                = "haproxy_pipes_free"
	haproxyPipesUsed                = "haproxy_pipes_used"
	haproxyQueueCurrent             = "haproxy_queue_current"
	haproxyQueueLimit               = "haproxy_queue_limit"
	haproxyQueueMax                 = "haproxy_queue_max"
	haproxyQueueTimeAverage         = "haproxy_queue_time_average"
	haproxyRedispatched             = "haproxy_redispatched"
	haproxyRequestRate              = "haproxy_request_rate"
	haproxyRequestRateMax           = "haproxy_request_rate_max"
	haproxyRequestTotal             = "haproxy_request_total"
	haproxyRequests                 = "haproxy_requests"
	haproxyResponse1xx              = "haproxy_response_1xx"
	haproxyResponse2xx              = "haproxy_response_2xx"
	haproxyResponse3xx              = "haproxy_response_3xx"
	haproxyResponse4xx              = "haproxy_response_4xx"
	haproxyResponse5xx              = "haproxy_response_5xx"
	haproxyResponseOther            = "haproxy_response_other"
	haproxyResponseTimeAverage      = "haproxy_response_time_average"
	haproxyRetries                  = "haproxy_retries"
	haproxyRunQueue                 = "haproxy_run_queue"
	haproxyServerAborts             = "haproxy_server_aborts"
	haproxyServerSelectedTotal      = "haproxy_server_selected_total"
	haproxySessionCurrent           = "haproxy_session_current"
	haproxySessionLimit             = "haproxy_session_limit"
	haproxySessionMax               = "haproxy_session_max"
	haproxySessionRate              = "haproxy_session_rate"
	haproxySessionRateAll           = "haproxy_session_rate_all"
	haproxySessionRateLimit         = "haproxy_session_rate_limit"
	haproxySessionRateMax           = "haproxy_session_rate_max"
	haproxySessionTimeAverage       = "haproxy_session_time_average"
	haproxySessionTotal             = "haproxy_session_total"
	haproxySslBackendKeyRate        = "haproxy_ssl_backend_key_rate"
	haproxySslCacheLookups          = "haproxy_ssl_cache_lookups"
	haproxySslCacheMisses           = "haproxy_ssl_cache_misses"
	haproxySslConnections           = "haproxy_ssl_connections"
	haproxySslFrontendKeyRate       = "haproxy_ssl_frontend_key_rate"
	haproxySslRate                  = "haproxy_ssl_rate"
	haproxyStatus                   = "haproxy_status"
	haproxyTasks                    = "haproxy_tasks"
	haproxyThrottle                 = "haproxy_throttle"
	haproxyUptimeSeconds            = "haproxy_uptime_seconds"
	haproxyZlibMemoryUsage          = "haproxy_zlib_memory_usage"
)

var metricSet = map[string]monitors.MetricInfo{
	haproxyActiveServers:            {Type: datapoint.Gauge},
	haproxyBackupServers:            {Type: datapoint.Gauge},
	haproxyBytesIn:                  {Type: datapoint.Counter},
	haproxyBytesOut:                 {Type: datapoint.Counter},
	haproxyCheckDuration:            {Type: datapoint.Gauge},
	haproxyClientAborts:             {Type: datapoint.Counter},
	haproxyCompressBitsPerSecondIn:  {Type: datapoint.Counter},
	haproxyCompressBitsPerSecondOut: {Type: datapoint.Counter},
	haproxyCompressBypass:           {Type: datapoint.Counter},
	haproxyCompressIn:               {Type: datapoint.Counter},
	haproxyCompressOut:              {Type: datapoint.Counter},
	haproxyCompressResponses:        {Type: datapoint.Counter},
	haproxyConnectionRate:           {Type: datapoint.Gauge},
	haproxyConnectionRateAll:        {Type: datapoint.Gauge},
	haproxyConnectionRateMax:        {Type: datapoint.Gauge},
	haproxyConnectionTotal:          {Type: datapoint.Counter},
	haproxyConnections:              {Type: datapoint.Counter},
	haproxyCurrentConnections:       {Type: datapoint.Gauge},
	haproxyCurrentSslConnections:    {Type: datapoint.Gauge},
	haproxyDeniedRequest:            {Type: datapoint.Counter},
	haproxyDeniedResponse:           {Type: datapoint.Counter},
	haproxyDeniedTCPConnections:     {Type: datapoint.Gauge},
	haproxyDeniedTCPSessions:        {Type: datapoint.Gauge},
	haproxyDowntime:                 {Type: datapoint.Counter},
	haproxyErrorConnections:         {Type: datapoint.Counter},
	haproxyErrorRequest:             {Type: datapoint.Counter},
	haproxyErrorResponse:            {Type: datapoint.Counter},
	haproxyFailedChecks:             {Type: datapoint.Counter},
	haproxyIdlePercent:              {Type: datapoint.Gauge},
	haproxyInterceptedRequests:      {Type: datapoint.Gauge},
	haproxyLastSession:              {Type: datapoint.Gauge},
	haproxyMaxConnectionRate:        {Type: datapoint.Gauge},
	haproxyMaxConnections:           {Type: datapoint.Gauge},
	haproxyMaxPipes:                 {Type: datapoint.Gauge},
	haproxyMaxSessionRate:           {Type: datapoint.Gauge},
	haproxyMaxSslConnections:        {Type: datapoint.Gauge},
	haproxyPipesFree:                {Type: datapoint.Gauge},
	haproxyPipesUsed:                {Type: datapoint.Gauge},
	haproxyQueueCurrent:             {Type: datapoint.Gauge},
	haproxyQueueLimit:               {Type: datapoint.Gauge},
	haproxyQueueMax:                 {Type: datapoint.Gauge},
	haproxyQueueTimeAverage:         {Type: datapoint.Gauge},
	haproxyRedispatched:             {Type: datapoint.Counter},
	haproxyRequestRate:              {Type: datapoint.Gauge},
	haproxyRequestRateMax:           {Type: datapoint.Gauge},
	haproxyRequestTotal:             {Type: datapoint.Counter},
	haproxyRequests:                 {Type: datapoint.Counter},
	haproxyResponse1xx:              {Type: datapoint.Counter},
	haproxyResponse2xx:              {Type: datapoint.Counter},
	haproxyResponse3xx:              {Type: datapoint.Counter},
	haproxyResponse4xx:              {Type: datapoint.Counter},
	haproxyResponse5xx:              {Type: datapoint.Counter},
	haproxyResponseOther:            {Type: datapoint.Counter},
	haproxyResponseTimeAverage:      {Type: datapoint.Gauge},
	haproxyRetries:                  {Type: datapoint.Counter},
	haproxyRunQueue:                 {Type: datapoint.Gauge},
	haproxyServerAborts:             {Type: datapoint.Counter},
	haproxyServerSelectedTotal:      {Type: datapoint.Counter},
	haproxySessionCurrent:           {Type: datapoint.Gauge},
	haproxySessionLimit:             {Type: datapoint.Gauge},
	haproxySessionMax:               {Type: datapoint.Gauge},
	haproxySessionRate:              {Type: datapoint.Gauge},
	haproxySessionRateAll:           {Type: datapoint.Gauge},
	haproxySessionRateLimit:         {Type: datapoint.Gauge},
	haproxySessionRateMax:           {Type: datapoint.Gauge},
	haproxySessionTimeAverage:       {Type: datapoint.Gauge},
	haproxySessionTotal:             {Type: datapoint.Counter},
	haproxySslBackendKeyRate:        {Type: datapoint.Gauge},
	haproxySslCacheLookups:          {Type: datapoint.Counter},
	haproxySslCacheMisses:           {Type: datapoint.Counter},
	haproxySslConnections:           {Type: datapoint.Counter},
	haproxySslFrontendKeyRate:       {Type: datapoint.Gauge},
	haproxySslRate:                  {Type: datapoint.Gauge},
	haproxyStatus:                   {Type: datapoint.Gauge},
	haproxyTasks:                    {Type: datapoint.Gauge},
	haproxyThrottle:                 {Type: datapoint.Gauge},
	haproxyUptimeSeconds:            {Type: datapoint.Counter},
	haproxyZlibMemoryUsage:          {Type: datapoint.Gauge},
}

var defaultMetrics = map[string]bool{
	haproxyBytesIn:             true,
	haproxyBytesOut:            true,
	haproxyConnectionRateAll:   true,
	haproxyDeniedRequest:       true,
	haproxyDeniedResponse:      true,
	haproxyErrorConnections:    true,
	haproxyErrorRequest:        true,
	haproxyErrorResponse:       true,
	haproxyIdlePercent:         true,
	haproxyQueueCurrent:        true,
	haproxyQueueTimeAverage:    true,
	haproxyRedispatched:        true,
	haproxyRequestRate:         true,
	haproxyRequests:            true,
	haproxyResponse2xx:         true,
	haproxyResponse4xx:         true,
	haproxyResponse5xx:         true,
	haproxyResponseTimeAverage: true,
	haproxyRetries:             true,
	haproxyServerSelectedTotal: true,
	haproxySessionCurrent:      true,
	haproxySessionRate:         true,
	haproxySessionRateAll:      true,
	haproxySessionTimeAverage:  true,
}

var groupMetricsMap = map[string][]string{}

var monitorMetadata = monitors.Metadata{
	MonitorType:     "haproxy",
	DefaultMetrics:  defaultMetrics,
	Metrics:         metricSet,
	SendUnknown:     false,
	Groups:          groupSet,
	GroupMetricsMap: groupMetricsMap,
	SendAll:         false,
}
