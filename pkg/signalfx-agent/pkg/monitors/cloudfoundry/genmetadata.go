// Code generated by monitor-code-gen. DO NOT EDIT.

package cloudfoundry

import (
	"github.com/signalfx/golib/v3/datapoint"
	"github.com/signalfx/signalfx-agent/pkg/monitors"
)

const monitorType = "cloudfoundry-firehose-nozzle"

const (
	groupContainer = "container"
)

var groupSet = map[string]bool{
	groupContainer: true,
}

const (
	auctioneerAuctioneerFetchStatesDuration                = "auctioneer.AuctioneerFetchStatesDuration"
	auctioneerAuctioneerLRPAuctionsFailed                  = "auctioneer.AuctioneerLRPAuctionsFailed"
	auctioneerAuctioneerLRPAuctionsStarted                 = "auctioneer.AuctioneerLRPAuctionsStarted"
	auctioneerAuctioneerTaskAuctionsFailed                 = "auctioneer.AuctioneerTaskAuctionsFailed"
	auctioneerAuctioneerTaskAuctionsStarted                = "auctioneer.AuctioneerTaskAuctionsStarted"
	auctioneerLockHeldV1LocksAuctioneerLock                = "auctioneer.LockHeld.v1-locks-auctioneer_lock"
	auctioneerLockHeldDurationV1LocksAuctioneerLock        = "auctioneer.LockHeldDuration.v1-locks-auctioneer_lock"
	auctioneerMemoryStatsLastGCPauseTimeNS                 = "auctioneer.memoryStats.lastGCPauseTimeNS"
	auctioneerMemoryStatsNumBytesAllocated                 = "auctioneer.memoryStats.numBytesAllocated"
	auctioneerMemoryStatsNumBytesAllocatedHeap             = "auctioneer.memoryStats.numBytesAllocatedHeap"
	auctioneerMemoryStatsNumBytesAllocatedStack            = "auctioneer.memoryStats.numBytesAllocatedStack"
	auctioneerMemoryStatsNumFrees                          = "auctioneer.memoryStats.numFrees"
	auctioneerMemoryStatsNumMallocs                        = "auctioneer.memoryStats.numMallocs"
	auctioneerNumCPUS                                      = "auctioneer.numCPUS"
	auctioneerNumGoRoutines                                = "auctioneer.numGoRoutines"
	bbsBBSMasterElected                                    = "bbs.BBSMasterElected"
	bbsConvergenceLRPDuration                              = "bbs.ConvergenceLRPDuration"
	bbsConvergenceLRPPreProcessingActualLRPsDeleted        = "bbs.ConvergenceLRPPreProcessingActualLRPsDeleted"
	bbsConvergenceLRPPreProcessingMalformedRunInfos        = "bbs.ConvergenceLRPPreProcessingMalformedRunInfos"
	bbsConvergenceLRPPreProcessingMalformedSchedulingInfos = "bbs.ConvergenceLRPPreProcessingMalformedSchedulingInfos"
	bbsConvergenceLRPRuns                                  = "bbs.ConvergenceLRPRuns"
	bbsConvergenceTaskDuration                             = "bbs.ConvergenceTaskDuration"
	bbsConvergenceTaskRuns                                 = "bbs.ConvergenceTaskRuns"
	bbsConvergenceTasksKicked                              = "bbs.ConvergenceTasksKicked"
	bbsConvergenceTasksPruned                              = "bbs.ConvergenceTasksPruned"
	bbsCrashedActualLRPs                                   = "bbs.CrashedActualLRPs"
	bbsCrashingDesiredLRPs                                 = "bbs.CrashingDesiredLRPs"
	bbsDomainCfApps                                        = "bbs.Domain.cf-apps"
	bbsDomainCfTasks                                       = "bbs.Domain.cf-tasks"
	bbsETCDLeader                                          = "bbs.ETCDLeader"
	bbsETCDRaftTerm                                        = "bbs.ETCDRaftTerm"
	bbsETCDReceivedBandwidthRate                           = "bbs.ETCDReceivedBandwidthRate"
	bbsETCDReceivedRequestRate                             = "bbs.ETCDReceivedRequestRate"
	bbsETCDSentBandwidthRate                               = "bbs.ETCDSentBandwidthRate"
	bbsETCDSentRequestRate                                 = "bbs.ETCDSentRequestRate"
	bbsETCDWatchers                                        = "bbs.ETCDWatchers"
	bbsLRPsClaimed                                         = "bbs.LRPsClaimed"
	bbsLRPsDesired                                         = "bbs.LRPsDesired"
	bbsLRPsExtra                                           = "bbs.LRPsExtra"
	bbsLRPsMissing                                         = "bbs.LRPsMissing"
	bbsLRPsRunning                                         = "bbs.LRPsRunning"
	bbsLRPsUnclaimed                                       = "bbs.LRPsUnclaimed"
	bbsLockHeldV1LocksBbsLock                              = "bbs.LockHeld.v1-locks-bbs_lock"
	bbsLockHeldDurationV1LocksBbsLock                      = "bbs.LockHeldDuration.v1-locks-bbs_lock"
	bbsMetricsReportingDuration                            = "bbs.MetricsReportingDuration"
	bbsMigrationDuration                                   = "bbs.MigrationDuration"
	bbsRequestCount                                        = "bbs.RequestCount"
	bbsRequestLatency                                      = "bbs.RequestLatency"
	bbsTasksCompleted                                      = "bbs.TasksCompleted"
	bbsTasksPending                                        = "bbs.TasksPending"
	bbsTasksResolving                                      = "bbs.TasksResolving"
	bbsTasksRunning                                        = "bbs.TasksRunning"
	bbsMemoryStatsLastGCPauseTimeNS                        = "bbs.memoryStats.lastGCPauseTimeNS"
	bbsMemoryStatsNumBytesAllocated                        = "bbs.memoryStats.numBytesAllocated"
	bbsMemoryStatsNumBytesAllocatedHeap                    = "bbs.memoryStats.numBytesAllocatedHeap"
	bbsMemoryStatsNumBytesAllocatedStack                   = "bbs.memoryStats.numBytesAllocatedStack"
	bbsMemoryStatsNumFrees                                 = "bbs.memoryStats.numFrees"
	bbsMemoryStatsNumMallocs                               = "bbs.memoryStats.numMallocs"
	bbsNumCPUS                                             = "bbs.numCPUS"
	bbsNumGoRoutines                                       = "bbs.numGoRoutines"
	boshSystemMetricsForwarderSystemCPUSys                 = "bosh-system-metrics-forwarder.system.cpu.sys"
	boshSystemMetricsForwarderSystemCPUUser                = "bosh-system-metrics-forwarder.system.cpu.user"
	boshSystemMetricsForwarderSystemCPUWait                = "bosh-system-metrics-forwarder.system.cpu.wait"
	boshSystemMetricsForwarderSystemDiskEphemeralPercent   = "bosh-system-metrics-forwarder.system.disk.ephemeral.percent"
	boshSystemMetricsForwarderSystemDiskSystemPercent      = "bosh-system-metrics-forwarder.system.disk.system.percent"
	boshSystemMetricsForwarderSystemHealthy                = "bosh-system-metrics-forwarder.system.healthy"
	boshSystemMetricsForwarderSystemMemPercent             = "bosh-system-metrics-forwarder.system.mem.percent"
	boshSystemMetricsForwarderSystemSwapPercent            = "bosh-system-metrics-forwarder.system.swap.percent"
	ccFailedJobCountVMNAMEVMINDEX                          = "cc.failed_job_count.VM_NAME-VM_INDEX"
	ccFailedJobCountCcGeneric                              = "cc.failed_job_count.cc-generic"
	ccFailedJobCountTotal                                  = "cc.failed_job_count.total"
	ccHTTPStatus1XX                                        = "cc.http_status.1XX"
	ccHTTPStatus2XX                                        = "cc.http_status.2XX"
	ccHTTPStatus3XX                                        = "cc.http_status.3XX"
	ccHTTPStatus4XX                                        = "cc.http_status.4XX"
	ccHTTPStatus5XX                                        = "cc.http_status.5XX"
	ccJobQueueLengthCcVMNAMEVMINDEX                        = "cc.job_queue_length.cc-VM_NAME-VM_INDEX"
	ccJobQueueLengthCcGeneric                              = "cc.job_queue_length.cc-generic"
	ccJobQueueLengthTotal                                  = "cc.job_queue_length.total"
	ccLogCountAll                                          = "cc.log_count.all"
	ccLogCountDebug                                        = "cc.log_count.debug"
	ccLogCountDebug1                                       = "cc.log_count.debug1"
	ccLogCountDebug2                                       = "cc.log_count.debug2"
	ccLogCountError                                        = "cc.log_count.error"
	ccLogCountFatal                                        = "cc.log_count.fatal"
	ccLogCountInfo                                         = "cc.log_count.info"
	ccLogCountOff                                          = "cc.log_count.off"
	ccLogCountWarn                                         = "cc.log_count.warn"
	ccRequestsCompleted                                    = "cc.requests.completed"
	ccRequestsOutstanding                                  = "cc.requests.outstanding"
	ccTasksRunningCount                                    = "cc.tasks_running.count"
	ccTasksRunningMemoryInMb                               = "cc.tasks_running.memory_in_mb"
	ccThreadInfoEventMachineConnectionCount                = "cc.thread_info.event_machine.connection_count"
	ccThreadInfoEventMachineResultqueueNumWaiting          = "cc.thread_info.event_machine.resultqueue.num_waiting"
	ccThreadInfoEventMachineResultqueueSize                = "cc.thread_info.event_machine.resultqueue.size"
	ccThreadInfoEventMachineThreadqueueNumWaiting          = "cc.thread_info.event_machine.threadqueue.num_waiting"
	ccThreadInfoEventMachineThreadqueueSize                = "cc.thread_info.event_machine.threadqueue.size"
	ccThreadInfoThreadCount                                = "cc.thread_info.thread_count"
	ccTotalUsers                                           = "cc.total_users"
	ccVitalsCPU                                            = "cc.vitals.cpu"
	ccVitalsCPULoadAvg                                     = "cc.vitals.cpu_load_avg"
	ccVitalsMemBytes                                       = "cc.vitals.mem_bytes"
	ccVitalsMemFreeBytes                                   = "cc.vitals.mem_free_bytes"
	ccVitalsMemUsedBytes                                   = "cc.vitals.mem_used_bytes"
	ccVitalsNumCores                                       = "cc.vitals.num_cores"
	ccVitalsUptime                                         = "cc.vitals.uptime"
	ccUploaderMemoryStatsLastGCPauseTimeNS                 = "cc_uploader.memoryStats.lastGCPauseTimeNS"
	ccUploaderMemoryStatsNumBytesAllocated                 = "cc_uploader.memoryStats.numBytesAllocated"
	ccUploaderMemoryStatsNumBytesAllocatedHeap             = "cc_uploader.memoryStats.numBytesAllocatedHeap"
	ccUploaderMemoryStatsNumBytesAllocatedStack            = "cc_uploader.memoryStats.numBytesAllocatedStack"
	ccUploaderMemoryStatsNumFrees                          = "cc_uploader.memoryStats.numFrees"
	ccUploaderMemoryStatsNumMallocs                        = "cc_uploader.memoryStats.numMallocs"
	ccUploaderNumCPUS                                      = "cc_uploader.numCPUS"
	ccUploaderNumGoRoutines                                = "cc_uploader.numGoRoutines"
	containerCPUPercentage                                 = "container.cpu_percentage"
	containerDiskBytes                                     = "container.disk_bytes"
	containerDiskBytesQuota                                = "container.disk_bytes_quota"
	containerMemoryBytes                                   = "container.memory_bytes"
	containerMemoryBytesQuota                              = "container.memory_bytes_quota"
	etcdCompareAndDeleteFail                               = "etcd.CompareAndDeleteFail"
	etcdCompareAndDeleteSuccess                            = "etcd.CompareAndDeleteSuccess"
	etcdCompareAndSwapFail                                 = "etcd.CompareAndSwapFail"
	etcdCompareAndSwapSuccess                              = "etcd.CompareAndSwapSuccess"
	etcdCreateFail                                         = "etcd.CreateFail"
	etcdCreateSuccess                                      = "etcd.CreateSuccess"
	etcdDeleteFail                                         = "etcd.DeleteFail"
	etcdDeleteSuccess                                      = "etcd.DeleteSuccess"
	etcdEtcdIndex                                          = "etcd.EtcdIndex"
	etcdExpireCount                                        = "etcd.ExpireCount"
	etcdFollowers                                          = "etcd.Followers"
	etcdGetsFail                                           = "etcd.GetsFail"
	etcdGetsSuccess                                        = "etcd.GetsSuccess"
	etcdIsLeader                                           = "etcd.IsLeader"
	etcdLatency                                            = "etcd.Latency"
	etcdRaftIndex                                          = "etcd.RaftIndex"
	etcdRaftTerm                                           = "etcd.RaftTerm"
	etcdReceivedAppendRequests                             = "etcd.ReceivedAppendRequests"
	etcdReceivingBandwidthRate                             = "etcd.ReceivingBandwidthRate"
	etcdReceivingRequestRate                               = "etcd.ReceivingRequestRate"
	etcdSendingBandwidthRate                               = "etcd.SendingBandwidthRate"
	etcdSendingRequestRate                                 = "etcd.SendingRequestRate"
	etcdSentAppendRequests                                 = "etcd.SentAppendRequests"
	etcdSetsFail                                           = "etcd.SetsFail"
	etcdSetsSuccess                                        = "etcd.SetsSuccess"
	etcdUpdateFail                                         = "etcd.UpdateFail"
	etcdUpdateSuccess                                      = "etcd.UpdateSuccess"
	etcdWatchers                                           = "etcd.Watchers"
	fileServerMemoryStatsLastGCPauseTimeNS                 = "file_server.memoryStats.lastGCPauseTimeNS"
	fileServerMemoryStatsNumBytesAllocated                 = "file_server.memoryStats.numBytesAllocated"
	fileServerMemoryStatsNumBytesAllocatedHeap             = "file_server.memoryStats.numBytesAllocatedHeap"
	fileServerMemoryStatsNumBytesAllocatedStack            = "file_server.memoryStats.numBytesAllocatedStack"
	fileServerMemoryStatsNumFrees                          = "file_server.memoryStats.numFrees"
	fileServerMemoryStatsNumMallocs                        = "file_server.memoryStats.numMallocs"
	fileServerNumCPUS                                      = "file_server.numCPUS"
	fileServerNumGoRoutines                                = "file_server.numGoRoutines"
	gardenLinuxBackingStores                               = "garden_linux.BackingStores"
	gardenLinuxDepotDirs                                   = "garden_linux.DepotDirs"
	gardenLinuxLoopDevices                                 = "garden_linux.LoopDevices"
	gardenLinuxMetricsReporting                            = "garden_linux.MetricsReporting"
	gardenLinuxMemoryStatsLastGCPauseTimeNS                = "garden_linux.memoryStats.lastGCPauseTimeNS"
	gardenLinuxMemoryStatsNumBytesAllocated                = "garden_linux.memoryStats.numBytesAllocated"
	gardenLinuxMemoryStatsNumBytesAllocatedHeap            = "garden_linux.memoryStats.numBytesAllocatedHeap"
	gardenLinuxMemoryStatsNumBytesAllocatedStack           = "garden_linux.memoryStats.numBytesAllocatedStack"
	gardenLinuxMemoryStatsNumFrees                         = "garden_linux.memoryStats.numFrees"
	gardenLinuxMemoryStatsNumMallocs                       = "garden_linux.memoryStats.numMallocs"
	gardenLinuxNumCPUS                                     = "garden_linux.numCPUS"
	gardenLinuxNumGoRoutines                               = "garden_linux.numGoRoutines"
	gorouterBackendExhaustedConns                          = "gorouter.backend_exhausted_conns"
	gorouterBadGateways                                    = "gorouter.bad_gateways"
	gorouterResponses                                      = "gorouter.responses"
	gorouterTotalRequests                                  = "gorouter.total_requests"
	gorouterTotalRoutes                                    = "gorouter.total_routes"
	nsyncBulkerDesiredLRPSyncDuration                      = "nsync_bulker.DesiredLRPSyncDuration"
	nsyncBulkerLRPsDesired                                 = "nsync_bulker.LRPsDesired"
	nsyncBulkerLockHeldV1LocksNsyncBulkerLock              = "nsync_bulker.LockHeld.v1-locks-nsync_bulker_lock"
	nsyncBulkerLockHeldDurationV1LocksNsyncBulkerLock      = "nsync_bulker.LockHeldDuration.v1-locks-nsync_bulker_lock"
	nsyncBulkerNsyncInvalidDesiredLRPsFound                = "nsync_bulker.NsyncInvalidDesiredLRPsFound"
	nsyncBulkerMemoryStatsLastGCPauseTimeNS                = "nsync_bulker.memoryStats.lastGCPauseTimeNS"
	nsyncBulkerMemoryStatsNumBytesAllocated                = "nsync_bulker.memoryStats.numBytesAllocated"
	nsyncBulkerMemoryStatsNumBytesAllocatedHeap            = "nsync_bulker.memoryStats.numBytesAllocatedHeap"
	nsyncBulkerMemoryStatsNumBytesAllocatedStack           = "nsync_bulker.memoryStats.numBytesAllocatedStack"
	nsyncBulkerMemoryStatsNumFrees                         = "nsync_bulker.memoryStats.numFrees"
	nsyncBulkerMemoryStatsNumMallocs                       = "nsync_bulker.memoryStats.numMallocs"
	nsyncBulkerNumCPUS                                     = "nsync_bulker.numCPUS"
	nsyncBulkerNumGoRoutines                               = "nsync_bulker.numGoRoutines"
	nsyncListenerMemoryStatsLastGCPauseTimeNS              = "nsync_listener.memoryStats.lastGCPauseTimeNS"
	nsyncListenerMemoryStatsNumBytesAllocated              = "nsync_listener.memoryStats.numBytesAllocated"
	nsyncListenerMemoryStatsNumBytesAllocatedHeap          = "nsync_listener.memoryStats.numBytesAllocatedHeap"
	nsyncListenerMemoryStatsNumBytesAllocatedStack         = "nsync_listener.memoryStats.numBytesAllocatedStack"
	nsyncListenerMemoryStatsNumFrees                       = "nsync_listener.memoryStats.numFrees"
	nsyncListenerMemoryStatsNumMallocs                     = "nsync_listener.memoryStats.numMallocs"
	nsyncListenerNumCPUS                                   = "nsync_listener.numCPUS"
	nsyncListenerNumGoRoutines                             = "nsync_listener.numGoRoutines"
	repCM                                                  = "rep.CM"
	repCapacityRemainingContainers                         = "rep.CapacityRemainingContainers"
	repCapacityRemainingDisk                               = "rep.CapacityRemainingDisk"
	repCapacityRemainingMemory                             = "rep.CapacityRemainingMemory"
	repCapacityTotalContainers                             = "rep.CapacityTotalContainers"
	repCapacityTotalDisk                                   = "rep.CapacityTotalDisk"
	repCapacityTotalMemory                                 = "rep.CapacityTotalMemory"
	repContainerCount                                      = "rep.ContainerCount"
	repGardenContainerCreationDuration                     = "rep.GardenContainerCreationDuration"
	repLogMessage                                          = "rep.LogMessage"
	repRepBulkSyncDuration                                 = "rep.RepBulkSyncDuration"
	repUnhealthyCell                                       = "rep.UnhealthyCell"
	repAbsoluteEntitlement                                 = "rep.absolute_entitlement"
	repAbsoluteUsage                                       = "rep.absolute_usage"
	repContainerAge                                        = "rep.container_age"
	repCPU                                                 = "rep.cpu"
	repDisk                                                = "rep.disk"
	repDiskQuota                                           = "rep.disk_quota"
	repLogSenderTotalMessagesRead                          = "rep.logSenderTotalMessagesRead"
	repMemory                                              = "rep.memory"
	repMemoryStatsLastGCPauseTimeNS                        = "rep.memoryStats.lastGCPauseTimeNS"
	repMemoryStatsNumBytesAllocated                        = "rep.memoryStats.numBytesAllocated"
	repMemoryStatsNumBytesAllocatedHeap                    = "rep.memoryStats.numBytesAllocatedHeap"
	repMemoryStatsNumBytesAllocatedStack                   = "rep.memoryStats.numBytesAllocatedStack"
	repMemoryStatsNumFrees                                 = "rep.memoryStats.numFrees"
	repMemoryStatsNumMallocs                               = "rep.memoryStats.numMallocs"
	repMemoryQuota                                         = "rep.memory_quota"
	repNumCPUS                                             = "rep.numCPUS"
	repNumGoRoutines                                       = "rep.numGoRoutines"
	routeEmitterLockHeldV1LocksRouteEmitterLock            = "route_emitter.LockHeld.v1-locks-route_emitter_lock"
	routeEmitterLockHeldDurationV1LocksRouteEmitterLock    = "route_emitter.LockHeldDuration.v1-locks-route_emitter_lock"
	routeEmitterMessagesEmitted                            = "route_emitter.MessagesEmitted"
	routeEmitterRouteEmitterSyncDuration                   = "route_emitter.RouteEmitterSyncDuration"
	routeEmitterRoutesRegistered                           = "route_emitter.RoutesRegistered"
	routeEmitterRoutesSynced                               = "route_emitter.RoutesSynced"
	routeEmitterRoutesTotal                                = "route_emitter.RoutesTotal"
	routeEmitterRoutesUnregistered                         = "route_emitter.RoutesUnregistered"
	routeEmitterMemoryStatsLastGCPauseTimeNS               = "route_emitter.memoryStats.lastGCPauseTimeNS"
	routeEmitterMemoryStatsNumBytesAllocated               = "route_emitter.memoryStats.numBytesAllocated"
	routeEmitterMemoryStatsNumBytesAllocatedHeap           = "route_emitter.memoryStats.numBytesAllocatedHeap"
	routeEmitterMemoryStatsNumBytesAllocatedStack          = "route_emitter.memoryStats.numBytesAllocatedStack"
	routeEmitterMemoryStatsNumFrees                        = "route_emitter.memoryStats.numFrees"
	routeEmitterMemoryStatsNumMallocs                      = "route_emitter.memoryStats.numMallocs"
	routeEmitterNumCPUS                                    = "route_emitter.numCPUS"
	routeEmitterNumGoRoutines                              = "route_emitter.numGoRoutines"
	sshProxyMemoryStatsLastGCPauseTimeNS                   = "ssh_proxy.memoryStats.lastGCPauseTimeNS"
	sshProxyMemoryStatsNumBytesAllocated                   = "ssh_proxy.memoryStats.numBytesAllocated"
	sshProxyMemoryStatsNumBytesAllocatedHeap               = "ssh_proxy.memoryStats.numBytesAllocatedHeap"
	sshProxyMemoryStatsNumBytesAllocatedStack              = "ssh_proxy.memoryStats.numBytesAllocatedStack"
	sshProxyMemoryStatsNumFrees                            = "ssh_proxy.memoryStats.numFrees"
	sshProxyMemoryStatsNumMallocs                          = "ssh_proxy.memoryStats.numMallocs"
	sshProxyNumCPUS                                        = "ssh_proxy.numCPUS"
	sshProxyNumGoRoutines                                  = "ssh_proxy.numGoRoutines"
	stagerStagingRequestFailedDuration                     = "stager.StagingRequestFailedDuration"
	stagerStagingRequestSucceededDuration                  = "stager.StagingRequestSucceededDuration"
	stagerStagingRequestsFailed                            = "stager.StagingRequestsFailed"
	stagerStagingRequestsSucceeded                         = "stager.StagingRequestsSucceeded"
	stagerStagingStartRequestsReceived                     = "stager.StagingStartRequestsReceived"
	stagerMemoryStatsLastGCPauseTimeNS                     = "stager.memoryStats.lastGCPauseTimeNS"
	stagerMemoryStatsNumBytesAllocated                     = "stager.memoryStats.numBytesAllocated"
	stagerMemoryStatsNumBytesAllocatedHeap                 = "stager.memoryStats.numBytesAllocatedHeap"
	stagerMemoryStatsNumBytesAllocatedStack                = "stager.memoryStats.numBytesAllocatedStack"
	stagerMemoryStatsNumFrees                              = "stager.memoryStats.numFrees"
	stagerMemoryStatsNumMallocs                            = "stager.memoryStats.numMallocs"
	stagerNumCPUS                                          = "stager.numCPUS"
	stagerNumGoRoutines                                    = "stager.numGoRoutines"
	syslogDrainBinderMemoryStatsLastGCPauseTimeNS          = "syslog_drain_binder.memoryStats.lastGCPauseTimeNS"
	syslogDrainBinderMemoryStatsNumBytesAllocated          = "syslog_drain_binder.memoryStats.numBytesAllocated"
	syslogDrainBinderMemoryStatsNumBytesAllocatedHeap      = "syslog_drain_binder.memoryStats.numBytesAllocatedHeap"
	syslogDrainBinderMemoryStatsNumBytesAllocatedStack     = "syslog_drain_binder.memoryStats.numBytesAllocatedStack"
	syslogDrainBinderMemoryStatsNumFrees                   = "syslog_drain_binder.memoryStats.numFrees"
	syslogDrainBinderMemoryStatsNumMallocs                 = "syslog_drain_binder.memoryStats.numMallocs"
	syslogDrainBinderNumCPUS                               = "syslog_drain_binder.numCPUS"
	syslogDrainBinderNumGoRoutines                         = "syslog_drain_binder.numGoRoutines"
	syslogDrainBinderPollCount                             = "syslog_drain_binder.pollCount"
	syslogDrainBinderTotalDrains                           = "syslog_drain_binder.totalDrains"
	systemMetricsAgentSystemCPUCoreIdle                    = "system_metrics_agent.system_cpu_core_idle"
	systemMetricsAgentSystemCPUCoreSys                     = "system_metrics_agent.system_cpu_core_sys"
	systemMetricsAgentSystemCPUCoreUser                    = "system_metrics_agent.system_cpu_core_user"
	systemMetricsAgentSystemCPUCoreWait                    = "system_metrics_agent.system_cpu_core_wait"
	systemMetricsAgentSystemCPUIdle                        = "system_metrics_agent.system_cpu_idle"
	systemMetricsAgentSystemCPUSys                         = "system_metrics_agent.system_cpu_sys"
	systemMetricsAgentSystemCPUUser                        = "system_metrics_agent.system_cpu_user"
	systemMetricsAgentSystemCPUWait                        = "system_metrics_agent.system_cpu_wait"
	systemMetricsAgentSystemDiskEphemeralInodePercent      = "system_metrics_agent.system_disk_ephemeral_inode_percent"
	systemMetricsAgentSystemDiskEphemeralIoTime            = "system_metrics_agent.system_disk_ephemeral_io_time"
	systemMetricsAgentSystemDiskEphemeralPercent           = "system_metrics_agent.system_disk_ephemeral_percent"
	systemMetricsAgentSystemDiskEphemeralReadBytes         = "system_metrics_agent.system_disk_ephemeral_read_bytes"
	systemMetricsAgentSystemDiskEphemeralReadTime          = "system_metrics_agent.system_disk_ephemeral_read_time"
	systemMetricsAgentSystemDiskEphemeralWriteBytes        = "system_metrics_agent.system_disk_ephemeral_write_bytes"
	systemMetricsAgentSystemDiskEphemeralWriteTime         = "system_metrics_agent.system_disk_ephemeral_write_time"
	systemMetricsAgentSystemDiskPersistentInodePercent     = "system_metrics_agent.system_disk_persistent_inode_percent"
	systemMetricsAgentSystemDiskPersistentIoTime           = "system_metrics_agent.system_disk_persistent_io_time"
	systemMetricsAgentSystemDiskPersistentPercent          = "system_metrics_agent.system_disk_persistent_percent"
	systemMetricsAgentSystemDiskPersistentReadBytes        = "system_metrics_agent.system_disk_persistent_read_bytes"
	systemMetricsAgentSystemDiskPersistentReadTime         = "system_metrics_agent.system_disk_persistent_read_time"
	systemMetricsAgentSystemDiskPersistentWriteBytes       = "system_metrics_agent.system_disk_persistent_write_bytes"
	systemMetricsAgentSystemDiskPersistentWriteTime        = "system_metrics_agent.system_disk_persistent_write_time"
	systemMetricsAgentSystemDiskSystemInodePercent         = "system_metrics_agent.system_disk_system_inode_percent"
	systemMetricsAgentSystemDiskSystemIoTime               = "system_metrics_agent.system_disk_system_io_time"
	systemMetricsAgentSystemDiskSystemPercent              = "system_metrics_agent.system_disk_system_percent"
	systemMetricsAgentSystemDiskSystemReadBytes            = "system_metrics_agent.system_disk_system_read_bytes"
	systemMetricsAgentSystemDiskSystemReadTime             = "system_metrics_agent.system_disk_system_read_time"
	systemMetricsAgentSystemDiskSystemWriteBytes           = "system_metrics_agent.system_disk_system_write_bytes"
	systemMetricsAgentSystemDiskSystemWriteTime            = "system_metrics_agent.system_disk_system_write_time"
	systemMetricsAgentSystemHealthy                        = "system_metrics_agent.system_healthy"
	systemMetricsAgentSystemLoad15m                        = "system_metrics_agent.system_load_15m"
	systemMetricsAgentSystemLoad1m                         = "system_metrics_agent.system_load_1m"
	systemMetricsAgentSystemLoad5m                         = "system_metrics_agent.system_load_5m"
	systemMetricsAgentSystemMemKb                          = "system_metrics_agent.system_mem_kb"
	systemMetricsAgentSystemMemPercent                     = "system_metrics_agent.system_mem_percent"
	systemMetricsAgentSystemNetworkBytesReceived           = "system_metrics_agent.system_network_bytes_received"
	systemMetricsAgentSystemNetworkBytesSent               = "system_metrics_agent.system_network_bytes_sent"
	systemMetricsAgentSystemNetworkDropIn                  = "system_metrics_agent.system_network_drop_in"
	systemMetricsAgentSystemNetworkDropOut                 = "system_metrics_agent.system_network_drop_out"
	systemMetricsAgentSystemNetworkErrorIn                 = "system_metrics_agent.system_network_error_in"
	systemMetricsAgentSystemNetworkErrorOut                = "system_metrics_agent.system_network_error_out"
	systemMetricsAgentSystemNetworkIPForwarding            = "system_metrics_agent.system_network_ip_forwarding"
	systemMetricsAgentSystemNetworkPacketsReceived         = "system_metrics_agent.system_network_packets_received"
	systemMetricsAgentSystemNetworkPacketsSent             = "system_metrics_agent.system_network_packets_sent"
	systemMetricsAgentSystemNetworkTCPActiveOpens          = "system_metrics_agent.system_network_tcp_active_opens"
	systemMetricsAgentSystemNetworkTCPCurrEstab            = "system_metrics_agent.system_network_tcp_curr_estab"
	systemMetricsAgentSystemNetworkTCPRetransSegs          = "system_metrics_agent.system_network_tcp_retrans_segs"
	systemMetricsAgentSystemNetworkUDPInErrors             = "system_metrics_agent.system_network_udp_in_errors"
	systemMetricsAgentSystemNetworkUDPLiteInErrors         = "system_metrics_agent.system_network_udp_lite_in_errors"
	systemMetricsAgentSystemNetworkUDPNoPorts              = "system_metrics_agent.system_network_udp_no_ports"
	systemMetricsAgentSystemSwapKb                         = "system_metrics_agent.system_swap_kb"
	systemMetricsAgentSystemSwapPercent                    = "system_metrics_agent.system_swap_percent"
	tpsListenerMemoryStatsLastGCPauseTimeNS                = "tps_listener.memoryStats.lastGCPauseTimeNS"
	tpsListenerMemoryStatsNumBytesAllocated                = "tps_listener.memoryStats.numBytesAllocated"
	tpsListenerMemoryStatsNumBytesAllocatedHeap            = "tps_listener.memoryStats.numBytesAllocatedHeap"
	tpsListenerMemoryStatsNumBytesAllocatedStack           = "tps_listener.memoryStats.numBytesAllocatedStack"
	tpsListenerMemoryStatsNumFrees                         = "tps_listener.memoryStats.numFrees"
	tpsListenerMemoryStatsNumMallocs                       = "tps_listener.memoryStats.numMallocs"
	tpsListenerNumCPUS                                     = "tps_listener.numCPUS"
	tpsListenerNumGoRoutines                               = "tps_listener.numGoRoutines"
	tpsWatcherLockHeldV1LocksTpsWatcherLock                = "tps_watcher.LockHeld.v1-locks-tps_watcher_lock"
	tpsWatcherLockHeldDurationV1LocksTpsWatcherLock        = "tps_watcher.LockHeldDuration.v1-locks-tps_watcher_lock"
	tpsWatcherMemoryStatsLastGCPauseTimeNS                 = "tps_watcher.memoryStats.lastGCPauseTimeNS"
	tpsWatcherMemoryStatsNumBytesAllocated                 = "tps_watcher.memoryStats.numBytesAllocated"
	tpsWatcherMemoryStatsNumBytesAllocatedHeap             = "tps_watcher.memoryStats.numBytesAllocatedHeap"
	tpsWatcherMemoryStatsNumBytesAllocatedStack            = "tps_watcher.memoryStats.numBytesAllocatedStack"
	tpsWatcherMemoryStatsNumFrees                          = "tps_watcher.memoryStats.numFrees"
	tpsWatcherMemoryStatsNumMallocs                        = "tps_watcher.memoryStats.numMallocs"
	tpsWatcherNumCPUS                                      = "tps_watcher.numCPUS"
	tpsWatcherNumGoRoutines                                = "tps_watcher.numGoRoutines"
	uaaAuditServiceClientAuthenticationCount               = "uaa.audit_service.client_authentication_count"
	uaaAuditServiceClientAuthenticationFailureCount        = "uaa.audit_service.client_authentication_failure_count"
	uaaAuditServicePrincipalAuthenticationFailureCount     = "uaa.audit_service.principal_authentication_failure_count"
	uaaAuditServicePrincipalNotFoundCount                  = "uaa.audit_service.principal_not_found_count"
	uaaAuditServiceUserAuthenticationCount                 = "uaa.audit_service.user_authentication_count"
	uaaAuditServiceUserAuthenticationFailureCount          = "uaa.audit_service.user_authentication_failure_count"
	uaaAuditServiceUserNotFoundCount                       = "uaa.audit_service.user_not_found_count"
	uaaAuditServiceUserPasswordChanges                     = "uaa.audit_service.user_password_changes"
	uaaAuditServiceUserPasswordFailures                    = "uaa.audit_service.user_password_failures"
)

var metricSet = map[string]monitors.MetricInfo{
	auctioneerAuctioneerFetchStatesDuration:                {Type: datapoint.Gauge},
	auctioneerAuctioneerLRPAuctionsFailed:                  {Type: datapoint.Counter},
	auctioneerAuctioneerLRPAuctionsStarted:                 {Type: datapoint.Counter},
	auctioneerAuctioneerTaskAuctionsFailed:                 {Type: datapoint.Counter},
	auctioneerAuctioneerTaskAuctionsStarted:                {Type: datapoint.Counter},
	auctioneerLockHeldV1LocksAuctioneerLock:                {Type: datapoint.Gauge},
	auctioneerLockHeldDurationV1LocksAuctioneerLock:        {Type: datapoint.Gauge},
	auctioneerMemoryStatsLastGCPauseTimeNS:                 {Type: datapoint.Gauge},
	auctioneerMemoryStatsNumBytesAllocated:                 {Type: datapoint.Gauge},
	auctioneerMemoryStatsNumBytesAllocatedHeap:             {Type: datapoint.Gauge},
	auctioneerMemoryStatsNumBytesAllocatedStack:            {Type: datapoint.Gauge},
	auctioneerMemoryStatsNumFrees:                          {Type: datapoint.Gauge},
	auctioneerMemoryStatsNumMallocs:                        {Type: datapoint.Gauge},
	auctioneerNumCPUS:                                      {Type: datapoint.Gauge},
	auctioneerNumGoRoutines:                                {Type: datapoint.Gauge},
	bbsBBSMasterElected:                                    {Type: datapoint.Gauge},
	bbsConvergenceLRPDuration:                              {Type: datapoint.Gauge},
	bbsConvergenceLRPPreProcessingActualLRPsDeleted:        {Type: datapoint.Gauge},
	bbsConvergenceLRPPreProcessingMalformedRunInfos:        {Type: datapoint.Gauge},
	bbsConvergenceLRPPreProcessingMalformedSchedulingInfos: {Type: datapoint.Gauge},
	bbsConvergenceLRPRuns:                                  {Type: datapoint.Counter},
	bbsConvergenceTaskDuration:                             {Type: datapoint.Gauge},
	bbsConvergenceTaskRuns:                                 {Type: datapoint.Counter},
	bbsConvergenceTasksKicked:                              {Type: datapoint.Counter},
	bbsConvergenceTasksPruned:                              {Type: datapoint.Counter},
	bbsCrashedActualLRPs:                                   {Type: datapoint.Gauge},
	bbsCrashingDesiredLRPs:                                 {Type: datapoint.Gauge},
	bbsDomainCfApps:                                        {Type: datapoint.Gauge},
	bbsDomainCfTasks:                                       {Type: datapoint.Gauge},
	bbsETCDLeader:                                          {Type: datapoint.Gauge},
	bbsETCDRaftTerm:                                        {Type: datapoint.Gauge},
	bbsETCDReceivedBandwidthRate:                           {Type: datapoint.Gauge},
	bbsETCDReceivedRequestRate:                             {Type: datapoint.Gauge},
	bbsETCDSentBandwidthRate:                               {Type: datapoint.Gauge},
	bbsETCDSentRequestRate:                                 {Type: datapoint.Gauge},
	bbsETCDWatchers:                                        {Type: datapoint.Gauge},
	bbsLRPsClaimed:                                         {Type: datapoint.Gauge},
	bbsLRPsDesired:                                         {Type: datapoint.Gauge},
	bbsLRPsExtra:                                           {Type: datapoint.Gauge},
	bbsLRPsMissing:                                         {Type: datapoint.Gauge},
	bbsLRPsRunning:                                         {Type: datapoint.Gauge},
	bbsLRPsUnclaimed:                                       {Type: datapoint.Gauge},
	bbsLockHeldV1LocksBbsLock:                              {Type: datapoint.Gauge},
	bbsLockHeldDurationV1LocksBbsLock:                      {Type: datapoint.Gauge},
	bbsMetricsReportingDuration:                            {Type: datapoint.Gauge},
	bbsMigrationDuration:                                   {Type: datapoint.Gauge},
	bbsRequestCount:                                        {Type: datapoint.Counter},
	bbsRequestLatency:                                      {Type: datapoint.Gauge},
	bbsTasksCompleted:                                      {Type: datapoint.Gauge},
	bbsTasksPending:                                        {Type: datapoint.Gauge},
	bbsTasksResolving:                                      {Type: datapoint.Gauge},
	bbsTasksRunning:                                        {Type: datapoint.Gauge},
	bbsMemoryStatsLastGCPauseTimeNS:                        {Type: datapoint.Gauge},
	bbsMemoryStatsNumBytesAllocated:                        {Type: datapoint.Gauge},
	bbsMemoryStatsNumBytesAllocatedHeap:                    {Type: datapoint.Gauge},
	bbsMemoryStatsNumBytesAllocatedStack:                   {Type: datapoint.Gauge},
	bbsMemoryStatsNumFrees:                                 {Type: datapoint.Gauge},
	bbsMemoryStatsNumMallocs:                               {Type: datapoint.Gauge},
	bbsNumCPUS:                                             {Type: datapoint.Gauge},
	bbsNumGoRoutines:                                       {Type: datapoint.Gauge},
	boshSystemMetricsForwarderSystemCPUSys:                 {Type: datapoint.Gauge},
	boshSystemMetricsForwarderSystemCPUUser:                {Type: datapoint.Gauge},
	boshSystemMetricsForwarderSystemCPUWait:                {Type: datapoint.Gauge},
	boshSystemMetricsForwarderSystemDiskEphemeralPercent:   {Type: datapoint.Gauge},
	boshSystemMetricsForwarderSystemDiskSystemPercent:      {Type: datapoint.Gauge},
	boshSystemMetricsForwarderSystemHealthy:                {Type: datapoint.Gauge},
	boshSystemMetricsForwarderSystemMemPercent:             {Type: datapoint.Gauge},
	boshSystemMetricsForwarderSystemSwapPercent:            {Type: datapoint.Gauge},
	ccFailedJobCountVMNAMEVMINDEX:                          {Type: datapoint.Counter},
	ccFailedJobCountCcGeneric:                              {Type: datapoint.Counter},
	ccFailedJobCountTotal:                                  {Type: datapoint.Gauge},
	ccHTTPStatus1XX:                                        {Type: datapoint.Counter},
	ccHTTPStatus2XX:                                        {Type: datapoint.Counter},
	ccHTTPStatus3XX:                                        {Type: datapoint.Counter},
	ccHTTPStatus4XX:                                        {Type: datapoint.Counter},
	ccHTTPStatus5XX:                                        {Type: datapoint.Counter},
	ccJobQueueLengthCcVMNAMEVMINDEX:                        {Type: datapoint.Gauge},
	ccJobQueueLengthCcGeneric:                              {Type: datapoint.Gauge},
	ccJobQueueLengthTotal:                                  {Type: datapoint.Gauge},
	ccLogCountAll:                                          {Type: datapoint.Gauge},
	ccLogCountDebug:                                        {Type: datapoint.Gauge},
	ccLogCountDebug1:                                       {Type: datapoint.Gauge},
	ccLogCountDebug2:                                       {Type: datapoint.Gauge},
	ccLogCountError:                                        {Type: datapoint.Counter},
	ccLogCountFatal:                                        {Type: datapoint.Counter},
	ccLogCountInfo:                                         {Type: datapoint.Gauge},
	ccLogCountOff:                                          {Type: datapoint.Gauge},
	ccLogCountWarn:                                         {Type: datapoint.Counter},
	ccRequestsCompleted:                                    {Type: datapoint.Counter},
	ccRequestsOutstanding:                                  {Type: datapoint.Counter},
	ccTasksRunningCount:                                    {Type: datapoint.Gauge},
	ccTasksRunningMemoryInMb:                               {Type: datapoint.Gauge},
	ccThreadInfoEventMachineConnectionCount:                {Type: datapoint.Gauge},
	ccThreadInfoEventMachineResultqueueNumWaiting:          {Type: datapoint.Gauge},
	ccThreadInfoEventMachineResultqueueSize:                {Type: datapoint.Gauge},
	ccThreadInfoEventMachineThreadqueueNumWaiting:          {Type: datapoint.Gauge},
	ccThreadInfoEventMachineThreadqueueSize:                {Type: datapoint.Gauge},
	ccThreadInfoThreadCount:                                {Type: datapoint.Gauge},
	ccTotalUsers:                                           {Type: datapoint.Gauge},
	ccVitalsCPU:                                            {Type: datapoint.Gauge},
	ccVitalsCPULoadAvg:                                     {Type: datapoint.Gauge},
	ccVitalsMemBytes:                                       {Type: datapoint.Gauge},
	ccVitalsMemFreeBytes:                                   {Type: datapoint.Gauge},
	ccVitalsMemUsedBytes:                                   {Type: datapoint.Gauge},
	ccVitalsNumCores:                                       {Type: datapoint.Gauge},
	ccVitalsUptime:                                         {Type: datapoint.Gauge},
	ccUploaderMemoryStatsLastGCPauseTimeNS:                 {Type: datapoint.Gauge},
	ccUploaderMemoryStatsNumBytesAllocated:                 {Type: datapoint.Gauge},
	ccUploaderMemoryStatsNumBytesAllocatedHeap:             {Type: datapoint.Gauge},
	ccUploaderMemoryStatsNumBytesAllocatedStack:            {Type: datapoint.Gauge},
	ccUploaderMemoryStatsNumFrees:                          {Type: datapoint.Gauge},
	ccUploaderMemoryStatsNumMallocs:                        {Type: datapoint.Gauge},
	ccUploaderNumCPUS:                                      {Type: datapoint.Gauge},
	ccUploaderNumGoRoutines:                                {Type: datapoint.Gauge},
	containerCPUPercentage:                                 {Type: datapoint.Gauge},
	containerDiskBytes:                                     {Type: datapoint.Gauge},
	containerDiskBytesQuota:                                {Type: datapoint.Gauge},
	containerMemoryBytes:                                   {Type: datapoint.Gauge},
	containerMemoryBytesQuota:                              {Type: datapoint.Gauge},
	etcdCompareAndDeleteFail:                               {Type: datapoint.Gauge},
	etcdCompareAndDeleteSuccess:                            {Type: datapoint.Gauge},
	etcdCompareAndSwapFail:                                 {Type: datapoint.Gauge},
	etcdCompareAndSwapSuccess:                              {Type: datapoint.Gauge},
	etcdCreateFail:                                         {Type: datapoint.Gauge},
	etcdCreateSuccess:                                      {Type: datapoint.Gauge},
	etcdDeleteFail:                                         {Type: datapoint.Gauge},
	etcdDeleteSuccess:                                      {Type: datapoint.Gauge},
	etcdEtcdIndex:                                          {Type: datapoint.Gauge},
	etcdExpireCount:                                        {Type: datapoint.Gauge},
	etcdFollowers:                                          {Type: datapoint.Gauge},
	etcdGetsFail:                                           {Type: datapoint.Gauge},
	etcdGetsSuccess:                                        {Type: datapoint.Gauge},
	etcdIsLeader:                                           {Type: datapoint.Gauge},
	etcdLatency:                                            {Type: datapoint.Gauge},
	etcdRaftIndex:                                          {Type: datapoint.Gauge},
	etcdRaftTerm:                                           {Type: datapoint.Gauge},
	etcdReceivedAppendRequests:                             {Type: datapoint.Gauge},
	etcdReceivingBandwidthRate:                             {Type: datapoint.Gauge},
	etcdReceivingRequestRate:                               {Type: datapoint.Gauge},
	etcdSendingBandwidthRate:                               {Type: datapoint.Gauge},
	etcdSendingRequestRate:                                 {Type: datapoint.Gauge},
	etcdSentAppendRequests:                                 {Type: datapoint.Gauge},
	etcdSetsFail:                                           {Type: datapoint.Gauge},
	etcdSetsSuccess:                                        {Type: datapoint.Gauge},
	etcdUpdateFail:                                         {Type: datapoint.Gauge},
	etcdUpdateSuccess:                                      {Type: datapoint.Gauge},
	etcdWatchers:                                           {Type: datapoint.Gauge},
	fileServerMemoryStatsLastGCPauseTimeNS:                 {Type: datapoint.Gauge},
	fileServerMemoryStatsNumBytesAllocated:                 {Type: datapoint.Gauge},
	fileServerMemoryStatsNumBytesAllocatedHeap:             {Type: datapoint.Gauge},
	fileServerMemoryStatsNumBytesAllocatedStack:            {Type: datapoint.Gauge},
	fileServerMemoryStatsNumFrees:                          {Type: datapoint.Gauge},
	fileServerMemoryStatsNumMallocs:                        {Type: datapoint.Gauge},
	fileServerNumCPUS:                                      {Type: datapoint.Gauge},
	fileServerNumGoRoutines:                                {Type: datapoint.Gauge},
	gardenLinuxBackingStores:                               {Type: datapoint.Gauge},
	gardenLinuxDepotDirs:                                   {Type: datapoint.Gauge},
	gardenLinuxLoopDevices:                                 {Type: datapoint.Gauge},
	gardenLinuxMetricsReporting:                            {Type: datapoint.Gauge},
	gardenLinuxMemoryStatsLastGCPauseTimeNS:                {Type: datapoint.Gauge},
	gardenLinuxMemoryStatsNumBytesAllocated:                {Type: datapoint.Gauge},
	gardenLinuxMemoryStatsNumBytesAllocatedHeap:            {Type: datapoint.Gauge},
	gardenLinuxMemoryStatsNumBytesAllocatedStack:           {Type: datapoint.Gauge},
	gardenLinuxMemoryStatsNumFrees:                         {Type: datapoint.Gauge},
	gardenLinuxMemoryStatsNumMallocs:                       {Type: datapoint.Gauge},
	gardenLinuxNumCPUS:                                     {Type: datapoint.Gauge},
	gardenLinuxNumGoRoutines:                               {Type: datapoint.Gauge},
	gorouterBackendExhaustedConns:                          {Type: datapoint.Counter},
	gorouterBadGateways:                                    {Type: datapoint.Counter},
	gorouterResponses:                                      {Type: datapoint.Counter},
	gorouterTotalRequests:                                  {Type: datapoint.Counter},
	gorouterTotalRoutes:                                    {Type: datapoint.Gauge},
	nsyncBulkerDesiredLRPSyncDuration:                      {Type: datapoint.Gauge},
	nsyncBulkerLRPsDesired:                                 {Type: datapoint.Gauge},
	nsyncBulkerLockHeldV1LocksNsyncBulkerLock:              {Type: datapoint.Gauge},
	nsyncBulkerLockHeldDurationV1LocksNsyncBulkerLock:      {Type: datapoint.Gauge},
	nsyncBulkerNsyncInvalidDesiredLRPsFound:                {Type: datapoint.Gauge},
	nsyncBulkerMemoryStatsLastGCPauseTimeNS:                {Type: datapoint.Gauge},
	nsyncBulkerMemoryStatsNumBytesAllocated:                {Type: datapoint.Gauge},
	nsyncBulkerMemoryStatsNumBytesAllocatedHeap:            {Type: datapoint.Gauge},
	nsyncBulkerMemoryStatsNumBytesAllocatedStack:           {Type: datapoint.Gauge},
	nsyncBulkerMemoryStatsNumFrees:                         {Type: datapoint.Gauge},
	nsyncBulkerMemoryStatsNumMallocs:                       {Type: datapoint.Gauge},
	nsyncBulkerNumCPUS:                                     {Type: datapoint.Gauge},
	nsyncBulkerNumGoRoutines:                               {Type: datapoint.Gauge},
	nsyncListenerMemoryStatsLastGCPauseTimeNS:              {Type: datapoint.Gauge},
	nsyncListenerMemoryStatsNumBytesAllocated:              {Type: datapoint.Gauge},
	nsyncListenerMemoryStatsNumBytesAllocatedHeap:          {Type: datapoint.Gauge},
	nsyncListenerMemoryStatsNumBytesAllocatedStack:         {Type: datapoint.Gauge},
	nsyncListenerMemoryStatsNumFrees:                       {Type: datapoint.Gauge},
	nsyncListenerMemoryStatsNumMallocs:                     {Type: datapoint.Gauge},
	nsyncListenerNumCPUS:                                   {Type: datapoint.Gauge},
	nsyncListenerNumGoRoutines:                             {Type: datapoint.Gauge},
	repCM:                                                  {Type: datapoint.Gauge},
	repCapacityRemainingContainers:                         {Type: datapoint.Gauge},
	repCapacityRemainingDisk:                               {Type: datapoint.Gauge},
	repCapacityRemainingMemory:                             {Type: datapoint.Gauge},
	repCapacityTotalContainers:                             {Type: datapoint.Gauge},
	repCapacityTotalDisk:                                   {Type: datapoint.Gauge},
	repCapacityTotalMemory:                                 {Type: datapoint.Gauge},
	repContainerCount:                                      {Type: datapoint.Gauge},
	repGardenContainerCreationDuration:                     {Type: datapoint.Gauge},
	repLogMessage:                                          {Type: datapoint.Gauge},
	repRepBulkSyncDuration:                                 {Type: datapoint.Gauge},
	repUnhealthyCell:                                       {Type: datapoint.Gauge},
	repAbsoluteEntitlement:                                 {Type: datapoint.Counter, Group: groupContainer},
	repAbsoluteUsage:                                       {Type: datapoint.Counter, Group: groupContainer},
	repContainerAge:                                        {Type: datapoint.Counter, Group: groupContainer},
	repCPU:                                                 {Type: datapoint.Gauge, Group: groupContainer},
	repDisk:                                                {Type: datapoint.Gauge, Group: groupContainer},
	repDiskQuota:                                           {Type: datapoint.Gauge, Group: groupContainer},
	repLogSenderTotalMessagesRead:                          {Type: datapoint.Counter},
	repMemory:                                              {Type: datapoint.Gauge, Group: groupContainer},
	repMemoryStatsLastGCPauseTimeNS:                        {Type: datapoint.Gauge},
	repMemoryStatsNumBytesAllocated:                        {Type: datapoint.Gauge},
	repMemoryStatsNumBytesAllocatedHeap:                    {Type: datapoint.Gauge},
	repMemoryStatsNumBytesAllocatedStack:                   {Type: datapoint.Gauge},
	repMemoryStatsNumFrees:                                 {Type: datapoint.Gauge},
	repMemoryStatsNumMallocs:                               {Type: datapoint.Gauge},
	repMemoryQuota:                                         {Type: datapoint.Gauge, Group: groupContainer},
	repNumCPUS:                                             {Type: datapoint.Gauge},
	repNumGoRoutines:                                       {Type: datapoint.Gauge},
	routeEmitterLockHeldV1LocksRouteEmitterLock:            {Type: datapoint.Gauge},
	routeEmitterLockHeldDurationV1LocksRouteEmitterLock:    {Type: datapoint.Gauge},
	routeEmitterMessagesEmitted:                            {Type: datapoint.Counter},
	routeEmitterRouteEmitterSyncDuration:                   {Type: datapoint.Gauge},
	routeEmitterRoutesRegistered:                           {Type: datapoint.Counter},
	routeEmitterRoutesSynced:                               {Type: datapoint.Counter},
	routeEmitterRoutesTotal:                                {Type: datapoint.Gauge},
	routeEmitterRoutesUnregistered:                         {Type: datapoint.Counter},
	routeEmitterMemoryStatsLastGCPauseTimeNS:               {Type: datapoint.Gauge},
	routeEmitterMemoryStatsNumBytesAllocated:               {Type: datapoint.Gauge},
	routeEmitterMemoryStatsNumBytesAllocatedHeap:           {Type: datapoint.Gauge},
	routeEmitterMemoryStatsNumBytesAllocatedStack:          {Type: datapoint.Gauge},
	routeEmitterMemoryStatsNumFrees:                        {Type: datapoint.Gauge},
	routeEmitterMemoryStatsNumMallocs:                      {Type: datapoint.Gauge},
	routeEmitterNumCPUS:                                    {Type: datapoint.Gauge},
	routeEmitterNumGoRoutines:                              {Type: datapoint.Gauge},
	sshProxyMemoryStatsLastGCPauseTimeNS:                   {Type: datapoint.Gauge},
	sshProxyMemoryStatsNumBytesAllocated:                   {Type: datapoint.Gauge},
	sshProxyMemoryStatsNumBytesAllocatedHeap:               {Type: datapoint.Gauge},
	sshProxyMemoryStatsNumBytesAllocatedStack:              {Type: datapoint.Gauge},
	sshProxyMemoryStatsNumFrees:                            {Type: datapoint.Gauge},
	sshProxyMemoryStatsNumMallocs:                          {Type: datapoint.Gauge},
	sshProxyNumCPUS:                                        {Type: datapoint.Gauge},
	sshProxyNumGoRoutines:                                  {Type: datapoint.Gauge},
	stagerStagingRequestFailedDuration:                     {Type: datapoint.Gauge},
	stagerStagingRequestSucceededDuration:                  {Type: datapoint.Gauge},
	stagerStagingRequestsFailed:                            {Type: datapoint.Gauge},
	stagerStagingRequestsSucceeded:                         {Type: datapoint.Gauge},
	stagerStagingStartRequestsReceived:                     {Type: datapoint.Gauge},
	stagerMemoryStatsLastGCPauseTimeNS:                     {Type: datapoint.Gauge},
	stagerMemoryStatsNumBytesAllocated:                     {Type: datapoint.Gauge},
	stagerMemoryStatsNumBytesAllocatedHeap:                 {Type: datapoint.Gauge},
	stagerMemoryStatsNumBytesAllocatedStack:                {Type: datapoint.Gauge},
	stagerMemoryStatsNumFrees:                              {Type: datapoint.Gauge},
	stagerMemoryStatsNumMallocs:                            {Type: datapoint.Gauge},
	stagerNumCPUS:                                          {Type: datapoint.Gauge},
	stagerNumGoRoutines:                                    {Type: datapoint.Gauge},
	syslogDrainBinderMemoryStatsLastGCPauseTimeNS:          {Type: datapoint.Gauge},
	syslogDrainBinderMemoryStatsNumBytesAllocated:          {Type: datapoint.Gauge},
	syslogDrainBinderMemoryStatsNumBytesAllocatedHeap:      {Type: datapoint.Gauge},
	syslogDrainBinderMemoryStatsNumBytesAllocatedStack:     {Type: datapoint.Gauge},
	syslogDrainBinderMemoryStatsNumFrees:                   {Type: datapoint.Gauge},
	syslogDrainBinderMemoryStatsNumMallocs:                 {Type: datapoint.Gauge},
	syslogDrainBinderNumCPUS:                               {Type: datapoint.Gauge},
	syslogDrainBinderNumGoRoutines:                         {Type: datapoint.Gauge},
	syslogDrainBinderPollCount:                             {Type: datapoint.Counter},
	syslogDrainBinderTotalDrains:                           {Type: datapoint.Gauge},
	systemMetricsAgentSystemCPUCoreIdle:                    {Type: datapoint.Gauge},
	systemMetricsAgentSystemCPUCoreSys:                     {Type: datapoint.Gauge},
	systemMetricsAgentSystemCPUCoreUser:                    {Type: datapoint.Gauge},
	systemMetricsAgentSystemCPUCoreWait:                    {Type: datapoint.Gauge},
	systemMetricsAgentSystemCPUIdle:                        {Type: datapoint.Gauge},
	systemMetricsAgentSystemCPUSys:                         {Type: datapoint.Gauge},
	systemMetricsAgentSystemCPUUser:                        {Type: datapoint.Gauge},
	systemMetricsAgentSystemCPUWait:                        {Type: datapoint.Gauge},
	systemMetricsAgentSystemDiskEphemeralInodePercent:      {Type: datapoint.Gauge},
	systemMetricsAgentSystemDiskEphemeralIoTime:            {Type: datapoint.Counter},
	systemMetricsAgentSystemDiskEphemeralPercent:           {Type: datapoint.Gauge},
	systemMetricsAgentSystemDiskEphemeralReadBytes:         {Type: datapoint.Counter},
	systemMetricsAgentSystemDiskEphemeralReadTime:          {Type: datapoint.Counter},
	systemMetricsAgentSystemDiskEphemeralWriteBytes:        {Type: datapoint.Counter},
	systemMetricsAgentSystemDiskEphemeralWriteTime:         {Type: datapoint.Counter},
	systemMetricsAgentSystemDiskPersistentInodePercent:     {Type: datapoint.Gauge},
	systemMetricsAgentSystemDiskPersistentIoTime:           {Type: datapoint.Counter},
	systemMetricsAgentSystemDiskPersistentPercent:          {Type: datapoint.Gauge},
	systemMetricsAgentSystemDiskPersistentReadBytes:        {Type: datapoint.Counter},
	systemMetricsAgentSystemDiskPersistentReadTime:         {Type: datapoint.Counter},
	systemMetricsAgentSystemDiskPersistentWriteBytes:       {Type: datapoint.Counter},
	systemMetricsAgentSystemDiskPersistentWriteTime:        {Type: datapoint.Counter},
	systemMetricsAgentSystemDiskSystemInodePercent:         {Type: datapoint.Gauge},
	systemMetricsAgentSystemDiskSystemIoTime:               {Type: datapoint.Counter},
	systemMetricsAgentSystemDiskSystemPercent:              {Type: datapoint.Gauge},
	systemMetricsAgentSystemDiskSystemReadBytes:            {Type: datapoint.Counter},
	systemMetricsAgentSystemDiskSystemReadTime:             {Type: datapoint.Counter},
	systemMetricsAgentSystemDiskSystemWriteBytes:           {Type: datapoint.Counter},
	systemMetricsAgentSystemDiskSystemWriteTime:            {Type: datapoint.Counter},
	systemMetricsAgentSystemHealthy:                        {Type: datapoint.Gauge},
	systemMetricsAgentSystemLoad15m:                        {Type: datapoint.Gauge},
	systemMetricsAgentSystemLoad1m:                         {Type: datapoint.Gauge},
	systemMetricsAgentSystemLoad5m:                         {Type: datapoint.Gauge},
	systemMetricsAgentSystemMemKb:                          {Type: datapoint.Gauge},
	systemMetricsAgentSystemMemPercent:                     {Type: datapoint.Gauge},
	systemMetricsAgentSystemNetworkBytesReceived:           {Type: datapoint.Counter},
	systemMetricsAgentSystemNetworkBytesSent:               {Type: datapoint.Counter},
	systemMetricsAgentSystemNetworkDropIn:                  {Type: datapoint.Counter},
	systemMetricsAgentSystemNetworkDropOut:                 {Type: datapoint.Counter},
	systemMetricsAgentSystemNetworkErrorIn:                 {Type: datapoint.Counter},
	systemMetricsAgentSystemNetworkErrorOut:                {Type: datapoint.Counter},
	systemMetricsAgentSystemNetworkIPForwarding:            {Type: datapoint.Counter},
	systemMetricsAgentSystemNetworkPacketsReceived:         {Type: datapoint.Counter},
	systemMetricsAgentSystemNetworkPacketsSent:             {Type: datapoint.Counter},
	systemMetricsAgentSystemNetworkTCPActiveOpens:          {Type: datapoint.Counter},
	systemMetricsAgentSystemNetworkTCPCurrEstab:            {Type: datapoint.Counter},
	systemMetricsAgentSystemNetworkTCPRetransSegs:          {Type: datapoint.Counter},
	systemMetricsAgentSystemNetworkUDPInErrors:             {Type: datapoint.Counter},
	systemMetricsAgentSystemNetworkUDPLiteInErrors:         {Type: datapoint.Counter},
	systemMetricsAgentSystemNetworkUDPNoPorts:              {Type: datapoint.Counter},
	systemMetricsAgentSystemSwapKb:                         {Type: datapoint.Gauge},
	systemMetricsAgentSystemSwapPercent:                    {Type: datapoint.Gauge},
	tpsListenerMemoryStatsLastGCPauseTimeNS:                {Type: datapoint.Gauge},
	tpsListenerMemoryStatsNumBytesAllocated:                {Type: datapoint.Gauge},
	tpsListenerMemoryStatsNumBytesAllocatedHeap:            {Type: datapoint.Gauge},
	tpsListenerMemoryStatsNumBytesAllocatedStack:           {Type: datapoint.Gauge},
	tpsListenerMemoryStatsNumFrees:                         {Type: datapoint.Gauge},
	tpsListenerMemoryStatsNumMallocs:                       {Type: datapoint.Gauge},
	tpsListenerNumCPUS:                                     {Type: datapoint.Gauge},
	tpsListenerNumGoRoutines:                               {Type: datapoint.Gauge},
	tpsWatcherLockHeldV1LocksTpsWatcherLock:                {Type: datapoint.Gauge},
	tpsWatcherLockHeldDurationV1LocksTpsWatcherLock:        {Type: datapoint.Gauge},
	tpsWatcherMemoryStatsLastGCPauseTimeNS:                 {Type: datapoint.Gauge},
	tpsWatcherMemoryStatsNumBytesAllocated:                 {Type: datapoint.Gauge},
	tpsWatcherMemoryStatsNumBytesAllocatedHeap:             {Type: datapoint.Gauge},
	tpsWatcherMemoryStatsNumBytesAllocatedStack:            {Type: datapoint.Gauge},
	tpsWatcherMemoryStatsNumFrees:                          {Type: datapoint.Gauge},
	tpsWatcherMemoryStatsNumMallocs:                        {Type: datapoint.Gauge},
	tpsWatcherNumCPUS:                                      {Type: datapoint.Gauge},
	tpsWatcherNumGoRoutines:                                {Type: datapoint.Gauge},
	uaaAuditServiceClientAuthenticationCount:               {Type: datapoint.Counter},
	uaaAuditServiceClientAuthenticationFailureCount:        {Type: datapoint.Counter},
	uaaAuditServicePrincipalAuthenticationFailureCount:     {Type: datapoint.Counter},
	uaaAuditServicePrincipalNotFoundCount:                  {Type: datapoint.Counter},
	uaaAuditServiceUserAuthenticationCount:                 {Type: datapoint.Counter},
	uaaAuditServiceUserAuthenticationFailureCount:          {Type: datapoint.Counter},
	uaaAuditServiceUserNotFoundCount:                       {Type: datapoint.Counter},
	uaaAuditServiceUserPasswordChanges:                     {Type: datapoint.Counter},
	uaaAuditServiceUserPasswordFailures:                    {Type: datapoint.Counter},
}

var defaultMetrics = map[string]bool{
	auctioneerAuctioneerFetchStatesDuration:              true,
	auctioneerAuctioneerLRPAuctionsFailed:                true,
	auctioneerAuctioneerLRPAuctionsStarted:               true,
	auctioneerAuctioneerTaskAuctionsFailed:               true,
	bbsConvergenceLRPDuration:                            true,
	bbsCrashedActualLRPs:                                 true,
	bbsDomainCfApps:                                      true,
	bbsLRPsExtra:                                         true,
	bbsLRPsMissing:                                       true,
	bbsLRPsRunning:                                       true,
	bbsRequestLatency:                                    true,
	boshSystemMetricsForwarderSystemCPUSys:               true,
	boshSystemMetricsForwarderSystemCPUUser:              true,
	boshSystemMetricsForwarderSystemCPUWait:              true,
	boshSystemMetricsForwarderSystemDiskEphemeralPercent: true,
	boshSystemMetricsForwarderSystemDiskSystemPercent:    true,
	boshSystemMetricsForwarderSystemHealthy:              true,
	boshSystemMetricsForwarderSystemMemPercent:           true,
	boshSystemMetricsForwarderSystemSwapPercent:          true,
	ccLogCountError:                                      true,
	ccLogCountFatal:                                      true,
	ccLogCountWarn:                                       true,
	ccRequestsCompleted:                                  true,
	ccRequestsOutstanding:                                true,
	ccTasksRunningCount:                                  true,
	gorouterBackendExhaustedConns:                        true,
	gorouterBadGateways:                                  true,
	gorouterResponses:                                    true,
	gorouterTotalRequests:                                true,
	gorouterTotalRoutes:                                  true,
	repCapacityRemainingContainers:                       true,
	repCapacityRemainingDisk:                             true,
	repCapacityRemainingMemory:                           true,
	repCapacityTotalContainers:                           true,
	repCapacityTotalDisk:                                 true,
	repCapacityTotalMemory:                               true,
	repContainerCount:                                    true,
	repRepBulkSyncDuration:                               true,
	repUnhealthyCell:                                     true,
	repCPU:                                               true,
	repDisk:                                              true,
	repDiskQuota:                                         true,
	repMemory:                                            true,
	repMemoryQuota:                                       true,
	routeEmitterRouteEmitterSyncDuration:                 true,
	uaaAuditServiceClientAuthenticationFailureCount:      true,
	uaaAuditServicePrincipalAuthenticationFailureCount:   true,
	uaaAuditServicePrincipalNotFoundCount:                true,
	uaaAuditServiceUserAuthenticationFailureCount:        true,
	uaaAuditServiceUserNotFoundCount:                     true,
	uaaAuditServiceUserPasswordFailures:                  true,
}

var groupMetricsMap = map[string][]string{
	groupContainer: {
		repAbsoluteEntitlement,
		repAbsoluteUsage,
		repContainerAge,
		repCPU,
		repDisk,
		repDiskQuota,
		repMemory,
		repMemoryQuota,
	},
}

var monitorMetadata = monitors.Metadata{
	MonitorType:     "cloudfoundry-firehose-nozzle",
	DefaultMetrics:  defaultMetrics,
	Metrics:         metricSet,
	SendUnknown:     false,
	Groups:          groupSet,
	GroupMetricsMap: groupMetricsMap,
	SendAll:         false,
}
