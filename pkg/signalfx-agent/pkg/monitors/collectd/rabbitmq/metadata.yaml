monitors:
- dimensions:
  doc: |
    Monitors an instance of RabbitMQ using the [collectd RabbitMQ Python
    Plugin](https://github.com/signalfx/collectd-rabbitmq). This monitor uses
    the [RabbitMQ Management HTTP
    API](https://www.rabbitmq.com/management.html) to poll for statistics on a
    RabbitMQ server, then reports them to the agent.  Works for RabbitMQ 3.0
    and later.

    **Note that you must individually enable each of the five `collect*`
    options to get metrics pertaining to those facets of a RabbitMQ instance.
    If none of them are enabled, no metrics will be sent.**
  groups:
    channel:
      description: Channels metrics
    connection:
      description: Connections metrics
    exchange:
      description: Exchanges metrics
    node:
      description: Nodes metrics
    queue:
      description: Queues metrics
  metrics:
    counter.channel.message_stats.ack:
      description: The number of acknowledged messages
      default: false
      type: counter
      group: channel
    counter.channel.message_stats.confirm:
      description: Count of messages confirmed.
      default: false
      type: counter
      group: channel
    counter.channel.message_stats.deliver:
      description: Count of messages delivered in acknowledgement mode to consumers.
      default: false
      type: counter
      group: channel
    counter.channel.message_stats.deliver_get:
      description: Count of all messages delivered on the channel
      default: false
      type: counter
      group: channel
    counter.channel.message_stats.publish:
      description: Count of messages published.
      default: false
      type: counter
      group: channel
    counter.connection.channel_max:
      description: The maximum number of channels on the connection
      default: false
      type: counter
      group: connection
    counter.connection.recv_cnt:
      description: Number of packets received on the connection
      default: false
      type: counter
      group: connection
    counter.connection.recv_oct:
      description: Number of octets received on the connection
      default: false
      type: counter
      group: connection
    counter.connection.send_cnt:
      description: Number of packets sent by the connection
      default: false
      type: counter
      group: connection
    counter.connection.send_oct:
      description: Number of octets sent by the connection
      default: false
      type: counter
      group: connection
    counter.exchange.message_stats.confirm:
      description: Count of messages confirmed.
      default: false
      type: counter
      group: exchange
    counter.exchange.message_stats.publish_in:
      description: Count of messages published "in" to an exchange, i.e. not taking
        account of routing.
      default: true
      type: counter
      group: exchange
    counter.exchange.message_stats.publish_out:
      description: Count of messages published "out" of an exchange, i.e. taking account
        of routing.
      default: false
      type: counter
      group: exchange
    counter.node.io_read_bytes:
      description: Total number of bytes read from disk by the persister.
      default: false
      type: counter
      group: node
    counter.node.io_read_count:
      description: Total number of read operations by the persister.
      default: false
      type: counter
      group: node
    counter.node.mnesia_disk_tx_count:
      description: Number of Mnesia transactions which have been performed that required
        writes to disk.
      default: false
      type: counter
      group: node
    counter.node.mnesia_ram_tx_count:
      description: Number of Mnesia transactions which have been performed that did
        not require writes to disk.
      default: false
      type: counter
      group: node
    counter.queue.disk_reads:
      description: Total number of times messages have been read from disk by this
        queue since it started.
      default: false
      type: counter
      group: queue
    counter.queue.disk_writes:
      description: Total number of times messages have been written to disk by this
        queue since it started.
      default: false
      type: counter
      group: queue
    counter.queue.message_stats.ack:
      description: Number of acknowledged messages processed by the queue
      default: false
      type: counter
      group: queue
    counter.queue.message_stats.deliver:
      description: Count of messages delivered in acknowledgement mode to consumers.
      default: true
      type: counter
      group: queue
    counter.queue.message_stats.deliver_get:
      description: Count of all messages delivered on the queue
      default: false
      type: counter
      group: queue
    counter.queue.message_stats.publish:
      description: Count of messages published.
      default: false
      type: counter
      group: queue
    gauge.channel.connection_details.peer_port:
      description: The peer port number of the channel
      default: false
      type: gauge
      group: channel
    gauge.channel.consumer_count:
      description: The number of consumers the channel has
      default: false
      type: gauge
      group: channel
    gauge.channel.global_prefetch_count:
      description: QoS prefetch limit for the entire channel, 0 if unlimited.
      default: false
      type: gauge
      group: channel
    gauge.channel.message_stats.ack_details.rate:
      description: How much the channel message ack count has changed per second in
        the most recent sampling interval.
      default: false
      type: gauge
      group: channel
    gauge.channel.message_stats.confirm_details.rate:
      description: How much the channel message confirm count has changed per second
        in the most recent sampling interval.
      default: false
      type: gauge
      group: channel
    gauge.channel.message_stats.deliver_details.rate:
      description: How much the channel deliver count has changed per second in the
        most recent sampling interval.
      default: false
      type: gauge
      group: channel
    gauge.channel.message_stats.deliver_get_details.rate:
      description: How much the channel message count has changed per second in the
        most recent sampling interval.
      default: false
      type: gauge
      group: channel
    gauge.channel.message_stats.publish_details.rate:
      description: How much the channel message publish count has changed per second
        in the most recent sampling interval.
      default: false
      type: gauge
      group: channel
    gauge.channel.messages_unacknowledged:
      description: Number of messages delivered via this channel but not yet acknowledged.
      default: false
      type: gauge
      group: channel
    gauge.channel.messages_uncommitted:
      description: Number of messages received in an as yet uncommitted transaction.
      default: false
      type: gauge
      group: channel
    gauge.channel.messages_unconfirmed:
      description: Number of published messages not yet confirmed. On channels not
        in confirm mode, this remains 0.
      default: false
      type: gauge
      group: channel
    gauge.channel.number:
      description: The number of the channel, which uniquely identifies it within
        a connection.
      default: true
      type: gauge
      group: channel
    gauge.channel.prefetch_count:
      description: QoS prefetch limit for new consumers, 0 if unlimited.
      default: false
      type: gauge
      group: channel
    gauge.connection.channels:
      description: The current number of channels on the connection
      default: false
      type: gauge
      group: connection
    gauge.connection.connected_at:
      description: The integer timestamp of the most recent time the connection was
        established
      default: false
      type: gauge
      group: connection
    gauge.connection.frame_max:
      description: Maximum permissible size of a frame (in bytes) to negotiate with
        clients.
      default: false
      group: connection
      type: gauge
    gauge.connection.peer_port:
      description: The peer port of the connection
      default: false
      type: gauge
      group: connection
    gauge.connection.port:
      description: The port the connection is established on
      default: false
      type: gauge
      group: connection
    gauge.connection.recv_oct_details.rate:
      description: How much the connection's octets received count has changed per
        second in the most recent sampling interval.
      default: false
      type: gauge
      group: connection
    gauge.connection.send_oct_details.rate:
      description: How much the connection's octets sent count has changed per second
        in the most recent sampling interval.
      default: false
      type: gauge
      group: connection
    gauge.connection.send_pend:
      description: The number of messages in the send queue of the connection
      default: false
      type: gauge
      group: connection
    gauge.connection.timeout:
      description: The current timeout setting (in seconds) of the connection
      default: false
      type: gauge
      group: connection
    gauge.exchange.message_stats.confirm_details.rate:
      description: How much the message confirm count has changed per second in the
        most recent sampling interval.
      default: false
      type: gauge
      group: exchange
    gauge.exchange.message_stats.publish_in_details.rate:
      description: How much the exchange publish-in count has changed per second in
        the most recent sampling interval.
      default: false
      type: gauge
      group: exchange
    gauge.exchange.message_stats.publish_out_details.rate:
      description: How much the exchange publish-out count has changed per second
        in the most recent sampling interval.
      default: false
      type: gauge
      group: exchange
    gauge.node.disk_free:
      description: Disk free space (in bytes) on the node
      default: true
      type: gauge
      group: node
    gauge.node.disk_free_details.rate:
      description: How much the disk free space has changed per second in the most
        recent sampling interval.
      default: false
      type: gauge
      group: node
    gauge.node.disk_free_limit:
      description: Point (in bytes) at which the disk alarm will go off.
      default: true
      type: gauge
      group: node
    gauge.node.fd_total:
      description: Total number of file descriptors available.
      default: true
      type: gauge
      group: node
    gauge.node.fd_used:
      description: Number of used file descriptors.
      default: true
      type: gauge
      group: node
    gauge.node.fd_used_details.rate:
      description: How much the number of used file descriptors has changed per second
        in the most recent sampling interval.
      default: false
      type: gauge
      group: node
    gauge.node.io_read_avg_time:
      description: Average wall time (milliseconds) for each disk read operation in
        the last statistics interval.
      default: true
      type: gauge
      group: node
    gauge.node.io_read_avg_time_details.rate:
      description: How much the I/O read average time has changed per second in the
        most recent sampling interval.
      default: false
      type: gauge
      group: node
    gauge.node.io_read_bytes_details.rate:
      description: How much the number of bytes read from disk has changed per second
        in the most recent sampling interval.
      default: false
      type: gauge
      group: node
    gauge.node.io_read_count_details.rate:
      description: How much the number of read operations has changed per second in
        the most recent sampling interval.
      default: false
      type: gauge
      group: node
    gauge.node.io_sync_avg_time:
      description: Average wall time (milliseconds) for each fsync() operation in
        the last statistics interval.
      default: true
      type: gauge
      group: node
    gauge.node.io_sync_avg_time_details.rate:
      description: How much the average I/O sync time has changed per second in the
        most recent sampling interval.
      default: false
      type: gauge
      group: node
    gauge.node.io_write_avg_time:
      description: Average wall time (milliseconds) for each disk write operation
        in the last statistics interval.
      default: true
      type: gauge
      group: node
    gauge.node.io_write_avg_time_details.rate:
      description: How much the I/O write time has changed per second in the most
        recent sampling interval.
      default: false
      type: gauge
      group: node
    gauge.node.mem_limit:
      description: Point (in bytes) at which the memory alarm will go off.
      default: true
      type: gauge
      group: node
    gauge.node.mem_used:
      description: Memory used in bytes.
      default: true
      type: gauge
      group: node
    gauge.node.mem_used_details.rate:
      description: How much the count has changed per second in the most recent sampling
        interval.
      default: false
      type: gauge
      group: node
    gauge.node.mnesia_disk_tx_count_details.rate:
      description: How much the Mnesia disk transaction count has changed per second
        in the most recent sampling interval.
      default: false
      type: gauge
      group: node
    gauge.node.mnesia_ram_tx_count_details.rate:
      description: How much the RAM-only Mnesia transaction count has changed per
        second in the most recent sampling interval.
      default: false
      type: gauge
      group: node
    gauge.node.net_ticktime:
      description: Current kernel net_ticktime setting for the node.
      default: false
      type: gauge
      group: node
    gauge.node.proc_total:
      description: The maximum number of Erlang processes that can run in an Erlang
        VM.
      default: false
      type: gauge
      group: node
    gauge.node.proc_used:
      description: Number of Erlang processes currently running in use.
      default: false
      type: gauge
      group: node
    gauge.node.proc_used_details.rate:
      description: How much the number of erlang processes in use has changed per
        second in the most recent sampling interval.
      default: false
      type: gauge
      group: node
    gauge.node.processors:
      description: Number of cores detected and usable by Erlang.
      default: false
      type: gauge
      group: node
    gauge.node.run_queue:
      description: Average number of Erlang processes waiting to run.
      default: false
      type: gauge
      group: node
    gauge.node.sockets_total:
      description: Number of file descriptors available for use as sockets.
      default: false
      type: gauge
      group: node
    gauge.node.sockets_used:
      description: Number of file descriptors used as sockets.
      default: false
      type: gauge
      group: node
    gauge.node.sockets_used_details.rate:
      description: How much the number of sockets used has changed per second in the
        most recent sampling interval.
      default: false
      type: gauge
      group: node
    gauge.node.uptime:
      description: Time since the Erlang VM started, in milliseconds.
      default: true
      type: gauge
      group: node
    gauge.queue.backing_queue_status.avg_ack_egress_rate:
      description: Rate at which unacknowledged message records leave RAM, e.g. because
        acks arrive or unacked messages are paged out
      default: false
      type: gauge
      group: queue
    gauge.queue.backing_queue_status.avg_ack_ingress_rate:
      description: Rate at which unacknowledged message records enter RAM, e.g. because
        messages are delivered requiring acknowledgement
      default: false
      type: gauge
      group: queue
    gauge.queue.backing_queue_status.avg_egress_rate:
      description: Average egress (outbound) rate, not including messages that are
        sent straight through to auto-acking consumers.
      default: false
      type: gauge
      group: queue
    gauge.queue.backing_queue_status.avg_ingress_rate:
      description: Average ingress (inbound) rate, not including messages that are
        sent straight through to auto-acking consumers.
      default: false
      type: gauge
      group: queue
    gauge.queue.backing_queue_status.len:
      description: Total backing queue length, in messages
      default: false
      type: gauge
      group: queue
    gauge.queue.backing_queue_status.next_seq_id:
      description: The next sequence ID to be used in the backing queue
      default: false
      type: gauge
      group: queue
    gauge.queue.backing_queue_status.q1:
      description: Number of messages in backing queue q1
      default: false
      type: gauge
      group: queue
    gauge.queue.backing_queue_status.q2:
      description: Number of messages in backing queue q2
      default: false
      type: gauge
      group: queue
    gauge.queue.backing_queue_status.q3:
      description: Number of messages in backing queue q3
      default: false
      type: gauge
      group: queue
    gauge.queue.backing_queue_status.q4:
      description: Number of messages in backing queue q4
      default: false
      type: gauge
      group: queue
    gauge.queue.consumer_utilisation:
      description: Fraction of the time (between 0.0 and 1.0) that the queue is able
        to immediately deliver messages to consumers.
      default: false
      type: gauge
      group: queue
    gauge.queue.consumers:
      description: Number of consumers of the queue
      default: true
      type: gauge
      group: queue
    gauge.queue.memory:
      description: Bytes of memory consumed by the Erlang process associated with
        the queue, including stack, heap and internal structures.
      default: true
      type: gauge
      group: queue
    gauge.queue.message_bytes:
      description: Sum of the size of all message bodies in the queue. This does not
        include the message properties (including headers) or any overhead.
      default: false
      type: gauge
      group: queue
    gauge.queue.message_bytes_persistent:
      description: Total number of persistent messages in the queue (will always be
        0 for transient queues).
      default: false
      type: gauge
      group: queue
    gauge.queue.message_bytes_ram:
      description: Like message_bytes but counting only those messages which are in
        RAM.
      default: false
      type: gauge
      group: queue
    gauge.queue.message_bytes_ready:
      description: Like message_bytes but counting only those messages ready to be
        delivered to clients.
      default: false
      type: gauge
      group: queue
    gauge.queue.message_bytes_unacknowledged:
      description: Like message_bytes but counting only those messages delivered to
        clients but not yet acknowledged.
      default: false
      type: gauge
      group: queue
    gauge.queue.message_stats.ack_details.rate:
      description: How much the number of acknowledged messages has changed per second
        in the most recent sampling interval.
      default: false
      type: gauge
      group: queue
    gauge.queue.message_stats.deliver_details.rate:
      description: How much the count of messages delivered has changed per second
        in the most recent sampling interval.
      default: false
      type: gauge
      group: queue
    gauge.queue.message_stats.deliver_get_details.rate:
      description: How much the count of all messages delivered has changed per second
        in the most recent sampling interval.
      default: false
      type: gauge
      group: queue
    gauge.queue.message_stats.publish_details.rate:
      description: How much the count of messages published has changed per second
        in the most recent sampling interval.
      default: false
      type: gauge
      group: queue
    gauge.queue.messages:
      description: Sum of ready and unacknowledged messages (queue depth).
      default: false
      type: gauge
      group: queue
    gauge.queue.messages_details.rate:
      description: How much the queue depth has changed per second in the most recent
        sampling interval.
      default: false
      type: gauge
      group: queue
    gauge.queue.messages_persistent:
      description: Total number of persistent messages in the queue (will always be
        0 for transient queues).
      default: false
      type: gauge
      group: queue
    gauge.queue.messages_ram:
      description: Total number of messages which are resident in RAM.
      default: false
      type: gauge
      group: queue
    gauge.queue.messages_ready:
      description: Number of messages ready to be delivered to clients.
      default: true
      type: gauge
      group: queue
    gauge.queue.messages_ready_details.rate:
      description: How much the count of messages ready has changed per second in
        the most recent sampling interval.
      default: false
      type: gauge
      group: queue
    gauge.queue.messages_ready_ram:
      description: Number of messages from messages_ready which are resident in RAM.
      default: false
      type: gauge
      group: queue
    gauge.queue.messages_unacknowledged:
      description: Number of messages delivered to clients but not yet acknowledged.
      default: false
      type: gauge
      group: queue
    gauge.queue.messages_unacknowledged_details.rate:
      description: How much the count of unacknowledged messages has changed per second
        in the most recent sampling interval.
      default: false
      type: gauge
      group: queue
    gauge.queue.messages_unacknowledged_ram:
      description: Number of messages from messages_unacknowledged which are resident
        in RAM.
      default: false
      type: gauge
      group: queue
  monitorType: collectd/rabbitmq
  properties:
