// Code generated by monitor-code-gen. DO NOT EDIT.

package systemd

import (
	"github.com/signalfx/golib/v3/datapoint"
	"github.com/signalfx/signalfx-agent/pkg/monitors"
)

const monitorType = "collectd/systemd"

var groupSet = map[string]bool{}

const (
	gaugeActiveStateActivating   = "gauge.active_state.activating"
	gaugeActiveStateActive       = "gauge.active_state.active"
	gaugeActiveStateDeactivating = "gauge.active_state.deactivating"
	gaugeActiveStateFailed       = "gauge.active_state.failed"
	gaugeActiveStateInactive     = "gauge.active_state.inactive"
	gaugeActiveStateReloading    = "gauge.active_state.reloading"
	gaugeLoadStateError          = "gauge.load_state.error"
	gaugeLoadStateLoaded         = "gauge.load_state.loaded"
	gaugeLoadStateMasked         = "gauge.load_state.masked"
	gaugeLoadStateNotFound       = "gauge.load_state.not-found"
	gaugeSubstateDead            = "gauge.substate.dead"
	gaugeSubstateExited          = "gauge.substate.exited"
	gaugeSubstateFailed          = "gauge.substate.failed"
	gaugeSubstateRunning         = "gauge.substate.running"
)

var metricSet = map[string]monitors.MetricInfo{
	gaugeActiveStateActivating:   {Type: datapoint.Gauge},
	gaugeActiveStateActive:       {Type: datapoint.Gauge},
	gaugeActiveStateDeactivating: {Type: datapoint.Gauge},
	gaugeActiveStateFailed:       {Type: datapoint.Gauge},
	gaugeActiveStateInactive:     {Type: datapoint.Gauge},
	gaugeActiveStateReloading:    {Type: datapoint.Gauge},
	gaugeLoadStateError:          {Type: datapoint.Gauge},
	gaugeLoadStateLoaded:         {Type: datapoint.Gauge},
	gaugeLoadStateMasked:         {Type: datapoint.Gauge},
	gaugeLoadStateNotFound:       {Type: datapoint.Gauge},
	gaugeSubstateDead:            {Type: datapoint.Gauge},
	gaugeSubstateExited:          {Type: datapoint.Gauge},
	gaugeSubstateFailed:          {Type: datapoint.Gauge},
	gaugeSubstateRunning:         {Type: datapoint.Gauge},
}

var defaultMetrics = map[string]bool{
	gaugeSubstateRunning: true,
}

var groupMetricsMap = map[string][]string{}

var monitorMetadata = monitors.Metadata{
	MonitorType:     "collectd/systemd",
	DefaultMetrics:  defaultMetrics,
	Metrics:         metricSet,
	SendUnknown:     false,
	Groups:          groupSet,
	GroupMetricsMap: groupMetricsMap,
	SendAll:         false,
}
