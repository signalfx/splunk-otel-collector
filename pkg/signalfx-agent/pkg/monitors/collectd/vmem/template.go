//go:build linux
// +build linux

package vmem

// AUTOGENERATED BY scripts/collectd-template-to-go.  DO NOT EDIT!!

import (
	"text/template"

	"github.com/signalfx/signalfx-agent/pkg/monitors/collectd"
)

// CollectdTemplate is a template for a vmem collectd config file
var CollectdTemplate = template.Must(collectd.InjectTemplateFuncs(template.New("vmem")).Parse(`

<LoadPlugin vmem>
  Interval {{.IntervalSeconds}}
</LoadPlugin>
<Plugin vmem>
  Verbose false
</Plugin>

<Chain "PostCache">
  <Rule "FilterOutExcessiveVmemData">
    <Match "regex">
      Plugin '^vmem$'
    </Match>
    <Target "jump">
      Chain "VmemFilters"
    </Target>
    <Target "set"> 
      MetaData "monitorID" "{{.MonitorID}}" 
    </Target> 
  </Rule>
</Chain>

<Chain "VmemFilters">
  <Rule "vmem_filtering_accept_whitelisted_vmpage_faults">
    <Match "regex">
      Type 'vmpage_faults'
    </Match>
    Target "return"
  </Rule>

  <Rule "vmem_filtering_accept_whitelisted_vmpage_io">
    <Match "regex">
      Type 'vmpage_io'
    </Match>
    Target "return"
  </Rule>

  <Rule "vmem_filtering_accept_whitelisted_vmpage_number_free_pages">
    <Match "regex">
      Type 'vmpage_number'
      TypeInstance 'free_pages'
    </Match>
  Target "return"
  </Rule>

  <Rule "vmem_filtering_accept_whitelisted_vmpage_number_mapped">
    <Match "regex">
      Type 'vmpage_number'
      TypeInstance 'mapped'
    </Match>
    Target "return"
  </Rule>

  Target "stop"
</Chain>
`)).Option("missingkey=error")
