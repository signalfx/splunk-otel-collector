// Code generated by monitor-code-gen. DO NOT EDIT.

package coredns

import (
	"github.com/signalfx/golib/v3/datapoint"
	"github.com/signalfx/signalfx-agent/pkg/monitors"
)

const monitorType = "coredns"

var groupSet = map[string]bool{}

const (
	corednsBuildInfo                          = "coredns_build_info"
	corednsCacheEntries                       = "coredns_cache_entries"
	corednsCacheHitsTotal                     = "coredns_cache_hits_total"
	corednsCacheMissesTotal                   = "coredns_cache_misses_total"
	corednsCacheSize                          = "coredns_cache_size"
	corednsDNSRequestCountTotal               = "coredns_dns_request_count_total"
	corednsDNSRequestDurationSeconds          = "coredns_dns_request_duration_seconds"
	corednsDNSRequestDurationSecondsBucket    = "coredns_dns_request_duration_seconds_bucket"
	corednsDNSRequestDurationSecondsCount     = "coredns_dns_request_duration_seconds_count"
	corednsDNSRequestSizeBytes                = "coredns_dns_request_size_bytes"
	corednsDNSRequestSizeBytesBucket          = "coredns_dns_request_size_bytes_bucket"
	corednsDNSRequestSizeBytesCount           = "coredns_dns_request_size_bytes_count"
	corednsDNSRequestTypeCountTotal           = "coredns_dns_request_type_count_total"
	corednsDNSRequestsTotal                   = "coredns_dns_requests_total"
	corednsDNSResponseRcodeCountTotal         = "coredns_dns_response_rcode_count_total"
	corednsDNSResponseSizeBytes               = "coredns_dns_response_size_bytes"
	corednsDNSResponseSizeBytesBucket         = "coredns_dns_response_size_bytes_bucket"
	corednsDNSResponseSizeBytesCount          = "coredns_dns_response_size_bytes_count"
	corednsDNSResponsesTotal                  = "coredns_dns_responses_total"
	corednsHealthRequestDurationSeconds       = "coredns_health_request_duration_seconds"
	corednsHealthRequestDurationSecondsBucket = "coredns_health_request_duration_seconds_bucket"
	corednsHealthRequestDurationSecondsCount  = "coredns_health_request_duration_seconds_count"
	corednsPanicCountTotal                    = "coredns_panic_count_total"
	corednsPanicsTotal                        = "coredns_panics_total"
	corednsProxyRequestCountTotal             = "coredns_proxy_request_count_total"
	corednsProxyRequestDurationSeconds        = "coredns_proxy_request_duration_seconds"
	corednsProxyRequestDurationSecondsBucket  = "coredns_proxy_request_duration_seconds_bucket"
	corednsProxyRequestDurationSecondsCount   = "coredns_proxy_request_duration_seconds_count"
	goGcDurationSeconds                       = "go_gc_duration_seconds"
	goGcDurationSecondsCount                  = "go_gc_duration_seconds_count"
	goGcDurationSecondsQuantile               = "go_gc_duration_seconds_quantile"
	goGoroutines                              = "go_goroutines"
	goMemstatsAllocBytes                      = "go_memstats_alloc_bytes"
	goMemstatsAllocBytesTotal                 = "go_memstats_alloc_bytes_total"
	goMemstatsBuckHashSysBytes                = "go_memstats_buck_hash_sys_bytes"
	goMemstatsFreesTotal                      = "go_memstats_frees_total"
	goMemstatsGcSysBytes                      = "go_memstats_gc_sys_bytes"
	goMemstatsHeapAllocBytes                  = "go_memstats_heap_alloc_bytes"
	goMemstatsHeapIdleBytes                   = "go_memstats_heap_idle_bytes"
	goMemstatsHeapInuseBytes                  = "go_memstats_heap_inuse_bytes"
	goMemstatsHeapObjects                     = "go_memstats_heap_objects"
	goMemstatsHeapReleasedBytesTotal          = "go_memstats_heap_released_bytes_total"
	goMemstatsHeapSysBytes                    = "go_memstats_heap_sys_bytes"
	goMemstatsLastGcTimeSeconds               = "go_memstats_last_gc_time_seconds"
	goMemstatsLookupsTotal                    = "go_memstats_lookups_total"
	goMemstatsMallocsTotal                    = "go_memstats_mallocs_total"
	goMemstatsMcacheInuseBytes                = "go_memstats_mcache_inuse_bytes"
	goMemstatsMcacheSysBytes                  = "go_memstats_mcache_sys_bytes"
	goMemstatsMspanInuseBytes                 = "go_memstats_mspan_inuse_bytes"
	goMemstatsMspanSysBytes                   = "go_memstats_mspan_sys_bytes"
	goMemstatsNextGcBytes                     = "go_memstats_next_gc_bytes"
	goMemstatsOtherSysBytes                   = "go_memstats_other_sys_bytes"
	goMemstatsStackInuseBytes                 = "go_memstats_stack_inuse_bytes"
	goMemstatsStackSysBytes                   = "go_memstats_stack_sys_bytes"
	goMemstatsSysBytes                        = "go_memstats_sys_bytes"
	processCPUSecondsTotal                    = "process_cpu_seconds_total"
	processMaxFds                             = "process_max_fds"
	processOpenFds                            = "process_open_fds"
	processResidentMemoryBytes                = "process_resident_memory_bytes"
	processStartTimeSeconds                   = "process_start_time_seconds"
	processVirtualMemoryBytes                 = "process_virtual_memory_bytes"
)

var metricSet = map[string]monitors.MetricInfo{
	corednsBuildInfo:                          {Type: datapoint.Gauge},
	corednsCacheEntries:                       {Type: datapoint.Counter},
	corednsCacheHitsTotal:                     {Type: datapoint.Counter},
	corednsCacheMissesTotal:                   {Type: datapoint.Counter},
	corednsCacheSize:                          {Type: datapoint.Counter},
	corednsDNSRequestCountTotal:               {Type: datapoint.Counter},
	corednsDNSRequestDurationSeconds:          {Type: datapoint.Counter},
	corednsDNSRequestDurationSecondsBucket:    {Type: datapoint.Counter},
	corednsDNSRequestDurationSecondsCount:     {Type: datapoint.Counter},
	corednsDNSRequestSizeBytes:                {Type: datapoint.Counter},
	corednsDNSRequestSizeBytesBucket:          {Type: datapoint.Counter},
	corednsDNSRequestSizeBytesCount:           {Type: datapoint.Counter},
	corednsDNSRequestTypeCountTotal:           {Type: datapoint.Counter},
	corednsDNSRequestsTotal:                   {Type: datapoint.Counter},
	corednsDNSResponseRcodeCountTotal:         {Type: datapoint.Counter},
	corednsDNSResponseSizeBytes:               {Type: datapoint.Counter},
	corednsDNSResponseSizeBytesBucket:         {Type: datapoint.Counter},
	corednsDNSResponseSizeBytesCount:          {Type: datapoint.Counter},
	corednsDNSResponsesTotal:                  {Type: datapoint.Counter},
	corednsHealthRequestDurationSeconds:       {Type: datapoint.Counter},
	corednsHealthRequestDurationSecondsBucket: {Type: datapoint.Counter},
	corednsHealthRequestDurationSecondsCount:  {Type: datapoint.Counter},
	corednsPanicCountTotal:                    {Type: datapoint.Counter},
	corednsPanicsTotal:                        {Type: datapoint.Counter},
	corednsProxyRequestCountTotal:             {Type: datapoint.Counter},
	corednsProxyRequestDurationSeconds:        {Type: datapoint.Counter},
	corednsProxyRequestDurationSecondsBucket:  {Type: datapoint.Counter},
	corednsProxyRequestDurationSecondsCount:   {Type: datapoint.Counter},
	goGcDurationSeconds:                       {Type: datapoint.Counter},
	goGcDurationSecondsCount:                  {Type: datapoint.Counter},
	goGcDurationSecondsQuantile:               {Type: datapoint.Gauge},
	goGoroutines:                              {Type: datapoint.Gauge},
	goMemstatsAllocBytes:                      {Type: datapoint.Gauge},
	goMemstatsAllocBytesTotal:                 {Type: datapoint.Counter},
	goMemstatsBuckHashSysBytes:                {Type: datapoint.Gauge},
	goMemstatsFreesTotal:                      {Type: datapoint.Counter},
	goMemstatsGcSysBytes:                      {Type: datapoint.Gauge},
	goMemstatsHeapAllocBytes:                  {Type: datapoint.Gauge},
	goMemstatsHeapIdleBytes:                   {Type: datapoint.Gauge},
	goMemstatsHeapInuseBytes:                  {Type: datapoint.Gauge},
	goMemstatsHeapObjects:                     {Type: datapoint.Gauge},
	goMemstatsHeapReleasedBytesTotal:          {Type: datapoint.Counter},
	goMemstatsHeapSysBytes:                    {Type: datapoint.Gauge},
	goMemstatsLastGcTimeSeconds:               {Type: datapoint.Gauge},
	goMemstatsLookupsTotal:                    {Type: datapoint.Counter},
	goMemstatsMallocsTotal:                    {Type: datapoint.Counter},
	goMemstatsMcacheInuseBytes:                {Type: datapoint.Gauge},
	goMemstatsMcacheSysBytes:                  {Type: datapoint.Gauge},
	goMemstatsMspanInuseBytes:                 {Type: datapoint.Gauge},
	goMemstatsMspanSysBytes:                   {Type: datapoint.Gauge},
	goMemstatsNextGcBytes:                     {Type: datapoint.Gauge},
	goMemstatsOtherSysBytes:                   {Type: datapoint.Gauge},
	goMemstatsStackInuseBytes:                 {Type: datapoint.Gauge},
	goMemstatsStackSysBytes:                   {Type: datapoint.Gauge},
	goMemstatsSysBytes:                        {Type: datapoint.Gauge},
	processCPUSecondsTotal:                    {Type: datapoint.Counter},
	processMaxFds:                             {Type: datapoint.Gauge},
	processOpenFds:                            {Type: datapoint.Gauge},
	processResidentMemoryBytes:                {Type: datapoint.Gauge},
	processStartTimeSeconds:                   {Type: datapoint.Gauge},
	processVirtualMemoryBytes:                 {Type: datapoint.Gauge},
}

var defaultMetrics = map[string]bool{
	corednsCacheEntries:               true,
	corednsCacheSize:                  true,
	corednsDNSRequestCountTotal:       true,
	corednsDNSRequestSizeBytes:        true,
	corednsDNSRequestTypeCountTotal:   true,
	corednsDNSRequestsTotal:           true,
	corednsDNSResponseRcodeCountTotal: true,
	corednsDNSResponsesTotal:          true,
}

var groupMetricsMap = map[string][]string{}

var monitorMetadata = monitors.Metadata{
	MonitorType:     "coredns",
	DefaultMetrics:  defaultMetrics,
	Metrics:         metricSet,
	SendUnknown:     false,
	Groups:          groupSet,
	GroupMetricsMap: groupMetricsMap,
	SendAll:         false,
}
