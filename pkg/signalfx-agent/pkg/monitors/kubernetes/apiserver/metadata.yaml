monitors:
- monitorType: kubernetes-apiserver
  doc: |
    This monitor queries the Kubernetes API server for kube-apiserver metrics in Prometheus format.
    The monitor queries path `/metrics` by default when no path is configured. The monitor converts
    the Prometheus metric types to SignalFx metric types as described [here](prometheus-exporter.md)

    Example YAML Configuration

    ```yaml
    monitors:
    - type: kubernetes-apiserver
      discoveryRule: Get(container_labels, "component") == "kube-apiserver"
      extraDimensions:
        metric_source: kubernetes-apiserver
    ```
  metrics:
    APIServiceOpenAPIAggregationControllerQueue1_adds:
      default: false
      description: '(Deprecated) Total number of adds handled by workqueue: APIServiceOpenAPIAggregationControllerQueue1'
      type: cumulative
      group: api_service_open_api_aggregation_controller
    APIServiceOpenAPIAggregationControllerQueue1_depth:
      default: false
      description: '(Deprecated) Current depth of workqueue: APIServiceOpenAPIAggregationControllerQueue1'
      type: gauge
      group: api_service_open_api_aggregation_controller
    APIServiceOpenAPIAggregationControllerQueue1_longest_running_processor_microseconds:
      default: false
      description: (Deprecated) How many microseconds has the longest running processor
        for APIServiceOpenAPIAggregationControllerQueue1 been running.
      type: gauge
      group: api_service_open_api_aggregation_controller
    APIServiceOpenAPIAggregationControllerQueue1_queue_latency_count:
      default: false
      description: (Deprecated) How long an item stays in workqueueAPIServiceOpenAPIAggregationControllerQueue1
        before being requested. (count)
      type: cumulative
      group: api_service_open_api_aggregation_controller
    APIServiceOpenAPIAggregationControllerQueue1_queue_latency:
      default: false
      description: (Deprecated) How long an item stays in workqueueAPIServiceOpenAPIAggregationControllerQueue1
        before being requested. (sum)
      type: cumulative
      group: api_service_open_api_aggregation_controller
    APIServiceOpenAPIAggregationControllerQueue1_queue_latency_quantile:
      default: false
      description: (Deprecated) How long an item stays in workqueueAPIServiceOpenAPIAggregationControllerQueue1
        before being requested. (quantized)
      type: gauge
      group: api_service_open_api_aggregation_controller
    APIServiceOpenAPIAggregationControllerQueue1_retries:
      default: false
      description: '(Deprecated) Total number of retries handled by workqueue: APIServiceOpenAPIAggregationControllerQueue1'
      type: cumulative
      group: api_service_open_api_aggregation_controller
    APIServiceOpenAPIAggregationControllerQueue1_unfinished_work_seconds:
      default: false
      description: (Deprecated) How many seconds of work APIServiceOpenAPIAggregationControllerQueue1
        has done that is in progress and hasn't been observed by work_duration. Large
        values indicate stuck threads. One can deduce the number of stuck threads
        by observing the rate at which this increases.
      type: gauge
      group: api_service_open_api_aggregation_controller
    APIServiceOpenAPIAggregationControllerQueue1_work_duration_count:
      default: false
      description: (Deprecated) How long processing an item from workqueueAPIServiceOpenAPIAggregationControllerQueue1
        takes. (count)
      type: cumulative
      group: api_service_open_api_aggregation_controller
    APIServiceOpenAPIAggregationControllerQueue1_work_duration:
      default: false
      description: (Deprecated) How long processing an item from workqueueAPIServiceOpenAPIAggregationControllerQueue1
        takes. (sum)
      type: cumulative
      group: api_service_open_api_aggregation_controller
    APIServiceOpenAPIAggregationControllerQueue1_work_duration_quantile:
      default: false
      description: (Deprecated) How long processing an item from workqueueAPIServiceOpenAPIAggregationControllerQueue1
        takes. (quantized)
      type: gauge
      group: api_service_open_api_aggregation_controller
    APIServiceRegistrationController_adds:
      default: false
      description: '(Deprecated) Total number of adds handled by workqueue: APIServiceRegistrationController'
      type: cumulative
      group: api_service_registration_controller
    APIServiceRegistrationController_depth:
      default: false
      description: '(Deprecated) Current depth of workqueue: APIServiceRegistrationController'
      type: gauge
      group: api_service_registration_controller
    APIServiceRegistrationController_longest_running_processor_microseconds:
      default: false
      description: (Deprecated) How many microseconds has the longest running processor
        for APIServiceRegistrationController been running.
      type: gauge
      group: api_service_registration_controller
    APIServiceRegistrationController_queue_latency_count:
      default: false
      description: (Deprecated) How long an item stays in workqueueAPIServiceRegistrationController
        before being requested. (count)
      type: cumulative
      group: api_service_registration_controller
    APIServiceRegistrationController_queue_latency:
      default: false
      description: (Deprecated) How long an item stays in workqueueAPIServiceRegistrationController
        before being requested. (sum)
      type: cumulative
      group: api_service_registration_controller
    APIServiceRegistrationController_queue_latency_quantile:
      default: false
      description: (Deprecated) How long an item stays in workqueueAPIServiceRegistrationController
        before being requested. (quantized)
      type: gauge
      group: api_service_registration_controller
    APIServiceRegistrationController_retries:
      default: false
      description: '(Deprecated) Total number of retries handled by workqueue: APIServiceRegistrationController'
      type: cumulative
      group: api_service_registration_controller
    APIServiceRegistrationController_unfinished_work_seconds:
      default: false
      description: (Deprecated) How many seconds of work APIServiceRegistrationController
        has done that is in progress and hasn't been observed by work_duration. Large
        values indicate stuck threads. One can deduce the number of stuck threads
        by observing the rate at which this increases.
      type: gauge
      group: api_service_registration_controller
    APIServiceRegistrationController_work_duration_count:
      default: false
      description: (Deprecated) How long processing an item from workqueueAPIServiceRegistrationController
        takes. (count)
      type: cumulative
      group: api_service_registration_controller
    APIServiceRegistrationController_work_duration:
      default: false
      description: (Deprecated) How long processing an item from workqueueAPIServiceRegistrationController
        takes. (sum)
      type: cumulative
      group: api_service_registration_controller
    APIServiceRegistrationController_work_duration_quantile:
      default: false
      description: (Deprecated) How long processing an item from workqueueAPIServiceRegistrationController
        takes. (quantized)
      type: gauge
      group: api_service_registration_controller
    AvailableConditionController_adds:
      default: false
      description: '(Deprecated) Total number of adds handled by workqueue: AvailableConditionController'
      type: cumulative
      group: available_condition_controller
    AvailableConditionController_depth:
      default: false
      description: '(Deprecated) Current depth of workqueue: AvailableConditionController'
      type: gauge
      group: available_condition_controller
    AvailableConditionController_longest_running_processor_microseconds:
      default: false
      description: (Deprecated) How many microseconds has the longest running processor
        for AvailableConditionController been running.
      type: gauge
      group: available_condition_controller
    AvailableConditionController_queue_latency_count:
      default: false
      description: (Deprecated) How long an item stays in workqueueAvailableConditionController
        before being requested. (count)
      type: cumulative
      group: available_condition_controller
    AvailableConditionController_queue_latency:
      default: false
      description: (Deprecated) How long an item stays in workqueueAvailableConditionController
        before being requested. (sum)
      type: cumulative
      group: available_condition_controller
    AvailableConditionController_queue_latency_quantile:
      default: false
      description: (Deprecated) How long an item stays in workqueueAvailableConditionController
        before being requested. (quantized)
      type: gauge
      group: available_condition_controller
    AvailableConditionController_retries:
      default: false
      description: '(Deprecated) Total number of retries handled by workqueue: AvailableConditionController'
      type: cumulative
      group: available_condition_controller
    AvailableConditionController_unfinished_work_seconds:
      default: false
      description: (Deprecated) How many seconds of work AvailableConditionController
        has done that is in progress and hasn't been observed by work_duration. Large
        values indicate stuck threads. One can deduce the number of stuck threads
        by observing the rate at which this increases.
      type: gauge
      group: available_condition_controller
    AvailableConditionController_work_duration_count:
      default: false
      description: (Deprecated) How long processing an item from workqueueAvailableConditionController
        takes. (count)
      type: cumulative
      group: available_condition_controller
    AvailableConditionController_work_duration:
      default: false
      description: (Deprecated) How long processing an item from workqueueAvailableConditionController
        takes. (sum)
      type: cumulative
      group: available_condition_controller
    AvailableConditionController_work_duration_quantile:
      default: false
      description: (Deprecated) How long processing an item from workqueueAvailableConditionController
        takes. (quantized)
      type: gauge
      group: available_condition_controller
    DiscoveryController_adds:
      default: false
      description: '(Deprecated) Total number of adds handled by workqueue: DiscoveryController'
      type: cumulative
      group: discovery_controller
    DiscoveryController_depth:
      default: false
      description: '(Deprecated) Current depth of workqueue: DiscoveryController'
      type: gauge
      group: discovery_controller
    DiscoveryController_longest_running_processor_microseconds:
      default: false
      description: (Deprecated) How many microseconds has the longest running processor
        for DiscoveryController been running.
      type: gauge
      group: discovery_controller
    DiscoveryController_queue_latency_count:
      default: false
      description: (Deprecated) How long an item stays in workqueueDiscoveryController
        before being requested. (count)
      type: cumulative
      group: discovery_controller
    DiscoveryController_queue_latency:
      default: false
      description: (Deprecated) How long an item stays in workqueueDiscoveryController
        before being requested. (sum)
      type: cumulative
      group: discovery_controller
    DiscoveryController_queue_latency_quantile:
      default: false
      description: (Deprecated) How long an item stays in workqueueDiscoveryController
        before being requested. (quantized)
      type: gauge
      group: discovery_controller
    DiscoveryController_retries:
      default: false
      description: '(Deprecated) Total number of retries handled by workqueue: DiscoveryController'
      type: cumulative
      group: discovery_controller
    DiscoveryController_unfinished_work_seconds:
      default: false
      description: (Deprecated) How many seconds of work DiscoveryController has done
        that is in progress and hasn't been observed by work_duration. Large values
        indicate stuck threads. One can deduce the number of stuck threads by observing
        the rate at which this increases.
      type: gauge
      group: discovery_controller
    DiscoveryController_work_duration_count:
      default: false
      description: (Deprecated) How long processing an item from workqueueDiscoveryController
        takes. (count)
      type: cumulative
      group: discovery_controller
    DiscoveryController_work_duration:
      default: false
      description: (Deprecated) How long processing an item from workqueueDiscoveryController
        takes. (sum)
      type: cumulative
      group: discovery_controller
    DiscoveryController_work_duration_quantile:
      default: false
      description: (Deprecated) How long processing an item from workqueueDiscoveryController
        takes. (quantized)
      type: gauge
      group: discovery_controller
    admission_quota_controller_adds:
      default: true
      description: '(Deprecated) Total number of adds handled by workqueue: admission_quota_controller'
      type: cumulative
      group: admission_quota_controller
    admission_quota_controller_depth:
      default: false
      description: '(Deprecated) Current depth of workqueue: admission_quota_controller'
      type: gauge
      group: admission_quota_controller
    admission_quota_controller_longest_running_processor_microseconds:
      default: false
      description: (Deprecated) How many microseconds has the longest running processor
        for admission_quota_controller been running.
      type: gauge
      group: admission_quota_controller
    admission_quota_controller_queue_latency_count:
      default: false
      description: (Deprecated) How long an item stays in workqueueadmission_quota_controller
        before being requested. (count)
      type: cumulative
      group: admission_quota_controller
    admission_quota_controller_queue_latency:
      default: false
      description: (Deprecated) How long an item stays in workqueueadmission_quota_controller
        before being requested. (sum)
      type: cumulative
      group: admission_quota_controller
    admission_quota_controller_queue_latency_quantile:
      default: false
      description: (Deprecated) How long an item stays in workqueueadmission_quota_controller
        before being requested. (quantized)
      type: gauge
      group: admission_quota_controller
    admission_quota_controller_unfinished_work_seconds:
      default: false
      description: (Deprecated) How many seconds of work admission_quota_controller
        has done that is in progress and hasn't been observed by work_duration. Large
        values indicate stuck threads. One can deduce the number of stuck threads
        by observing the rate at which this increases.
      type: gauge
      group: admission_quota_controller
    admission_quota_controller_work_duration_count:
      default: false
      description: (Deprecated) How long processing an item from workqueueadmission_quota_controller
        takes. (count)
      type: cumulative
      group: admission_quota_controller
    admission_quota_controller_work_duration:
      default: false
      description: (Deprecated) How long processing an item from workqueueadmission_quota_controller
        takes. (sum)
      type: cumulative
      group: admission_quota_controller
    admission_quota_controller_work_duration_quantile:
      default: false
      description: (Deprecated) How long processing an item from workqueueadmission_quota_controller
        takes. (quantized)
      type: gauge
      group: admission_quota_controller
    apiserver_admission_controller_admission_duration_seconds_count:
      default: false
      description: Admission controller latency histogram in seconds, identified by
        name and broken out for each operation and API resource and type (validate
        or admit). (count)
      type: cumulative
      group: apiserver_admission_controller
    apiserver_admission_controller_admission_duration_seconds:
      default: false
      description: Admission controller latency histogram in seconds, identified by
        name and broken out for each operation and API resource and type (validate
        or admit). (sum)
      type: cumulative
      group: apiserver_admission_controller
    apiserver_admission_controller_admission_duration_seconds_bucket:
      default: false
      description: Admission controller latency histogram in seconds, identified by
        name and broken out for each operation and API resource and type (validate
        or admit). (bucket)
      type: cumulative
      group: apiserver_admission_controller
    apiserver_admission_controller_admission_latencies_milliseconds_count:
      default: false
      description: (Deprecated) Admission controller latency histogram in milliseconds,
        identified by name and broken out for each operation and API resource and
        type (validate or admit). (count)
      type: cumulative
      group: apiserver_admission_controller
    apiserver_admission_controller_admission_latencies_milliseconds:
      default: false
      description: (Deprecated) Admission controller latency histogram in milliseconds,
        identified by name and broken out for each operation and API resource and
        type (validate or admit). (sum)
      type: cumulative
      group: apiserver_admission_controller
    apiserver_admission_controller_admission_latencies_milliseconds_bucket:
      default: false
      description: (Deprecated) Admission controller latency histogram in milliseconds,
        identified by name and broken out for each operation and API resource and
        type (validate or admit). (bucket)
      type: cumulative
      group: apiserver_admission_controller
    apiserver_admission_step_admission_duration_seconds_count:
      default: false
      description: Admission sub-step latency histogram in seconds, broken out for
        each operation and API resource and step type (validate or admit). (count)
      type: cumulative
      group: apiserver_admission_step_admission
    apiserver_admission_step_admission_duration_seconds:
      default: false
      description: Admission sub-step latency histogram in seconds, broken out for
        each operation and API resource and step type (validate or admit). (sum)
      type: cumulative
      group: apiserver_admission_step_admission
    apiserver_admission_step_admission_duration_seconds_bucket:
      default: false
      description: Admission sub-step latency histogram in seconds, broken out for
        each operation and API resource and step type (validate or admit). (bucket)
      type: cumulative
      group: apiserver_admission_step_admission
    apiserver_admission_step_admission_duration_seconds_summary_count:
      default: false
      description: Admission sub-step latency summary in seconds, broken out for each
        operation and API resource and step type (validate or admit). (count)
      type: cumulative
      group: apiserver_admission_step_admission
    apiserver_admission_step_admission_duration_seconds_summary:
      default: false
      description: Admission sub-step latency summary in seconds, broken out for each
        operation and API resource and step type (validate or admit). (sum)
      type: cumulative
      group: apiserver_admission_step_admission
    apiserver_admission_step_admission_duration_seconds_summary_quantile:
      default: false
      description: Admission sub-step latency summary in seconds, broken out for each
        operation and API resource and step type (validate or admit). (quantized)
      type: gauge
      group: apiserver_admission_step_admission
    apiserver_admission_step_admission_latencies_milliseconds_count:
      default: false
      description: (Deprecated) Admission sub-step latency histogram in milliseconds,
        broken out for each operation and API resource and step type (validate or
        admit). (count)
      type: cumulative
      group: apiserver_admission_step_admission
    apiserver_admission_step_admission_latencies_milliseconds:
      default: false
      description: (Deprecated) Admission sub-step latency histogram in milliseconds,
        broken out for each operation and API resource and step type (validate or
        admit). (sum)
      type: cumulative
      group: apiserver_admission_step_admission
    apiserver_admission_step_admission_latencies_milliseconds_bucket:
      default: false
      description: (Deprecated) Admission sub-step latency histogram in milliseconds,
        broken out for each operation and API resource and step type (validate or
        admit). (bucket)
      type: cumulative
      group: apiserver_admission_step_admission
    apiserver_admission_step_admission_latencies_milliseconds_summary_count:
      default: false
      description: (Deprecated) Admission sub-step latency summary in milliseconds,
        broken out for each operation and API resource and step type (validate or
        admit). (count)
      type: cumulative
      group: apiserver_admission_step_admission
    apiserver_admission_step_admission_latencies_milliseconds_summary:
      default: false
      description: (Deprecated) Admission sub-step latency summary in milliseconds,
        broken out for each operation and API resource and step type (validate or
        admit). (sum)
      type: cumulative
      group: apiserver_admission_step_admission
    apiserver_admission_step_admission_latencies_milliseconds_summary_quantile:
      default: false
      description: (Deprecated) Admission sub-step latency summary in milliseconds,
        broken out for each operation and API resource and step type (validate or
        admit). (quantized)
      type: gauge
      group: apiserver_admission_step_admission
    apiserver_audit_event_total:
      default: false
      description: Counter of audit events generated and sent to the audit backend.
      type: cumulative
      group: apiserver_audit
    apiserver_audit_requests_rejected_total:
      default: false
      description: Counter of apiserver requests rejected due to an error in audit
        logging backend.
      type: cumulative
      group: apiserver_audit
    apiserver_client_certificate_expiration_seconds_count:
      default: false
      description: Distribution of the remaining lifetime on the certificate used
        to authenticate a request. (count)
      type: cumulative
      group: apiserver_client
    apiserver_client_certificate_expiration_seconds:
      default: false
      description: Distribution of the remaining lifetime on the certificate used
        to authenticate a request. (sum)
      type: cumulative
      group: apiserver_client
    apiserver_client_certificate_expiration_seconds_bucket:
      default: false
      description: Distribution of the remaining lifetime on the certificate used
        to authenticate a request. (bucket)
      type: cumulative
      group: apiserver_client
    apiserver_current_inflight_requests:
      default: false
      description: Maximal number of currently used inflight request limit of this
        apiserver per request kind in last second.
      type: gauge
    apiserver_init_events_total:
      default: false
      description: Counter of init events processed in watchcache broken by resource
        type
      type: cumulative
    apiserver_longrunning_gauge:
      default: false
      description: Gauge of all active long-running apiserver requests broken out
        by verb, group, version, resource, scope and component. Not all requests are
        tracked this way.
      type: gauge
    apiserver_registered_watchers:
      default: false
      description: Number of currently registered watchers for a given resources
      type: gauge
    apiserver_request_count:
      default: true
      description: (Deprecated) Counter of apiserver requests broken out for each
        verb, group, version, resource, scope, component, client, and HTTP response
        contentType and code.
      type: cumulative
      group: apiserver_request
    apiserver_request_duration_seconds_count:
      default: false
      description: Response latency distribution in seconds for each verb, dry run
        value, group, version, resource, subresource, scope and component. (count)
      type: cumulative
      group: apiserver_request
    apiserver_request_duration_seconds:
      default: false
      description: Response latency distribution in seconds for each verb, dry run
        value, group, version, resource, subresource, scope and component. (sum)
      type: cumulative
      group: apiserver_request
    apiserver_request_duration_seconds_bucket:
      default: false
      description: Response latency distribution in seconds for each verb, dry run
        value, group, version, resource, subresource, scope and component. (bucket)
      type: cumulative
      group: apiserver_request
    apiserver_request_latencies_count:
      default: false
      description: (Deprecated) Response latency distribution in microseconds for
        each verb, group, version, resource, subresource, scope and component. (count)
      type: cumulative
      group: apiserver_request
    apiserver_request_latencies:
      default: false
      description: (Deprecated) Response latency distribution in microseconds for
        each verb, group, version, resource, subresource, scope and component. (sum)
      type: cumulative
      group: apiserver_request
    apiserver_request_latencies_bucket:
      default: false
      description: (Deprecated) Response latency distribution in microseconds for
        each verb, group, version, resource, subresource, scope and component. (bucket)
      type: cumulative
      group: apiserver_request
    apiserver_request_latencies_summary_count:
      default: false
      description: (Deprecated) Response latency summary in microseconds for each
        verb, group, version, resource, subresource, scope and component. (count)
      type: cumulative
      group: apiserver_request
    apiserver_request_latencies_summary:
      default: false
      description: (Deprecated) Response latency summary in microseconds for each
        verb, group, version, resource, subresource, scope and component. (sum)
      type: cumulative
      group: apiserver_request
    apiserver_request_latencies_summary_quantile:
      default: false
      description: (Deprecated) Response latency summary in microseconds for each
        verb, group, version, resource, subresource, scope and component. (quantized)
      type: gauge
      group: apiserver_request
    apiserver_request_total:
      default: true
      description: Counter of apiserver requests broken out for each verb, dry run
        value, group, version, resource, scope, component, client, and HTTP response
        contentType and code.
      type: cumulative
      group: apiserver_request
    apiserver_response_sizes_count:
      default: false
      description: Response size distribution in bytes for each group, version, verb,
        resource, subresource, scope and component. (count)
      type: cumulative
      group: apiserver_response
    apiserver_response_sizes:
      default: false
      description: Response size distribution in bytes for each group, version, verb,
        resource, subresource, scope and component. (sum)
      type: cumulative
      group: apiserver_response
    apiserver_response_sizes_bucket:
      default: false
      description: Response size distribution in bytes for each group, version, verb,
        resource, subresource, scope and component. (bucket)
      type: cumulative
      group: apiserver_response
    apiserver_storage_data_key_generation_duration_seconds_count:
      default: false
      description: Latencies in seconds of data encryption key(DEK) generation operations.
        (count)
      type: cumulative
      group: apiserver_storage
    apiserver_storage_data_key_generation_duration_seconds:
      default: false
      description: Latencies in seconds of data encryption key(DEK) generation operations.
        (sum)
      type: cumulative
      group: apiserver_storage
    apiserver_storage_data_key_generation_duration_seconds_bucket:
      default: false
      description: Latencies in seconds of data encryption key(DEK) generation operations.
        (bucket)
      type: cumulative
      group: apiserver_storage
    apiserver_storage_data_key_generation_failures_total:
      default: false
      description: Total number of failed data encryption key(DEK) generation operations.
      type: cumulative
      group: apiserver_storage
    apiserver_storage_data_key_generation_latencies_microseconds_count:
      default: false
      description: (Deprecated) Latencies in microseconds of data encryption key(DEK)
        generation operations. (count)
      type: cumulative
      group: apiserver_storage
    apiserver_storage_data_key_generation_latencies_microseconds:
      default: false
      description: (Deprecated) Latencies in microseconds of data encryption key(DEK)
        generation operations. (sum)
      type: cumulative
      group: apiserver_storage
    apiserver_storage_data_key_generation_latencies_microseconds_bucket:
      default: false
      description: (Deprecated) Latencies in microseconds of data encryption key(DEK)
        generation operations. (bucket)
      type: cumulative
      group: apiserver_storage
    apiserver_storage_envelope_transformation_cache_misses_total:
      default: false
      description: Total number of cache misses while accessing key decryption key(KEK).
      type: cumulative
      group: apiserver_storage
    authenticated_user_requests:
      default: false
      description: Counter of authenticated requests broken out by username.
      type: cumulative
    autoregister_adds:
      default: false
      description: '(Deprecated) Total number of adds handled by workqueue: autoregister'
      type: cumulative
      group: autoregister
    autoregister_depth:
      default: false
      description: '(Deprecated) Current depth of workqueue: autoregister'
      type: gauge
      group: autoregister
    autoregister_longest_running_processor_microseconds:
      default: false
      description: (Deprecated) How many microseconds has the longest running processor
        for autoregister been running.
      type: gauge
      group: autoregister
    autoregister_queue_latency_count:
      default: false
      description: (Deprecated) How long an item stays in workqueueautoregister before
        being requested. (count)
      type: cumulative
      group: autoregister
    autoregister_queue_latency:
      default: false
      description: (Deprecated) How long an item stays in workqueueautoregister before
        being requested. (sum)
      type: cumulative
      group: autoregister
    autoregister_queue_latency_quantile:
      default: false
      description: (Deprecated) How long an item stays in workqueueautoregister before
        being requested. (quantized)
      type: gauge
      group: autoregister
    autoregister_retries:
      default: false
      description: '(Deprecated) Total number of retries handled by workqueue: autoregister'
      type: cumulative
      group: autoregister
    autoregister_unfinished_work_seconds:
      default: false
      description: (Deprecated) How many seconds of work autoregister has done that
        is in progress and hasn't been observed by work_duration. Large values indicate
        stuck threads. One can deduce the number of stuck threads by observing the
        rate at which this increases.
      type: gauge
      group: autoregister
    autoregister_work_duration_count:
      default: false
      description: (Deprecated) How long processing an item from workqueueautoregister
        takes. (count)
      type: cumulative
      group: autoregister
    autoregister_work_duration:
      default: false
      description: (Deprecated) How long processing an item from workqueueautoregister
        takes. (sum)
      type: cumulative
      group: autoregister
    autoregister_work_duration_quantile:
      default: false
      description: (Deprecated) How long processing an item from workqueueautoregister
        takes. (quantized)
      type: gauge
      group: autoregister
    crdEstablishing_adds:
      default: false
      description: '(Deprecated) Total number of adds handled by workqueue: crdEstablishing'
      type: cumulative
      group: crd_establishing
    crdEstablishing_depth:
      default: false
      description: '(Deprecated) Current depth of workqueue: crdEstablishing'
      type: gauge
      group: crd_establishing
    crdEstablishing_longest_running_processor_microseconds:
      default: false
      description: (Deprecated) How many microseconds has the longest running processor
        for crdEstablishing been running.
      type: gauge
      group: crd_establishing
    crdEstablishing_queue_latency_count:
      default: false
      description: (Deprecated) How long an item stays in workqueuecrdEstablishing
        before being requested. (count)
      type: cumulative
      group: crd_establishing
    crdEstablishing_queue_latency:
      default: false
      description: (Deprecated) How long an item stays in workqueuecrdEstablishing
        before being requested. (sum)
      type: cumulative
      group: crd_establishing
    crdEstablishing_queue_latency_quantile:
      default: false
      description: (Deprecated) How long an item stays in workqueuecrdEstablishing
        before being requested. (quantized)
      type: gauge
      group: crd_establishing
    crdEstablishing_retries:
      default: false
      description: '(Deprecated) Total number of retries handled by workqueue: crdEstablishing'
      type: cumulative
      group: crd_establishing
    crdEstablishing_unfinished_work_seconds:
      default: false
      description: (Deprecated) How many seconds of work crdEstablishing has done
        that is in progress and hasn't been observed by work_duration. Large values
        indicate stuck threads. One can deduce the number of stuck threads by observing
        the rate at which this increases.
      type: gauge
      group: crd_establishing
    crdEstablishing_work_duration_count:
      default: false
      description: (Deprecated) How long processing an item from workqueuecrdEstablishing
        takes. (count)
      type: cumulative
      group: crd_establishing
    crdEstablishing_work_duration:
      default: false
      description: (Deprecated) How long processing an item from workqueuecrdEstablishing
        takes. (sum)
      type: cumulative
      group: crd_establishing
    crdEstablishing_work_duration_quantile:
      default: false
      description: (Deprecated) How long processing an item from workqueuecrdEstablishing
        takes. (quantized)
      type: gauge
      group: crd_establishing
    crd_autoregistration_controller_adds:
      default: false
      description: '(Deprecated) Total number of adds handled by workqueue: crd_autoregistration_controller'
      type: cumulative
      group: crd_autoregistration_controller
    crd_autoregistration_controller_depth:
      default: false
      description: '(Deprecated) Current depth of workqueue: crd_autoregistration_controller'
      type: gauge
      group: crd_autoregistration_controller
    crd_autoregistration_controller_longest_running_processor_microseconds:
      default: false
      description: (Deprecated) How many microseconds has the longest running processor
        for crd_autoregistration_controller been running.
      type: gauge
      group: crd_autoregistration_controller
    crd_autoregistration_controller_queue_latency_count:
      default: false
      description: (Deprecated) How long an item stays in workqueuecrd_autoregistration_controller
        before being requested. (count)
      type: cumulative
      group: crd_autoregistration_controller
    crd_autoregistration_controller_queue_latency:
      default: false
      description: (Deprecated) How long an item stays in workqueuecrd_autoregistration_controller
        before being requested. (sum)
      type: cumulative
      group: crd_autoregistration_controller
    crd_autoregistration_controller_queue_latency_quantile:
      default: false
      description: (Deprecated) How long an item stays in workqueuecrd_autoregistration_controller
        before being requested. (quantized)
      type: gauge
      group: crd_autoregistration_controller
    crd_autoregistration_controller_retries:
      default: false
      description: '(Deprecated) Total number of retries handled by workqueue: crd_autoregistration_controller'
      type: cumulative
      group: crd_autoregistration_controller
    crd_autoregistration_controller_unfinished_work_seconds:
      default: false
      description: (Deprecated) How many seconds of work crd_autoregistration_controller
        has done that is in progress and hasn't been observed by work_duration. Large
        values indicate stuck threads. One can deduce the number of stuck threads
        by observing the rate at which this increases.
      type: gauge
      group: crd_autoregistration_controller
    crd_autoregistration_controller_work_duration_count:
      default: false
      description: (Deprecated) How long processing an item from workqueuecrd_autoregistration_controller
        takes. (count)
      type: cumulative
      group: crd_autoregistration_controller
    crd_autoregistration_controller_work_duration:
      default: false
      description: (Deprecated) How long processing an item from workqueuecrd_autoregistration_controller
        takes. (sum)
      type: cumulative
      group: crd_autoregistration_controller
    crd_autoregistration_controller_work_duration_quantile:
      default: false
      description: (Deprecated) How long processing an item from workqueuecrd_autoregistration_controller
        takes. (quantized)
      type: gauge
      group: crd_autoregistration_controller
    crd_finalizer_adds:
      default: false
      description: '(Deprecated) Total number of adds handled by workqueue: crd_finalizer'
      type: cumulative
      group: crd_finalizer
    crd_finalizer_depth:
      default: false
      description: '(Deprecated) Current depth of workqueue: crd_finalizer'
      type: gauge
      group: crd_finalizer
    crd_finalizer_longest_running_processor_microseconds:
      default: false
      description: (Deprecated) How many microseconds has the longest running processor
        for crd_finalizer been running.
      type: gauge
      group: crd_finalizer
    crd_finalizer_queue_latency_count:
      default: false
      description: (Deprecated) How long an item stays in workqueuecrd_finalizer before
        being requested. (count)
      type: cumulative
      group: crd_finalizer
    crd_finalizer_queue_latency:
      default: false
      description: (Deprecated) How long an item stays in workqueuecrd_finalizer before
        being requested. (sum)
      type: cumulative
      group: crd_finalizer
    crd_finalizer_queue_latency_quantile:
      default: false
      description: (Deprecated) How long an item stays in workqueuecrd_finalizer before
        being requested. (quantized)
      type: gauge
      group: crd_finalizer
    crd_finalizer_retries:
      default: false
      description: '(Deprecated) Total number of retries handled by workqueue: crd_finalizer'
      type: cumulative
      group: crd_finalizer
    crd_finalizer_unfinished_work_seconds:
      default: false
      description: (Deprecated) How many seconds of work crd_finalizer has done that
        is in progress and hasn't been observed by work_duration. Large values indicate
        stuck threads. One can deduce the number of stuck threads by observing the
        rate at which this increases.
      type: gauge
      group: crd_finalizer
    crd_finalizer_work_duration_count:
      default: false
      description: (Deprecated) How long processing an item from workqueuecrd_finalizer
        takes. (count)
      type: cumulative
      group: crd_finalizer
    crd_finalizer_work_duration:
      default: false
      description: (Deprecated) How long processing an item from workqueuecrd_finalizer
        takes. (sum)
      type: cumulative
      group: crd_finalizer
    crd_finalizer_work_duration_quantile:
      default: false
      description: (Deprecated) How long processing an item from workqueuecrd_finalizer
        takes. (quantized)
      type: gauge
      group: crd_finalizer
    crd_naming_condition_controller_adds:
      default: false
      description: '(Deprecated) Total number of adds handled by workqueue: crd_naming_condition_controller'
      type: cumulative
      group: crd_naming_condition_controller
    crd_naming_condition_controller_depth:
      default: false
      description: '(Deprecated) Current depth of workqueue: crd_naming_condition_controller'
      type: gauge
      group: crd_naming_condition_controller
    crd_naming_condition_controller_longest_running_processor_microseconds:
      default: false
      description: (Deprecated) How many microseconds has the longest running processor
        for crd_naming_condition_controller been running.
      type: gauge
      group: crd_naming_condition_controller
    crd_naming_condition_controller_queue_latency_count:
      default: false
      description: (Deprecated) How long an item stays in workqueuecrd_naming_condition_controller
        before being requested. (count)
      type: cumulative
      group: crd_naming_condition_controller
    crd_naming_condition_controller_queue_latency:
      default: false
      description: (Deprecated) How long an item stays in workqueuecrd_naming_condition_controller
        before being requested. (sum)
      type: cumulative
      group: crd_naming_condition_controller
    crd_naming_condition_controller_queue_latency_quantile:
      default: false
      description: (Deprecated) How long an item stays in workqueuecrd_naming_condition_controller
        before being requested. (quantized)
      type: gauge
      group: crd_naming_condition_controller
    crd_naming_condition_controller_retries:
      default: false
      description: '(Deprecated) Total number of retries handled by workqueue: crd_naming_condition_controller'
      type: cumulative
      group: crd_naming_condition_controller
    crd_naming_condition_controller_unfinished_work_seconds:
      default: false
      description: (Deprecated) How many seconds of work crd_naming_condition_controller
        has done that is in progress and hasn't been observed by work_duration. Large
        values indicate stuck threads. One can deduce the number of stuck threads
        by observing the rate at which this increases.
      type: gauge
      group: crd_naming_condition_controller
    crd_naming_condition_controller_work_duration_count:
      default: false
      description: (Deprecated) How long processing an item from workqueuecrd_naming_condition_controller
        takes. (count)
      type: cumulative
      group: crd_naming_condition_controller
    crd_naming_condition_controller_work_duration:
      default: false
      description: (Deprecated) How long processing an item from workqueuecrd_naming_condition_controller
        takes. (sum)
      type: cumulative
      group: crd_naming_condition_controller
    crd_naming_condition_controller_work_duration_quantile:
      default: false
      description: (Deprecated) How long processing an item from workqueuecrd_naming_condition_controller
        takes. (quantized)
      type: gauge
      group: crd_naming_condition_controller
    etcd_helper_cache_entry_count:
      default: false
      description: (Deprecated) Counter of etcd helper cache entries. This can be
        different from etcd_helper_cache_miss_count because two concurrent threads
        can miss the cache and generate the same entry twice.
      type: cumulative
      group: etcd
    etcd_helper_cache_entry:
      default: false
      description: Counter of etcd helper cache entries. This can be different from
        etcd_helper_cache_miss_count because two concurrent threads can miss the cache
        and generate the same entry twice.
      type: cumulative
      group: etcd
    etcd_helper_cache_hit_count:
      default: false
      description: (Deprecated) Counter of etcd helper cache hits.
      type: cumulative
      group: etcd
    etcd_helper_cache_hit:
      default: false
      description: Counter of etcd helper cache hits.
      type: cumulative
      group: etcd
    etcd_helper_cache_miss_count:
      default: false
      description: (Deprecated) Counter of etcd helper cache miss.
      type: cumulative
      group: etcd
    etcd_helper_cache_miss:
      default: false
      description: Counter of etcd helper cache miss.
      type: cumulative
      group: etcd
    etcd_object_counts:
      default: false
      description: Number of stored objects at the time of last check split by kind.
      type: gauge
      group: etcd
    etcd_request_cache_add_duration_seconds_count:
      default: false
      description: Latency in seconds of adding an object to etcd cache (count)
      type: cumulative
      group: etcd
    etcd_request_cache_add_duration_seconds:
      default: false
      description: Latency in seconds of adding an object to etcd cache (sum)
      type: cumulative
      group: etcd
    etcd_request_cache_add_duration_seconds_bucket:
      default: false
      description: Latency in seconds of adding an object to etcd cache (bucket)
      type: cumulative
      group: etcd
    etcd_request_cache_add_latencies_summary_count:
      default: false
      description: (Deprecated) Latency in microseconds of adding an object to etcd
        cache (count)
      type: cumulative
      group: etcd
    etcd_request_cache_add_latencies_summary:
      default: false
      description: (Deprecated) Latency in microseconds of adding an object to etcd
        cache (sum)
      type: cumulative
      group: etcd
    etcd_request_cache_add_latencies_summary_quantile:
      default: false
      description: (Deprecated) Latency in microseconds of adding an object to etcd
        cache (quantized)
      type: gauge
      group: etcd
    etcd_request_cache_get_duration_seconds_count:
      default: false
      description: Latency in seconds of getting an object from etcd cache (count)
      type: cumulative
      group: etcd
    etcd_request_cache_get_duration_seconds:
      default: false
      description: Latency in seconds of getting an object from etcd cache (sum)
      type: cumulative
      group: etcd
    etcd_request_cache_get_duration_seconds_bucket:
      default: false
      description: Latency in seconds of getting an object from etcd cache (bucket)
      type: cumulative
      group: etcd
    etcd_request_cache_get_latencies_summary_count:
      default: false
      description: (Deprecated) Latency in microseconds of getting an object from
        etcd cache (count)
      type: cumulative
      group: etcd
    etcd_request_cache_get_latencies_summary:
      default: false
      description: (Deprecated) Latency in microseconds of getting an object from
        etcd cache (sum)
      type: cumulative
      group: etcd
    etcd_request_cache_get_latencies_summary_quantile:
      default: false
      description: (Deprecated) Latency in microseconds of getting an object from
        etcd cache (quantized)
      type: gauge
      group: etcd
    get_token_count:
      default: false
      description: Counter of total Token() requests to the alternate token source
      type: cumulative
      group: token
    get_token_fail_count:
      default: false
      description: Counter of failed Token() requests to the alternate token source
      type: cumulative
      group: token
    go_gc_duration_seconds_count:
      default: false
      description: A summary of the GC invocation durations. (count)
      type: cumulative
      group: prometheus_go
    go_gc_duration_seconds:
      default: false
      description: A summary of the GC invocation durations. (sum)
      type: cumulative
      group: prometheus_go
    go_gc_duration_seconds_quantile:
      default: false
      description: A summary of the GC invocation durations. (quantized)
      type: gauge
      group: prometheus_go
    go_goroutines:
      default: false
      description: Number of goroutines that currently exist.
      type: gauge
      group: prometheus_go
    go_info:
      default: false
      description: Information about the Go environment.
      type: gauge
      group: prometheus_go
    go_memstats_alloc_bytes_total:
      default: false
      description: Total number of bytes allocated, even if freed.
      type: cumulative
      group: prometheus_go
    go_memstats_buck_hash_sys_bytes:
      default: false
      description: Number of bytes used by the profiling bucket hash table.
      type: gauge
      group: prometheus_go
    go_memstats_frees_total:
      default: false
      description: Total number of frees.
      type: cumulative
      group: prometheus_go
    go_memstats_gc_cpu_fraction:
      default: false
      description: The fraction of this program's available CPU time used by the GC
        since the program started.
      type: gauge
      group: prometheus_go
    go_memstats_gc_sys_bytes:
      default: false
      description: Number of bytes used for garbage collection system metadata.
      type: gauge
      group: prometheus_go
    go_memstats_heap_alloc_bytes:
      default: false
      description: Number of heap bytes allocated and still in use.
      type: gauge
      group: prometheus_go
    go_memstats_heap_idle_bytes:
      default: false
      description: Number of heap bytes waiting to be used.
      type: gauge
      group: prometheus_go
    go_memstats_heap_inuse_bytes:
      default: false
      description: Number of heap bytes that are in use.
      type: gauge
      group: prometheus_go
    go_memstats_heap_objects:
      default: false
      description: Number of allocated objects.
      type: gauge
      group: prometheus_go
    go_memstats_heap_released_bytes:
      default: false
      description: Number of heap bytes released to OS.
      type: gauge
      group: prometheus_go
    go_memstats_heap_sys_bytes:
      default: false
      description: Number of heap bytes obtained from system.
      type: gauge
      group: prometheus_go
    go_memstats_last_gc_time_seconds:
      default: false
      description: Number of seconds since 1970 of last garbage collection.
      type: gauge
      group: prometheus_go
    go_memstats_lookups_total:
      default: false
      description: Total number of pointer lookups.
      type: cumulative
      group: prometheus_go
    go_memstats_mallocs_total:
      default: false
      description: Total number of mallocs.
      type: cumulative
      group: prometheus_go
    go_memstats_mcache_inuse_bytes:
      default: false
      description: Number of bytes in use by mcache structures.
      type: gauge
      group: prometheus_go
    go_memstats_mcache_sys_bytes:
      default: false
      description: Number of bytes used for mcache structures obtained from system.
      type: gauge
      group: prometheus_go
    go_memstats_mspan_inuse_bytes:
      default: false
      description: Number of bytes in use by mspan structures.
      type: gauge
      group: prometheus_go
    go_memstats_mspan_sys_bytes:
      default: false
      description: Number of bytes used for mspan structures obtained from system.
      type: gauge
      group: prometheus_go
    go_memstats_next_gc_bytes:
      default: false
      description: Number of heap bytes when next garbage collection will take place.
      type: gauge
      group: prometheus_go
    go_memstats_other_sys_bytes:
      default: false
      description: Number of bytes used for other system allocations.
      type: gauge
      group: prometheus_go
    go_memstats_stack_inuse_bytes:
      default: false
      description: Number of bytes in use by the stack allocator.
      type: gauge
      group: prometheus_go
    go_memstats_stack_sys_bytes:
      default: false
      description: Number of bytes obtained from system for stack allocator.
      type: gauge
      group: prometheus_go
    go_memstats_sys_bytes:
      default: false
      description: Number of bytes obtained from system.
      type: gauge
      group: prometheus_go
    go_threads:
      default: false
      description: Number of OS threads created.
      type: gauge
      group: prometheus_go
    grpc_client_handled_total:
      default: false
      description: Total number of RPCs completed by the client, regardless of success
        or failure.
      type: cumulative
      group: grpc_client
    grpc_client_msg_received_total:
      default: false
      description: Total number of RPC stream messages received by the client.
      type: cumulative
      group: grpc_client
    grpc_client_msg_sent_total:
      default: false
      description: Total number of gRPC stream messages sent by the client.
      type: cumulative
      group: grpc_client
    grpc_client_started_total:
      default: false
      description: Total number of RPCs started on the client.
      type: cumulative
      group: grpc_client
    http_request_duration_microseconds_count:
      default: false
      description: The HTTP request latencies in microseconds. (count)
      type: cumulative
      group: http_request
    http_request_duration_microseconds:
      default: false
      description: The HTTP request latencies in microseconds. (sum)
      type: cumulative
      group: http_request
    http_request_duration_microseconds_quantile:
      default: false
      description: The HTTP request latencies in microseconds. (quantized)
      type: gauge
      group: http_request
    http_request_size_bytes_count:
      default: false
      description: The HTTP request sizes in bytes. (count)
      type: cumulative
      group: http_request
    http_request_size_bytes:
      default: false
      description: The HTTP request sizes in bytes. (sum)
      type: cumulative
      group: http_request
    http_request_size_bytes_quantile:
      default: false
      description: The HTTP request sizes in bytes. (quantized)
      type: gauge
      group: http_request
    http_requests:
      default: false
      description: Total number of HTTP requests made.
      type: cumulative
      group: http_request
    http_response_size_bytes_count:
      default: false
      description: The HTTP response sizes in bytes. (count)
      type: cumulative
      group: http_response
    http_response_size_bytes:
      default: false
      description: The HTTP response sizes in bytes. (sum)
      type: cumulative
      group: http_response
    http_response_size_bytes_quantile:
      default: false
      description: The HTTP response sizes in bytes. (quantized)
      type: gauge
      group: http_response
    kubernetes_build_info:
      default: false
      description: A metric with a constant '1' value labeled by major, minor, git
        version, git commit, git tree state, build date, Go version, and compiler
        from which Kubernetes was built, and platform on which it is running.
      type: gauge
    process_cpu_seconds_total:
      default: false
      description: Total user and system CPU time spent in seconds.
      type: cumulative
      group: prometheus_process
    process_max_fds:
      default: false
      description: Maximum number of open file descriptors.
      type: gauge
      group: prometheus_process
    process_open_fds:
      default: false
      description: Number of open file descriptors.
      type: gauge
      group: prometheus_process
    process_resident_memory_bytes:
      default: false
      description: Resident memory size in bytes.
      type: gauge
      group: prometheus_process
    process_start_time_seconds:
      default: false
      description: Start time of the process since unix epoch in seconds.
      type: gauge
      group: prometheus_process
    process_virtual_memory_bytes:
      default: false
      description: Virtual memory size in bytes.
      type: gauge
      group: prometheus_process
    process_virtual_memory_max_bytes:
      default: false
      description: Maximum amount of virtual memory available in bytes.
      type: gauge
      group: prometheus_process
    rest_client_request_duration_seconds_count:
      default: false
      description: Request latency in seconds. Broken down by verb and URL. (count)
      type: cumulative
      group: rest_client
    rest_client_request_duration_seconds:
      default: false
      description: Request latency in seconds. Broken down by verb and URL. (sum)
      type: cumulative
      group: rest_client
    rest_client_request_duration_seconds_bucket:
      default: false
      description: Request latency in seconds. Broken down by verb and URL. (bucket)
      type: cumulative
      group: rest_client
    rest_client_request_latency_seconds_count:
      default: false
      description: (Deprecated) Request latency in seconds. Broken down by verb and
        URL. (count)
      type: cumulative
      group: rest_client
    rest_client_request_latency_seconds:
      default: false
      description: (Deprecated) Request latency in seconds. Broken down by verb and
        URL. (sum)
      type: cumulative
      group: rest_client
    rest_client_request_latency_seconds_bucket:
      default: false
      description: (Deprecated) Request latency in seconds. Broken down by verb and
        URL. (bucket)
      type: cumulative
      group: rest_client
    rest_client_requests_total:
      default: false
      description: Number of HTTP requests, partitioned by status code, method, and
        host.
      type: cumulative
      group: rest_client
    ssh_tunnel_open_count:
      default: false
      description: Counter of ssh tunnel total open attempts
      type: cumulative
      group: ssh_tunnel
    ssh_tunnel_open_fail_count:
      default: false
      description: Counter of ssh tunnel failed open attempts
      type: cumulative
      group: ssh_tunnel
    workqueue_adds_total:
      default: true
      description: Total number of adds handled by workqueue
      type: cumulative
      group: workqueue
    workqueue_depth:
      default: true
      description: Current depth of workqueue
      type: gauge
      group: workqueue
    workqueue_longest_running_processor_seconds:
      default: false
      description: How many seconds has the longest running processor for workqueue
        been running.
      type: gauge
      group: workqueue
    workqueue_queue_duration_seconds_count:
      default: false
      description: How long in seconds an item stays in workqueue before being requested.
        (count)
      type: cumulative
      group: workqueue
    workqueue_queue_duration_seconds:
      default: false
      description: How long in seconds an item stays in workqueue before being requested.
        (sum)
      type: cumulative
      group: workqueue
    workqueue_queue_duration_seconds_bucket:
      default: false
      description: How long in seconds an item stays in workqueue before being requested.
        (bucket)
      type: cumulative
      group: workqueue
    workqueue_retries_total:
      default: false
      description: Total number of retries handled by workqueue
      type: cumulative
      group: workqueue
    workqueue_unfinished_work_seconds:
      default: false
      description: How many seconds of work has done that is in progress and hasn't
        been observed by work_duration. Large values indicate stuck threads. One can
        deduce the number of stuck threads by observing the rate at which this increases.
      type: gauge
      group: workqueue
    workqueue_work_duration_seconds_count:
      default: false
      description: How long in seconds processing an item from workqueue takes. (count)
      type: cumulative
      group: workqueue
    workqueue_work_duration_seconds:
      default: false
      description: How long in seconds processing an item from workqueue takes. (sum)
      type: cumulative
      group: workqueue
    workqueue_work_duration_seconds_bucket:
      default: false
      description: How long in seconds processing an item from workqueue takes. (bucket)
      type: cumulative
      group: workqueue
