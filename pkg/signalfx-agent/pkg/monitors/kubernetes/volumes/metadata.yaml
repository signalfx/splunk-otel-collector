monitors:
- dimensions:
    VolumeId:
      description: (*EBS volumes only*) The EBS volume id of the underlying volume
        source
    pd_name:
      description: (*GCE persistent disks only*) The GCE persistent disk name of the
        underlying volume source
    endpoints_name:
      description: (*GlusterFS volumes only*) The endpoint name used for the GlusterFS
        volume
    glusterfs_path:
      description: (*GlusterFS volumes only*) The GlusterFS volume path
    kubernetes_namespace:
      description: The namespace of the pod that has this volume
    kubernetes_pod_name:
      description: The name of the pod that has this volume
    kubernetes_pod_uid:
      description: The UID of the pod that has this volume
    fs_type:
      description: (*EBS volumes and GCE persistent disks only*) The filesystem type of
        the underlying EBS volume or GCE persistent disk
    partition:
      description: (*EBS volumes and GCE persistent disks only*) The partition number of
        the underlying EBS volume or GCE persistent disk (`0` indicates the
        entire disk)
    volume:
      description: The volume name as given in the pod spec under `volumes`
    volume_type:
      description: The type of the underlying volume -- this will be the key used
        in the k8s volume config spec (e.g. `awsElasticBlockStore`,
        `gcePersistentDisk`, `configMap`, `secret`, etc.)
  doc: |
    This monitor sends usage stats about volumes
    mounted to Kubernetes pods (e.g. free space/inodes).  This information is
    gotten from the Kubelet /stats/summary endpoint.  The normal `filesystems`
    monitor generally will not report Persistent Volume usage metrics because
    those volumes are not seen by the agent since they can be mounted
    dynamically and older versions of K8s don't support mount propagation of
    those mounts to the agent container.

    Dimensions that identify the underlying volume source will be added for
    `awsElasticBlockStore`, `gcePersistentDisk` and `glusterfs` persistent
    volumes, and for `configMap`, `downwardAPI`, `emptyDir` and `secret`
    non-persistent volumes. Support for more can be easily added as needed.

    If interested in collecting metrics from Persistent Volumes and Persistent
    Volume Claims from a RBAC enabled cluster the following permissions need to
    be granted to the Agent.

    ```yaml
    - apiGroups:
        - ""
      resources:
        - persistentvolumes
        - persistentvolumeclaims
      verbs:
        - get
    ```
  sendAll: false
  metrics:
    kubernetes.volume_available_bytes:
      description: The number of available bytes in the volume
      type: gauge
      default: true
    kubernetes.volume_capacity_bytes:
      description: The total capacity in bytes of the volume
      type: gauge
      default: true
    kubernetes.volume_inodes:
      description: The total inodes in the filesystem
      type: gauge
      default: false
    kubernetes.volume_inodes_free:
      description: The free inodes in the filesystem
      type: gauge
      default: false
    kubernetes.volume_inodes_used:
      description: The inodes used by the filesystem. This may not equal `inodes - free` because filesystem may share inodes with other filesystems.
      type: gauge
      default: false
  monitorType: kubernetes-volumes
  properties:
