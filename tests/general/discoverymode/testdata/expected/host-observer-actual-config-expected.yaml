extensions:
  host_observer:
    refresh_interval: 1s
exporters:
  otlp:
    endpoint: "{{ .OTLPEndpoint }}"
    tls:
      insecure: true
processors:
  filter:
    metrics:
      include:
        match_type: strict
        metric_names: [otelcol_process_uptime]
receivers:
  discovery/host_observer:
    watch_observers: [host_observer]
    embed_receiver_config: true
    receivers:
      prometheus_simple:
        service_type: otelcol
        rule: type == "hostport" and command contains "otelcol" and port == {{ .PromPort }}
        config:
          collection_interval: 1s
          labels:
            label_one: actual.label.one.value.from.env.var
            label_two: actual.label.two.value.from.env.var
            label_three: actual.label.three.value.from.cmdline.property
        status:
          metrics:
            - status: successful
              strict: otelcol_process_uptime
              message: internal collector prometheus exporter detected
service:
  telemetry:
    resource:
      splunk_autodiscovery: "true"
    metrics:
      level: normal
      readers:
        - pull:
            exporter:
              prometheus:
                host: localhost
                port: {{ .PromPort }}
                without_scope_info: true
                without_type_suffix: true
                without_units: true
  extensions: [host_observer]
  pipelines:
    metrics:
      receivers: [discovery/host_observer]
      exporters: [otlp]
      processors: [filter]

