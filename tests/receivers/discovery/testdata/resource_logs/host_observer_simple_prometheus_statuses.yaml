resource_logs:
  - scope_logs:
      - logs:
          - attributes:
              otel.entity.id:
                discovery.endpoint.id: (host_observer)[::]-8888-TCP-1
              otel.entity.event.type: entity_state
              otel.entity.attributes:
                discovery.event.type: metric.match
                discovery.observer.id: host_observer
                discovery.receiver.config: cmVjZWl2ZXJzOgogIHByb21ldGhldXNfc2ltcGxlOgogICAgY29uZmlnOiB7fQogICAgcmVzb3VyY2VfYXR0cmlidXRlczoKICAgICAgb25lLmtleTogb25lLnZhbHVlCiAgICAgIHR3by5rZXk6IHR3by52YWx1ZQogICAgcnVsZTogdHlwZSA9PSAiaG9zdHBvcnQiIGFuZCBjb21tYW5kIGNvbnRhaW5zICJvdGVsY29sIgp3YXRjaF9vYnNlcnZlcnM6Ci0gaG9zdF9vYnNlcnZlcgo=
                discovery.receiver.rule: type == "hostport" and command contains "otelcol"
                discovery.receiver.type: prometheus_simple
                http.scheme: http
                net.host.port: "8888"
                one.key: one.value
                service.instance.id: '[::]:8888'
                service.name: prometheus_simple/[::]:8888
                two.key: two.value
                service_instance_id: <ANY>
                service_name: otelcol
                service_version: <VERSION_FROM_BUILD>
                discovery.status: successful
                discovery.message: Successfully connected to prometheus server
                metric.name: otelcol_process_uptime
                discovery.observer.type: host_observer
                discovery.observer.name: ""
                command: /otelcol --config /etc/config.yaml
                endpoint: '[::]:8888'
                is_ipv6: true
                port: 8888
                process_name: otelcol
                transport: TCP
                type: hostport
  - scope_logs:
      - logs:
          - attributes:
              otel.entity.id:
                discovery.endpoint.id: (host_observer)[::]-4318-TCP-1
              otel.entity.event.type: entity_state
              otel.entity.attributes:
                discovery.event.type: statement.match
                discovery.observer.id: host_observer
                discovery.receiver.config: cmVjZWl2ZXJzOgogIHByb21ldGhldXNfc2ltcGxlOgogICAgY29uZmlnOiB7fQogICAgcmVzb3VyY2VfYXR0cmlidXRlczoKICAgICAgb25lLmtleTogb25lLnZhbHVlCiAgICAgIHR3by5rZXk6IHR3by52YWx1ZQogICAgcnVsZTogdHlwZSA9PSAiaG9zdHBvcnQiIGFuZCBjb21tYW5kIGNvbnRhaW5zICJvdGVsY29sIgp3YXRjaF9vYnNlcnZlcnM6Ci0gaG9zdF9vYnNlcnZlcgo=
                discovery.receiver.name: ""
                discovery.receiver.rule: type == "hostport" and command contains "otelcol"
                discovery.receiver.type: prometheus_simple
                caller: <ANY>
                discovery.status: failed
                discovery.message: (strict) Port appears to not be serving prometheus metrics
                kind: receiver
                name: prometheus_simple//receiver_creator/discovery{endpoint="[::]:4318"}/(host_observer)[::]-4318-TCP-1
                target_labels: '{__name__="up", instance="[::]:4318", job="prometheus_simple/[::]:4318"}'
                discovery.observer.name: ""
                discovery.observer.type: host_observer
                command: /otelcol --config /etc/config.yaml
                endpoint: '[::]:4318'
                is_ipv6: true
                port: 4318
                process_name: otelcol
                transport: TCP
                type: hostport
