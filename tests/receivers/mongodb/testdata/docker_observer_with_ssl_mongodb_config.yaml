extensions:
  docker_observer:

receivers:
  discovery:
    embed_receiver_config: true
    receivers:
      mongodb:
        config:
          password: user1
          tls:
            insecure: false
            insecure_skip_verify: true
          username: user1
        rule: type == "container" and any([name, image, command], {# matches "(?i)mongo"}) and not (command matches "splunk.discovery")
        status:
          metrics:
            - status: successful
              strict: mongodb.index.size
              log_record:
                body: mongodb receiver is working!
          statements:
            - status: failed
              regexp: 'connect: network is unreachable'
              log_record:
                body: The container cannot be reached by the Collector. Make sure they're in the same network.
            - status: failed
              regexp: 'connect: connection refused'
              log_record:
                body: The container is refusing mongodb connections.
            - status: partial
              regexp: '.* unable to authenticate using mechanism .*'
              log_record:
                body: >-
                    Please ensure your user credentials are correctly specified with
                    `{{ configPropertyEnvVar "username" "<username>" }}` and
                    `{{ configPropertyEnvVar "password" "<password>" }}` environment variables.
            - status: partial
              regexp: '.*not authorized on admin to execute command.*'
              log_record:
                body: >-
                  Make sure the account used to access Mongodb has been given a clusterMonitor role in order to collect metrics.
                  `db.grantRolesToUser('someUser', [{ role: 'clusterMonitor', db: 'admin' }])`
    watch_observers:
      - docker_observer

exporters:
  debug:
    verbosity: detailed

service:
  telemetry:
    logs:
      level: info
  extensions:
    - docker_observer
  pipelines:
    logs:
      receivers: [discovery]
      exporters: [debug]
