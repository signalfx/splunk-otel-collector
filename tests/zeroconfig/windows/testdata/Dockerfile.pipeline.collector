# escape=`

ARG windowscontainer_version=ltsc2022
FROM mcr.microsoft.com/windows/servercore:${windowscontainer_version}

# On ltsc2019 RUN defaults to "powershell -Command {0}", while ltsc2022 RUN defaults to "cmd /S /C"
# set the SHELL so it is consistent between both versions.
SHELL [ "powershell", "-Command", "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';" ]

COPY docker-setup/ /setup
COPY ./pipeline-collector.yaml /setup

# WARNING: Passing access token as a build argument is to facilitate manual validation of this Dockerfile. It shouldn't be used in production.
ARG verify_access_token=false
ARG access_token=some_token
ENV VERIFY_ACCESS_TOKEN=$verify_access_token
ENV ACCESS_TOKEN_TMP=$access_token
RUN `
    $token = $Env:ACCESS_TOKEN_TMP; `
    $collector_msi_path = (dir "c:\setup\splunk-otel-collector-*.msi").FullName; `
    c:\setup\install.ps1 -access_token $token -msi_path $collector_msi_path -config_path "C:\setup\pipeline-collector.yaml" -with_fluentd $false -ingest_url "http://192.0.2.1:12345" -trace_url "http://192.0.2.1:12345" -network_interface "0.0.0.0"
ENV ACCESS_TOKEN_TMP=

# On docker compose the entry point needs to be changed to something that keeps the container alive.
ENTRYPOINT [ "powershell", "-Command", "Start-Sleep 5; While ($? -eq '1') { Start-Sleep 5; Invoke-WebRequest -Uri http://localhost:13133/health_check -TimeoutSec 10 -UseBasicParsing }" ]
